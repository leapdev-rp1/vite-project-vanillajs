var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/uuid/dist/esm-browser/rng.js
function rng() {
  if (!getRandomValues) {
    getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== "undefined" && typeof msCrypto.getRandomValues === "function" && msCrypto.getRandomValues.bind(msCrypto);
    if (!getRandomValues) {
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    }
  }
  return getRandomValues(rnds8);
}
var getRandomValues, rnds8;
var init_rng = __esm({
  "node_modules/uuid/dist/esm-browser/rng.js"() {
    rnds8 = new Uint8Array(16);
  }
});

// node_modules/uuid/dist/esm-browser/regex.js
var regex_default;
var init_regex = __esm({
  "node_modules/uuid/dist/esm-browser/regex.js"() {
    regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
  }
});

// node_modules/uuid/dist/esm-browser/validate.js
function validate(uuid) {
  return typeof uuid === "string" && regex_default.test(uuid);
}
var validate_default;
var init_validate = __esm({
  "node_modules/uuid/dist/esm-browser/validate.js"() {
    init_regex();
    validate_default = validate;
  }
});

// node_modules/uuid/dist/esm-browser/stringify.js
function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
  if (!validate_default(uuid)) {
    throw TypeError("Stringified UUID is invalid");
  }
  return uuid;
}
var byteToHex, i, stringify_default;
var init_stringify = __esm({
  "node_modules/uuid/dist/esm-browser/stringify.js"() {
    init_validate();
    byteToHex = [];
    for (i = 0; i < 256; ++i) {
      byteToHex.push((i + 256).toString(16).substr(1));
    }
    stringify_default = stringify;
  }
});

// node_modules/uuid/dist/esm-browser/v1.js
function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || new Array(16);
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== void 0 ? options.clockseq : _clockseq;
  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || rng)();
    if (node == null) {
      node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }
    if (clockseq == null) {
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383;
    }
  }
  var msecs = options.msecs !== void 0 ? options.msecs : Date.now();
  var nsecs = options.nsecs !== void 0 ? options.nsecs : _lastNSecs + 1;
  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;
  if (dt < 0 && options.clockseq === void 0) {
    clockseq = clockseq + 1 & 16383;
  }
  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === void 0) {
    nsecs = 0;
  }
  if (nsecs >= 1e4) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }
  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;
  msecs += 122192928e5;
  var tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;
  b[i++] = tl >>> 24 & 255;
  b[i++] = tl >>> 16 & 255;
  b[i++] = tl >>> 8 & 255;
  b[i++] = tl & 255;
  var tmh = msecs / 4294967296 * 1e4 & 268435455;
  b[i++] = tmh >>> 8 & 255;
  b[i++] = tmh & 255;
  b[i++] = tmh >>> 24 & 15 | 16;
  b[i++] = tmh >>> 16 & 255;
  b[i++] = clockseq >>> 8 | 128;
  b[i++] = clockseq & 255;
  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }
  return buf || stringify_default(b);
}
var _nodeId, _clockseq, _lastMSecs, _lastNSecs, v1_default;
var init_v1 = __esm({
  "node_modules/uuid/dist/esm-browser/v1.js"() {
    init_rng();
    init_stringify();
    _lastMSecs = 0;
    _lastNSecs = 0;
    v1_default = v1;
  }
});

// node_modules/uuid/dist/esm-browser/parse.js
function parse(uuid) {
  if (!validate_default(uuid)) {
    throw TypeError("Invalid UUID");
  }
  var v;
  var arr = new Uint8Array(16);
  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 255;
  arr[2] = v >>> 8 & 255;
  arr[3] = v & 255;
  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 255;
  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 255;
  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 255;
  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;
  arr[11] = v / 4294967296 & 255;
  arr[12] = v >>> 24 & 255;
  arr[13] = v >>> 16 & 255;
  arr[14] = v >>> 8 & 255;
  arr[15] = v & 255;
  return arr;
}
var parse_default;
var init_parse = __esm({
  "node_modules/uuid/dist/esm-browser/parse.js"() {
    init_validate();
    parse_default = parse;
  }
});

// node_modules/uuid/dist/esm-browser/v35.js
function stringToBytes(str) {
  str = unescape(encodeURIComponent(str));
  var bytes = [];
  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }
  return bytes;
}
function v35_default(name, version3, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === "string") {
      value = stringToBytes(value);
    }
    if (typeof namespace === "string") {
      namespace = parse_default(namespace);
    }
    if (namespace.length !== 16) {
      throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
    }
    var bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 15 | version3;
    bytes[8] = bytes[8] & 63 | 128;
    if (buf) {
      offset = offset || 0;
      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }
      return buf;
    }
    return stringify_default(bytes);
  }
  try {
    generateUUID.name = name;
  } catch (err) {
  }
  generateUUID.DNS = DNS;
  generateUUID.URL = URL2;
  return generateUUID;
}
var DNS, URL2;
var init_v35 = __esm({
  "node_modules/uuid/dist/esm-browser/v35.js"() {
    init_stringify();
    init_parse();
    DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    URL2 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
  }
});

// node_modules/uuid/dist/esm-browser/md5.js
function md5(bytes) {
  if (typeof bytes === "string") {
    var msg = unescape(encodeURIComponent(bytes));
    bytes = new Uint8Array(msg.length);
    for (var i = 0; i < msg.length; ++i) {
      bytes[i] = msg.charCodeAt(i);
    }
  }
  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
function md5ToHexEncodedArray(input) {
  var output = [];
  var length32 = input.length * 32;
  var hexTab = "0123456789abcdef";
  for (var i = 0; i < length32; i += 8) {
    var x = input[i >> 5] >>> i % 32 & 255;
    var hex = parseInt(hexTab.charAt(x >>> 4 & 15) + hexTab.charAt(x & 15), 16);
    output.push(hex);
  }
  return output;
}
function getOutputLength(inputLength8) {
  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
}
function wordsToMd5(x, len) {
  x[len >> 5] |= 128 << len % 32;
  x[getOutputLength(len) - 1] = len;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;
  for (var i = 0; i < x.length; i += 16) {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }
  return [a, b, c, d];
}
function bytesToWords(input) {
  if (input.length === 0) {
    return [];
  }
  var length8 = input.length * 8;
  var output = new Uint32Array(getOutputLength(length8));
  for (var i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 255) << i % 32;
  }
  return output;
}
function safeAdd(x, y) {
  var lsw = (x & 65535) + (y & 65535);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 65535;
}
function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}
function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}
function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}
function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}
var md5_default;
var init_md5 = __esm({
  "node_modules/uuid/dist/esm-browser/md5.js"() {
    md5_default = md5;
  }
});

// node_modules/uuid/dist/esm-browser/v3.js
var v3, v3_default;
var init_v3 = __esm({
  "node_modules/uuid/dist/esm-browser/v3.js"() {
    init_v35();
    init_md5();
    v3 = v35_default("v3", 48, md5_default);
    v3_default = v3;
  }
});

// node_modules/uuid/dist/esm-browser/v4.js
function v4(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || rng)();
  rnds[6] = rnds[6] & 15 | 64;
  rnds[8] = rnds[8] & 63 | 128;
  if (buf) {
    offset = offset || 0;
    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }
    return buf;
  }
  return stringify_default(rnds);
}
var v4_default;
var init_v4 = __esm({
  "node_modules/uuid/dist/esm-browser/v4.js"() {
    init_rng();
    init_stringify();
    v4_default = v4;
  }
});

// node_modules/uuid/dist/esm-browser/sha1.js
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;
    case 1:
      return x ^ y ^ z;
    case 2:
      return x & y ^ x & z ^ y & z;
    case 3:
      return x ^ y ^ z;
  }
}
function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}
function sha1(bytes) {
  var K = [1518500249, 1859775393, 2400959708, 3395469782];
  var H = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  if (typeof bytes === "string") {
    var msg = unescape(encodeURIComponent(bytes));
    bytes = [];
    for (var i = 0; i < msg.length; ++i) {
      bytes.push(msg.charCodeAt(i));
    }
  } else if (!Array.isArray(bytes)) {
    bytes = Array.prototype.slice.call(bytes);
  }
  bytes.push(128);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);
  for (var _i = 0; _i < N; ++_i) {
    var arr = new Uint32Array(16);
    for (var j = 0; j < 16; ++j) {
      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];
    }
    M[_i] = arr;
  }
  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 4294967295;
  for (var _i2 = 0; _i2 < N; ++_i2) {
    var W = new Uint32Array(80);
    for (var t = 0; t < 16; ++t) {
      W[t] = M[_i2][t];
    }
    for (var _t = 16; _t < 80; ++_t) {
      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
    }
    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];
    for (var _t2 = 0; _t2 < 80; ++_t2) {
      var s = Math.floor(_t2 / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }
    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }
  return [H[0] >> 24 & 255, H[0] >> 16 & 255, H[0] >> 8 & 255, H[0] & 255, H[1] >> 24 & 255, H[1] >> 16 & 255, H[1] >> 8 & 255, H[1] & 255, H[2] >> 24 & 255, H[2] >> 16 & 255, H[2] >> 8 & 255, H[2] & 255, H[3] >> 24 & 255, H[3] >> 16 & 255, H[3] >> 8 & 255, H[3] & 255, H[4] >> 24 & 255, H[4] >> 16 & 255, H[4] >> 8 & 255, H[4] & 255];
}
var sha1_default;
var init_sha1 = __esm({
  "node_modules/uuid/dist/esm-browser/sha1.js"() {
    sha1_default = sha1;
  }
});

// node_modules/uuid/dist/esm-browser/v5.js
var v5, v5_default;
var init_v5 = __esm({
  "node_modules/uuid/dist/esm-browser/v5.js"() {
    init_v35();
    init_sha1();
    v5 = v35_default("v5", 80, sha1_default);
    v5_default = v5;
  }
});

// node_modules/uuid/dist/esm-browser/nil.js
var nil_default;
var init_nil = __esm({
  "node_modules/uuid/dist/esm-browser/nil.js"() {
    nil_default = "00000000-0000-0000-0000-000000000000";
  }
});

// node_modules/uuid/dist/esm-browser/version.js
function version(uuid) {
  if (!validate_default(uuid)) {
    throw TypeError("Invalid UUID");
  }
  return parseInt(uuid.substr(14, 1), 16);
}
var version_default;
var init_version = __esm({
  "node_modules/uuid/dist/esm-browser/version.js"() {
    init_validate();
    version_default = version;
  }
});

// node_modules/uuid/dist/esm-browser/index.js
var esm_browser_exports = {};
__export(esm_browser_exports, {
  NIL: () => nil_default,
  parse: () => parse_default,
  stringify: () => stringify_default,
  v1: () => v1_default,
  v3: () => v3_default,
  v4: () => v4_default,
  v5: () => v5_default,
  validate: () => validate_default,
  version: () => version_default
});
var init_esm_browser = __esm({
  "node_modules/uuid/dist/esm-browser/index.js"() {
    init_v1();
    init_v3();
    init_v4();
    init_v5();
    init_nil();
    init_version();
    init_validate();
    init_stringify();
    init_parse();
  }
});

// node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/lodash/lodash.js"(exports, module) {
    (function() {
      var undefined2;
      var VERSION2 = "4.17.21";
      var LARGE_ARRAY_SIZE = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrimStart = /^\s+/;
      var reWhitespace = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['’]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        // Latin-1 Supplement block.
        "À": "A",
        "Á": "A",
        "Â": "A",
        "Ã": "A",
        "Ä": "A",
        "Å": "A",
        "à": "a",
        "á": "a",
        "â": "a",
        "ã": "a",
        "ä": "a",
        "å": "a",
        "Ç": "C",
        "ç": "c",
        "Ð": "D",
        "ð": "d",
        "È": "E",
        "É": "E",
        "Ê": "E",
        "Ë": "E",
        "è": "e",
        "é": "e",
        "ê": "e",
        "ë": "e",
        "Ì": "I",
        "Í": "I",
        "Î": "I",
        "Ï": "I",
        "ì": "i",
        "í": "i",
        "î": "i",
        "ï": "i",
        "Ñ": "N",
        "ñ": "n",
        "Ò": "O",
        "Ó": "O",
        "Ô": "O",
        "Õ": "O",
        "Ö": "O",
        "Ø": "O",
        "ò": "o",
        "ó": "o",
        "ô": "o",
        "õ": "o",
        "ö": "o",
        "ø": "o",
        "Ù": "U",
        "Ú": "U",
        "Û": "U",
        "Ü": "U",
        "ù": "u",
        "ú": "u",
        "û": "u",
        "ü": "u",
        "Ý": "Y",
        "ý": "y",
        "ÿ": "y",
        "Æ": "Ae",
        "æ": "ae",
        "Þ": "Th",
        "þ": "th",
        "ß": "ss",
        // Latin Extended-A block.
        "Ā": "A",
        "Ă": "A",
        "Ą": "A",
        "ā": "a",
        "ă": "a",
        "ą": "a",
        "Ć": "C",
        "Ĉ": "C",
        "Ċ": "C",
        "Č": "C",
        "ć": "c",
        "ĉ": "c",
        "ċ": "c",
        "č": "c",
        "Ď": "D",
        "Đ": "D",
        "ď": "d",
        "đ": "d",
        "Ē": "E",
        "Ĕ": "E",
        "Ė": "E",
        "Ę": "E",
        "Ě": "E",
        "ē": "e",
        "ĕ": "e",
        "ė": "e",
        "ę": "e",
        "ě": "e",
        "Ĝ": "G",
        "Ğ": "G",
        "Ġ": "G",
        "Ģ": "G",
        "ĝ": "g",
        "ğ": "g",
        "ġ": "g",
        "ģ": "g",
        "Ĥ": "H",
        "Ħ": "H",
        "ĥ": "h",
        "ħ": "h",
        "Ĩ": "I",
        "Ī": "I",
        "Ĭ": "I",
        "Į": "I",
        "İ": "I",
        "ĩ": "i",
        "ī": "i",
        "ĭ": "i",
        "į": "i",
        "ı": "i",
        "Ĵ": "J",
        "ĵ": "j",
        "Ķ": "K",
        "ķ": "k",
        "ĸ": "k",
        "Ĺ": "L",
        "Ļ": "L",
        "Ľ": "L",
        "Ŀ": "L",
        "Ł": "L",
        "ĺ": "l",
        "ļ": "l",
        "ľ": "l",
        "ŀ": "l",
        "ł": "l",
        "Ń": "N",
        "Ņ": "N",
        "Ň": "N",
        "Ŋ": "N",
        "ń": "n",
        "ņ": "n",
        "ň": "n",
        "ŋ": "n",
        "Ō": "O",
        "Ŏ": "O",
        "Ő": "O",
        "ō": "o",
        "ŏ": "o",
        "ő": "o",
        "Ŕ": "R",
        "Ŗ": "R",
        "Ř": "R",
        "ŕ": "r",
        "ŗ": "r",
        "ř": "r",
        "Ś": "S",
        "Ŝ": "S",
        "Ş": "S",
        "Š": "S",
        "ś": "s",
        "ŝ": "s",
        "ş": "s",
        "š": "s",
        "Ţ": "T",
        "Ť": "T",
        "Ŧ": "T",
        "ţ": "t",
        "ť": "t",
        "ŧ": "t",
        "Ũ": "U",
        "Ū": "U",
        "Ŭ": "U",
        "Ů": "U",
        "Ű": "U",
        "Ų": "U",
        "ũ": "u",
        "ū": "u",
        "ŭ": "u",
        "ů": "u",
        "ű": "u",
        "ų": "u",
        "Ŵ": "W",
        "ŵ": "w",
        "Ŷ": "Y",
        "ŷ": "y",
        "Ÿ": "Y",
        "Ź": "Z",
        "Ż": "Z",
        "Ž": "Z",
        "ź": "z",
        "ż": "z",
        "ž": "z",
        "Ĳ": "IJ",
        "ĳ": "ij",
        "Œ": "Oe",
        "œ": "oe",
        "ŉ": "'n",
        "ſ": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt = parseInt;
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while (++index < length) {
          array[offset + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection2) {
          if (predicate(value, key, collection2)) {
            result = key;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? undefined2 : object[key];
        };
      }
      function basePropertyOf(object) {
        return function(key) {
          return object == null ? undefined2 : object[key];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current = iteratee(array[index]);
          if (current !== undefined2) {
            result = result === undefined2 ? current : result + current;
          }
        }
        return result;
      }
      function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
          return [key, object[key]];
        });
      }
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props) {
        return arrayMap(props, function(key) {
          return object[key];
        });
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue(object, key) {
        return object == null ? undefined2 : object[key];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data, result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
          result[++index] = [key, value];
        });
        return result;
      }
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
        var coreJsData = context["__core-js_shared__"];
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var idCounter = 0;
        var maskSrcKey = function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString = objectProto.toString;
        var objectCtorString = funcToString.call(Object2);
        var oldDash = root._;
        var reIsNative = RegExp2(
          "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer2 = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined2;
        var defineProperty = function() {
          try {
            var func = getNative(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
        var DataView2 = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
        var metaMap = WeakMap2 && new WeakMap2();
        var realNames = {};
        var dataViewCtorString = toSource(DataView2), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap2);
        var symbolProto = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
        function lodash(value) {
          if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate = function() {
          function object() {
          }
          return function(proto) {
            if (!isObject(proto)) {
              return {};
            }
            if (objectCreate) {
              return objectCreate(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "escape": reEscape,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "evaluate": reEvaluate,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "interpolate": reInterpolate,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          "variable": "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          "imports": {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
          this.size = 0;
        }
        function hashDelete(key) {
          var result2 = this.has(key) && delete this.__data__[key];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result2 = data[key];
            return result2 === HASH_UNDEFINED ? undefined2 : result2;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined2;
        }
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined2 : hasOwnProperty.call(data, key);
        }
        function hashSet(key, value) {
          var data = this.__data__;
          this.size += this.has(key) ? 0 : 1;
          data[key] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          return index < 0 ? undefined2 : data[index][1];
        }
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            ++this.size;
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash(),
            "map": new (Map2 || ListCache)(),
            "string": new Hash()
          };
        }
        function mapCacheDelete(key) {
          var result2 = getMapData(this, key)["delete"](key);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
          var data = getMapData(this, key), size2 = data.size;
          data.set(key, value);
          this.size += data.size == size2 ? 0 : 1;
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          var data = this.__data__ = new ListCache(entries);
          this.size = data.size;
        }
        function stackClear() {
          this.__data__ = new ListCache();
          this.size = 0;
        }
        function stackDelete(key) {
          var data = this.__data__, result2 = data["delete"](key);
          this.size = data.size;
          return result2;
        }
        function stackGet(key) {
          return this.__data__.get(key);
        }
        function stackHas(key) {
          return this.__data__.has(key);
        }
        function stackSet(key, value) {
          var data = this.__data__;
          if (data instanceof ListCache) {
            var pairs = data.__data__;
            if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              this.size = ++data.size;
              return this;
            }
            data = this.__data__ = new MapCache(pairs);
          }
          data.set(key, value);
          this.size = data.size;
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
          for (var key in value) {
            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
            isIndex(key, length)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n) {
          return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray(array));
        }
        function assignMergeValue(object, key, value) {
          if (value !== undefined2 && !eq(object[key], value) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject(source, keysIn(source), object);
        }
        function baseAssignValue(object, key, value) {
          if (key == "__proto__" && defineProperty) {
            defineProperty(object, key, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject(value)) {
            return value;
          }
          var isArr = isArray(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result2);
            }
          } else {
            var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key2) {
              result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
          var props = isArr ? undefined2 : keysFunc(value);
          arrayEach(props || value, function(subValue, key2) {
            if (props) {
              key2 = subValue;
              subValue = value[key2];
            }
            assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key = props[length], predicate = source[key], value = object[key];
            if (value === undefined2 && !(key in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap(values2, baseUnary(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE) {
            includes2 = cacheHas;
            isCommon = false;
            values2 = new SetCache(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current = iteratee2(value);
            if (current != null && (computed === undefined2 ? current === current && !isSymbol(current) : comparator(current, computed))) {
              var computed = current, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger(start);
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end === undefined2 || end > length ? length : toInteger(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor(object, iteratee2, keys);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys);
        }
        function baseFunctions(object, props) {
          return arrayFilter(props, function(key) {
            return isFunction(object[key]);
          });
        }
        function baseGet(object, path) {
          path = castPath(path, object);
          var index = 0, length = path.length;
          while (object != null && index < length) {
            object = object[toKey(path[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));
        }
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key) {
          return object != null && hasOwnProperty.call(object, key);
        }
        function baseHasIn(object, key) {
          return object != null && key in Object2(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap(array, baseUnary(iteratee2));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key, object2) {
            setter(accumulator, iteratee2(value), key, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath(path, object);
          object = parent(object, path);
          var func = object == null ? object : object[toKey(last(path))];
          return func == null ? undefined2 : apply(func, object, args);
        }
        function baseIsArguments(value) {
          return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        function baseIsEqual(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
          objTag = objTag == argsTag ? objectTag : objTag;
          othTag = othTag == argsTag ? objectTag : othTag;
          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer(object)) {
            if (!isBuffer(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack());
            return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack());
          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike(value) && getTag(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data = matchData[index];
            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data = matchData[index];
            var key = data[0], objValue = object[key], srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined2 && !(key in object)) {
                return false;
              }
            } else {
              var stack = new Stack();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike(value) && getTag(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == "object") {
            return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result2 = [];
          for (var key in Object2(object)) {
            if (hasOwnProperty.call(object, key) && key != "constructor") {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseKeysIn(object) {
          if (!isObject(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object), result2 = [];
          for (var key in object) {
            if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key, collection2) {
            result2[++index] = iteratee2(value, key, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path), srcValue);
          }
          return function(object) {
            var objValue = get(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor(source, function(srcValue, key) {
            stack || (stack = new Stack());
            if (isObject(srcValue)) {
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          }, keysIn);
        }
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              newValue = objValue;
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject(objValue) || isFunction(objValue)) {
                newValue = initCloneObject(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex(n, length) ? array[n] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap(iteratees, function(iteratee2) {
              if (isArray(iteratee2)) {
                return function(value) {
                  return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity];
          }
          var index = -1;
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          var result2 = baseMap(collection, function(value, key, collection2) {
            var criteria = arrayMap(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path) {
            return hasIn(object, path);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path = paths[index], value = baseGet(object, path);
            if (predicate(value, path)) {
              baseSet(result2, castPath(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet(object, path);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
          if (array === values2) {
            values2 = copyArray(values2);
          }
          if (iteratee2) {
            seen = arrayMap(array, baseUnary(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice.call(seen, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start;
            start += step;
          }
          return result2;
        }
        function baseRepeat(string, n) {
          var result2 = "";
          if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
            return result2;
          }
          do {
            if (n % 2) {
              result2 += string;
            }
            n = nativeFloor(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result2;
        }
        function baseRest(func, start) {
          return setToString(overRest(func, start, identity), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject(object)) {
            return object;
          }
          path = castPath(path, object);
          var index = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key = toKey(path[index]), newValue = value;
            if (key === "__proto__" || key === "constructor" || key === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key];
              newValue = customizer ? customizer(objValue, key, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
              }
            }
            assignValue(nested, key, newValue);
            nested = nested[key];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        var baseSetToString = !defineProperty ? identity : function(func, string) {
          return defineProperty(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start, end) {
          var index = -1, length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : end - start >>> 0;
          start >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray(value)) {
            return arrayMap(value, baseToString) + "";
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray(set2);
            }
            isCommon = false;
            includes2 = cacheHas;
            seen = new SetCache();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path) {
          path = castPath(path, object);
          object = parent(object, path);
          return object == null || delete object[toKey(last(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props, values2, assignFunc) {
          var index = -1, length = props.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity;
        }
        function castPath(value, object) {
          if (isArray(value)) {
            return value;
          }
          return isKey(value, object) ? [value] : stringToPath(toString(value));
        }
        var castRest = baseRest;
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined2 ? length : end;
          return !start && end >= length ? array : baseSlice(array, start, end);
        }
        var clearTimeout2 = ctxClearTimeout || function(id) {
          return root.clearTimeout(id);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order = orders[index];
              return result2 * (order == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props.length;
          while (++index < length) {
            var key = props[index];
            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key];
            }
            if (isNew) {
              baseAssignValue(object, key, newValue);
            } else {
              assignValue(object, key, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
            while (length--) {
              var key = props[fromRight ? length : ++index];
              if (iteratee2(iterable[key], key, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return fn.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return apply(fn, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key) {
                return iteratee2(iterable[key], key, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
              if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn = Ctor || createCtor(fn);
            }
            return fn.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString(value);
                other = baseToString(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
              end = step = undefined2;
            }
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function(values2) {
          return new Set(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key, object) {
          if (objValue === undefined2 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
          if (isObject(objValue) && isObject(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject(value) ? undefined2 : value;
        }
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome(other, function(othValue2, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == other + "";
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key = objProps[index];
            var objValue = object[key], othValue = other[key];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString(overRest(func, undefined2, flatten), func + "");
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data = array[length], otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData(map2, key) {
          var data = map2.__data__;
          return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        function getMatchData(object) {
          var result2 = keys(object), length = result2.length;
          while (length--) {
            var key = result2[length], value = object[key];
            result2[length] = [key, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined2;
        }
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
          try {
            value[symToStringTag] = undefined2;
            var unmasked = true;
          } catch (e) {
          }
          var result2 = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result2;
        }
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter(nativeGetSymbols(object), function(symbol) {
            return propertyIsEnumerable.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result2 = [];
          while (object) {
            arrayPush(result2, getSymbols(object));
            object = getPrototype(object);
          }
          return result2;
        };
        var getTag = baseGetTag;
        if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
          getTag = function(value) {
            var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result2;
          };
        }
        function getView(start, end, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data = transforms[index], size2 = data.size;
            switch (data.type) {
              case "drop":
                start += size2;
                break;
              case "dropRight":
                end -= size2;
                break;
              case "take":
                end = nativeMin(end, start + size2);
                break;
              case "takeRight":
                start = nativeMax(start, end - size2);
                break;
            }
          }
          return { "start": start, "end": end };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path, hasFunc) {
          path = castPath(path, object);
          var index = -1, length = path.length, result2 = false;
          while (++index < length) {
            var key = toKey(path[index]);
            if (!(result2 = object != null && hasFunc(object, key))) {
              break;
            }
            object = object[key];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject(object) {
          return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return new Ctor();
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return new Ctor();
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
        }
        function isKeyable(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }
        var isMaskable = coreJsData ? isFunction : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject(value);
        }
        function matchesStrictComparable(key, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key] === srcValue && (srcValue !== undefined2 || key in Object2(object));
          };
        }
        function memoizeCapped(func) {
          var result2 = memoize(func, function(key) {
            if (cache.size === MAX_MEMOIZE_SIZE) {
              cache.clear();
            }
            return key;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data, source) {
          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function nativeKeysIn(object) {
          var result2 = [];
          if (object != null) {
            for (var key in Object2(object)) {
              result2.push(key);
            }
          }
          return result2;
        }
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }
        function overRest(func, start, transform2) {
          start = nativeMax(start === undefined2 ? func.length - 1 : start, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array2(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = transform2(array);
            return apply(func, this, otherArgs);
          };
        }
        function parent(object, path) {
          return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet(object, key) {
          if (key === "constructor" && typeof object[key] === "function") {
            return;
          }
          if (key == "__proto__") {
            return;
          }
          return object[key];
        }
        var setData = shortOut(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setToString = shortOut(baseSetToString);
        function setWrapToString(wrapper, reference, bitmask) {
          var source = reference + "";
          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut(func) {
          var count = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT) {
                return arguments[0];
              }
            } else {
              count = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath = memoizeCapped(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName, function(match, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
          });
          return result2;
        });
        function toKey(value) {
          if (typeof value == "string" || isSymbol(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {
            }
            try {
              return func + "";
            } catch (e) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax(toInteger(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values2) {
          var iteratee2 = last(values2);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values2) {
          var comparator = last(values2);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
        });
        function drop(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee2 === last(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n) {
          return array && array.length ? baseNth(array, toInteger(n)) : undefined2;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger(start);
            end = end === undefined2 ? length : toInteger(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
        });
        function uniq(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap(result2, function(group) {
            return apply(iteratee2, undefined2, group);
          });
        }
        var without = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
        });
        var xor = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props, values2) {
          return baseZipObject(props || [], values2 || [], assignValue);
        }
        function zipObjectDeep(props, values2) {
          return baseZipObject(props || [], values2 || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone2 = wrapperClone(parent2);
            clone2.__index__ = 0;
            clone2.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone2;
            } else {
              result2 = clone2;
            }
            var previous = clone2;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            ++result2[key];
          } else {
            baseAssignValue(result2, key, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), INFINITY);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(map(collection, iteratee2), depth);
        }
        function forEach(collection, iteratee2) {
          var func = isArray(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            result2[key].push(value);
          } else {
            baseAssignValue(result2, key, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest(function(collection, path, args) {
          var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key) {
          baseAssignValue(result2, key, value);
        });
        function map(collection, iteratee2) {
          var func = isArray(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key) {
          result2[key ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n, guard) {
          if (guard ? isIterateeCall(collection, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          var func = isArray(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n);
        }
        function shuffle(collection) {
          var func = isArray(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined2 : n;
          n = func && n == null ? func.length : n;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
        }
        function before(n, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now());
          }
          function debounced() {
            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key)) {
              return cache.get(key);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1, length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start === undefined2 ? start : toInteger(start);
          return baseRest(func, start);
        }
        function spread(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start == null ? 0 : nativeMax(toInteger(start), 0);
          return baseRest(function(args) {
            var array = args[start], otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments = baseIsArguments(function() {
          return arguments;
        }()) ? baseIsArguments : function(value) {
          return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        var isArray = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }
        function isBoolean(value) {
          return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        var isBuffer = nativeIsBuffer || stubFalse;
        var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (isPrototype(value)) {
            return !baseKeys(value).length;
          }
          for (var key in value) {
            if (hasOwnProperty.call(value, key)) {
              return false;
            }
          }
          return true;
        }
        function isEqual(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        function isFinite2(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction(value) {
          if (!isObject(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger(value);
        }
        function isLength(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN2(value) {
          return isNumber(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber(value) {
          return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        function isPlainObject(value) {
          if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString(value) {
          return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        function isSymbol(value) {
          return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString(value) ? stringToArray(value) : copyArray(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY || value === -INFINITY) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim(value);
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        function toString(value) {
          return value == null ? "" : baseToString(value);
        }
        var assign = createAssigner(function(object, source) {
          if (isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              assignValue(object, key, source[key]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at = flatRest(baseAt);
        function create(prototype, properties) {
          var result2 = baseCreate(prototype);
          return properties == null ? result2 : baseAssign(result2, properties);
        }
        var defaults = baseRest(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props = keysIn(source);
            var propsIndex = -1;
            var propsLength = props.length;
            while (++propsIndex < propsLength) {
              var key = props[propsIndex];
              var value = object[key];
              if (value === undefined2 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                object[key] = source[key];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply(mergeWith, undefined2, args);
        });
        function findKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get(object, path, defaultValue) {
          var result2 = object == null ? undefined2 : baseGet(object, path);
          return result2 === undefined2 ? defaultValue : result2;
        }
        function has(object, path) {
          return object != null && hasPath(object, path, baseHas);
        }
        function hasIn(object, path) {
          return object != null && hasPath(object, path, baseHasIn);
        }
        var invert = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          result2[value] = key;
        }, constant(identity));
        var invertBy = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          if (hasOwnProperty.call(result2, value)) {
            result2[value].push(key);
          } else {
            result2[value] = [key];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, iteratee2(value, key, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, key, iteratee2(value, key, object2));
          });
          return result2;
        }
        var merge = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap(paths, function(path) {
            path = castPath(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props = arrayMap(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue) {
          path = castPath(path, object);
          var index = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey(path[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue;
            }
            object = isFunction(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject(object)) {
              accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined2) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString(string).toLowerCase());
        }
        function deburr(string) {
          string = toString(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith(string, target, position) {
          string = toString(string);
          target = baseToString(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape2(string) {
          string = toString(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
        }
        function repeat(string, n, guard) {
          if (guard ? isIterateeCall(string, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          return baseRepeat(toString(string), n);
        }
        function replace() {
          var args = arguments, string = toString(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString(string);
          position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
          target = baseToString(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined2;
          }
          string = toString(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset + match.length;
            return match;
          });
          source += "';\n";
          var variable = hasOwnProperty.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString(value).toLowerCase();
        }
        function toUpper(value) {
          return toString(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim(string);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex(string) + 1);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart, "");
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger(options.length) : length;
            omission = "omission" in options ? baseToString(options.omission) : omission;
          }
          string = toString(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end += result2.length - end;
          }
          if (isRegExp(separator)) {
            if (string.slice(end).search(separator)) {
              var match, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match = separator.exec(substring)) {
                var newEnd = match.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
            }
          } else if (string.indexOf(baseToString(separator), end) != end) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape2(string) {
          string = toString(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined2, args);
          } catch (e) {
            return isError(e) ? e : new Error2(e);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach(methodNames, function(key) {
            key = toKey(key);
            baseAssignValue(object, key, bind(object[key], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return value == null || value !== value ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys(source), methodNames = baseFunctions(source, props);
          if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain2 = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop() {
        }
        function nthArg(n) {
          n = toInteger(n);
          return baseRest(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path) {
          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee2) {
          n = toInteger(n);
          if (n < 1 || n > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes(length, iteratee2);
          while (++index < n) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
        }
        function uniqueId(prefix) {
          var id = ++idCounter;
          return toString(prefix) + id;
        }
        var add = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max(array) {
          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min(array) {
          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound("round");
        var subtract = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return array && array.length ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape2;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite2;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape2;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION2;
        arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n) {
            n = n === undefined2 ? 1 : nativeMax(toInteger(n), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin(n, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger(start);
          var result2 = this;
          if (result2.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result2);
          }
          if (start < 0) {
            result2 = result2.takeRight(-start);
          } else if (start) {
            result2 = result2.drop(start);
          }
          if (end !== undefined2) {
            end = toInteger(end);
            result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key = lodashFunc.name + "";
            if (!hasOwnProperty.call(realNames, key)) {
              realNames[key] = [];
            }
            realNames[key].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _ = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
    }).call(exports);
  }
});

// node_modules/pubnub/dist/web/pubnub.min.js
var require_pubnub_min = __commonJS({
  "node_modules/pubnub/dist/web/pubnub.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.PubNub = t() : e.PubNub = t();
    }(window, function() {
      return function(e) {
        var t = {};
        function n(r) {
          if (t[r])
            return t[r].exports;
          var i = t[r] = { i: r, l: false, exports: {} };
          return e[r].call(i.exports, i, i.exports, n), i.l = true, i.exports;
        }
        return n.m = e, n.c = t, n.d = function(e2, t2, r) {
          n.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: r });
        }, n.r = function(e2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
        }, n.t = function(e2, t2) {
          if (1 & t2 && (e2 = n(e2)), 8 & t2)
            return e2;
          if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule)
            return e2;
          var r = /* @__PURE__ */ Object.create(null);
          if (n.r(r), Object.defineProperty(r, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2)
            for (var i in e2)
              n.d(r, i, function(t3) {
                return e2[t3];
              }.bind(null, i));
          return r;
        }, n.n = function(e2) {
          var t2 = e2 && e2.__esModule ? function() {
            return e2.default;
          } : function() {
            return e2;
          };
          return n.d(t2, "a", t2), t2;
        }, n.o = function(e2, t2) {
          return Object.prototype.hasOwnProperty.call(e2, t2);
        }, n.p = "", n(n.s = 27);
      }([function(e, t) {
        e.exports = function(e2) {
          return e2 && e2.__esModule ? e2 : { default: e2 };
        };
      }, function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        t.default = { PNTimeOperation: "PNTimeOperation", PNHistoryOperation: "PNHistoryOperation", PNDeleteMessagesOperation: "PNDeleteMessagesOperation", PNFetchMessagesOperation: "PNFetchMessagesOperation", PNMessageCounts: "PNMessageCountsOperation", PNSubscribeOperation: "PNSubscribeOperation", PNUnsubscribeOperation: "PNUnsubscribeOperation", PNPublishOperation: "PNPublishOperation", PNSignalOperation: "PNSignalOperation", PNAddMessageActionOperation: "PNAddActionOperation", PNRemoveMessageActionOperation: "PNRemoveMessageActionOperation", PNGetMessageActionsOperation: "PNGetMessageActionsOperation", PNCreateUserOperation: "PNCreateUserOperation", PNUpdateUserOperation: "PNUpdateUserOperation", PNDeleteUserOperation: "PNDeleteUserOperation", PNGetUserOperation: "PNGetUsersOperation", PNGetUsersOperation: "PNGetUsersOperation", PNCreateSpaceOperation: "PNCreateSpaceOperation", PNUpdateSpaceOperation: "PNUpdateSpaceOperation", PNDeleteSpaceOperation: "PNDeleteSpaceOperation", PNGetSpaceOperation: "PNGetSpacesOperation", PNGetSpacesOperation: "PNGetSpacesOperation", PNGetMembersOperation: "PNGetMembersOperation", PNUpdateMembersOperation: "PNUpdateMembersOperation", PNGetMembershipsOperation: "PNGetMembershipsOperation", PNUpdateMembershipsOperation: "PNUpdateMembershipsOperation", PNListFilesOperation: "PNListFilesOperation", PNGenerateUploadUrlOperation: "PNGenerateUploadUrlOperation", PNPublishFileOperation: "PNPublishFileOperation", PNGetFileUrlOperation: "PNGetFileUrlOperation", PNDownloadFileOperation: "PNDownloadFileOperation", PNGetAllUUIDMetadataOperation: "PNGetAllUUIDMetadataOperation", PNGetUUIDMetadataOperation: "PNGetUUIDMetadataOperation", PNSetUUIDMetadataOperation: "PNSetUUIDMetadataOperation", PNRemoveUUIDMetadataOperation: "PNRemoveUUIDMetadataOperation", PNGetAllChannelMetadataOperation: "PNGetAllChannelMetadataOperation", PNGetChannelMetadataOperation: "PNGetChannelMetadataOperation", PNSetChannelMetadataOperation: "PNSetChannelMetadataOperation", PNRemoveChannelMetadataOperation: "PNRemoveChannelMetadataOperation", PNSetMembersOperation: "PNSetMembersOperation", PNSetMembershipsOperation: "PNSetMembershipsOperation", PNPushNotificationEnabledChannelsOperation: "PNPushNotificationEnabledChannelsOperation", PNRemoveAllPushNotificationsOperation: "PNRemoveAllPushNotificationsOperation", PNWhereNowOperation: "PNWhereNowOperation", PNSetStateOperation: "PNSetStateOperation", PNHereNowOperation: "PNHereNowOperation", PNGetStateOperation: "PNGetStateOperation", PNHeartbeatOperation: "PNHeartbeatOperation", PNChannelGroupsOperation: "PNChannelGroupsOperation", PNRemoveGroupOperation: "PNRemoveGroupOperation", PNChannelsForGroupOperation: "PNChannelsForGroupOperation", PNAddChannelsToGroupOperation: "PNAddChannelsToGroupOperation", PNRemoveChannelsFromGroupOperation: "PNRemoveChannelsFromGroupOperation", PNAccessManagerGrant: "PNAccessManagerGrant", PNAccessManagerGrantToken: "PNAccessManagerGrantToken", PNAccessManagerAudit: "PNAccessManagerAudit" }, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        e.exports = {};
      }, function(e, t, n) {
        "use strict";
        (function(t2) {
          function n2(e2) {
            return encodeURIComponent(e2).replace(/[!~*'()]/g, function(e3) {
              return "%".concat(e3.charCodeAt(0).toString(16).toUpperCase());
            });
          }
          function r(e2) {
            return function(e3) {
              var t3 = [];
              return Object.keys(e3).forEach(function(e4) {
                return t3.push(e4);
              }), t3;
            }(e2).sort();
          }
          var i = "The Objects v1 API has been deprecated.\nYou can learn more about Objects v2 API at https://www.pubnub.com/docs/web-javascript/api-reference-objects.\nIf you have questions about the Objects v2 API or require additional help with migrating to the new data model, please contact PubNub Support at support@pubnub.com.";
          e.exports = { signPamFromParams: function(e2) {
            return r(e2).map(function(t3) {
              return "".concat(t3, "=").concat(n2(e2[t3]));
            }).join("&");
          }, endsWith: function(e2, t3) {
            return -1 !== e2.indexOf(t3, this.length - t3.length);
          }, createPromise: function() {
            var e2, t3;
            return { promise: new Promise(function(n3, r2) {
              e2 = n3, t3 = r2;
            }), reject: t3, fulfill: e2 };
          }, encodeString: n2, deprecated: function(e2) {
            return function() {
              var n3, r2;
              void 0 !== t2 && ("test" !== (null === (n3 = t2) || void 0 === n3 || null === (r2 = n3.env) || void 0 === r2 ? void 0 : "production") && console.warn(i));
              return e2.apply(void 0, arguments);
            };
          } };
        }).call(this, n(39));
      }, function(e, t) {
        e.exports = function(e2, t2, n) {
          return t2 in e2 ? Object.defineProperty(e2, t2, { value: n, enumerable: true, configurable: true, writable: true }) : e2[t2] = n, e2;
        };
      }, function(e, t) {
        e.exports = function(e2, t2) {
          if (!(e2 instanceof t2))
            throw new TypeError("Cannot call a class as a function");
        };
      }, function(e, t) {
        function n(e2, t2) {
          for (var n2 = 0; n2 < t2.length; n2++) {
            var r = t2[n2];
            r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(e2, r.key, r);
          }
        }
        e.exports = function(e2, t2, r) {
          return t2 && n(e2.prototype, t2), r && n(e2, r), e2;
        };
      }, function(e, t) {
        function n(t2) {
          return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? e.exports = n = function(e2) {
            return typeof e2;
          } : e.exports = n = function(e2) {
            return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
          }, n(t2);
        }
        e.exports = n;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = r(n(17)), u = (n(2), function() {
          function e2(t2) {
            var n2, r2, o2 = t2.setup, u2 = t2.db;
            (0, i.default)(this, e2), (0, a.default)(this, "_db", void 0), (0, a.default)(this, "subscribeKey", void 0), (0, a.default)(this, "publishKey", void 0), (0, a.default)(this, "secretKey", void 0), (0, a.default)(this, "cipherKey", void 0), (0, a.default)(this, "authKey", void 0), (0, a.default)(this, "UUID", void 0), (0, a.default)(this, "proxy", void 0), (0, a.default)(this, "instanceId", void 0), (0, a.default)(this, "sdkName", void 0), (0, a.default)(this, "sdkFamily", void 0), (0, a.default)(this, "partnerId", void 0), (0, a.default)(this, "filterExpression", void 0), (0, a.default)(this, "suppressLeaveEvents", void 0), (0, a.default)(this, "secure", void 0), (0, a.default)(this, "origin", void 0), (0, a.default)(this, "logVerbosity", void 0), (0, a.default)(this, "useInstanceId", void 0), (0, a.default)(this, "useRequestId", void 0), (0, a.default)(this, "keepAlive", void 0), (0, a.default)(this, "keepAliveSettings", void 0), (0, a.default)(this, "autoNetworkDetection", void 0), (0, a.default)(this, "announceSuccessfulHeartbeats", void 0), (0, a.default)(this, "announceFailedHeartbeats", void 0), (0, a.default)(this, "_presenceTimeout", void 0), (0, a.default)(this, "_heartbeatInterval", void 0), (0, a.default)(this, "_subscribeRequestTimeout", void 0), (0, a.default)(this, "_transactionalRequestTimeout", void 0), (0, a.default)(this, "_useSendBeacon", void 0), (0, a.default)(this, "_PNSDKSuffix", void 0), (0, a.default)(this, "requestMessageCountThreshold", void 0), (0, a.default)(this, "restore", void 0), (0, a.default)(this, "dedupeOnSubscribe", void 0), (0, a.default)(this, "maximumCacheSize", void 0), (0, a.default)(this, "customEncrypt", void 0), (0, a.default)(this, "customDecrypt", void 0), (0, a.default)(this, "fileUploadPublishRetryLimit", void 0), (0, a.default)(this, "useRandomIVs", void 0), this._PNSDKSuffix = {}, this._db = u2, this.instanceId = "pn-".concat(s.default.createUUID()), this.secretKey = o2.secretKey || o2.secret_key, this.subscribeKey = o2.subscribeKey || o2.subscribe_key, this.publishKey = o2.publishKey || o2.publish_key, this.sdkName = o2.sdkName, this.sdkFamily = o2.sdkFamily, this.partnerId = o2.partnerId, this.setAuthKey(o2.authKey), this.setCipherKey(o2.cipherKey), this.setFilterExpression(o2.filterExpression), this.origin = o2.origin || "ps.pndsn.com", this.secure = o2.ssl || false, this.restore = o2.restore || false, this.proxy = o2.proxy, this.keepAlive = o2.keepAlive, this.keepAliveSettings = o2.keepAliveSettings, this.autoNetworkDetection = o2.autoNetworkDetection || false, this.dedupeOnSubscribe = o2.dedupeOnSubscribe || false, this.maximumCacheSize = o2.maximumCacheSize || 100, this.customEncrypt = o2.customEncrypt, this.customDecrypt = o2.customDecrypt, this.fileUploadPublishRetryLimit = null !== (n2 = o2.fileUploadPublishRetryLimit) && void 0 !== n2 ? n2 : 5, this.useRandomIVs = null === (r2 = o2.useRandomIVs) || void 0 === r2 || r2, "undefined" != typeof location && "https:" === location.protocol && (this.secure = true), this.logVerbosity = o2.logVerbosity || false, this.suppressLeaveEvents = o2.suppressLeaveEvents || false, this.announceFailedHeartbeats = o2.announceFailedHeartbeats || true, this.announceSuccessfulHeartbeats = o2.announceSuccessfulHeartbeats || false, this.useInstanceId = o2.useInstanceId || false, this.useRequestId = o2.useRequestId || false, this.requestMessageCountThreshold = o2.requestMessageCountThreshold, this.setTransactionTimeout(o2.transactionalRequestTimeout || 15e3), this.setSubscribeTimeout(o2.subscribeRequestTimeout || 31e4), this.setSendBeaconConfig(o2.useSendBeacon || true), o2.presenceTimeout ? this.setPresenceTimeout(o2.presenceTimeout) : this._presenceTimeout = 300, null != o2.heartbeatInterval && this.setHeartbeatInterval(o2.heartbeatInterval), this.setUUID(this._decideUUID(o2.uuid));
          }
          return (0, o.default)(e2, [{ key: "getAuthKey", value: function() {
            return this.authKey;
          } }, { key: "setAuthKey", value: function(e3) {
            return this.authKey = e3, this;
          } }, { key: "setCipherKey", value: function(e3) {
            return this.cipherKey = e3, this;
          } }, { key: "getUUID", value: function() {
            return this.UUID;
          } }, { key: "setUUID", value: function(e3) {
            return this._db && this._db.set && this._db.set("".concat(this.subscribeKey, "uuid"), e3), this.UUID = e3, this;
          } }, { key: "getFilterExpression", value: function() {
            return this.filterExpression;
          } }, { key: "setFilterExpression", value: function(e3) {
            return this.filterExpression = e3, this;
          } }, { key: "getPresenceTimeout", value: function() {
            return this._presenceTimeout;
          } }, { key: "setPresenceTimeout", value: function(e3) {
            return e3 >= 20 ? this._presenceTimeout = e3 : (this._presenceTimeout = 20, console.log("WARNING: Presence timeout is less than the minimum. Using minimum value: ", this._presenceTimeout)), this.setHeartbeatInterval(this._presenceTimeout / 2 - 1), this;
          } }, { key: "setProxy", value: function(e3) {
            this.proxy = e3;
          } }, { key: "getHeartbeatInterval", value: function() {
            return this._heartbeatInterval;
          } }, { key: "setHeartbeatInterval", value: function(e3) {
            return this._heartbeatInterval = e3, this;
          } }, { key: "getSubscribeTimeout", value: function() {
            return this._subscribeRequestTimeout;
          } }, { key: "setSubscribeTimeout", value: function(e3) {
            return this._subscribeRequestTimeout = e3, this;
          } }, { key: "getTransactionTimeout", value: function() {
            return this._transactionalRequestTimeout;
          } }, { key: "setTransactionTimeout", value: function(e3) {
            return this._transactionalRequestTimeout = e3, this;
          } }, { key: "isSendBeaconEnabled", value: function() {
            return this._useSendBeacon;
          } }, { key: "setSendBeaconConfig", value: function(e3) {
            return this._useSendBeacon = e3, this;
          } }, { key: "getVersion", value: function() {
            return "4.33.1";
          } }, { key: "_addPnsdkSuffix", value: function(e3, t2) {
            this._PNSDKSuffix[e3] = t2;
          } }, { key: "_getPnsdkSuffix", value: function(e3) {
            var t2 = this;
            return Object.keys(this._PNSDKSuffix).reduce(function(n2, r2) {
              return n2 + e3 + t2._PNSDKSuffix[r2];
            }, "");
          } }, { key: "_decideUUID", value: function(e3) {
            return e3 || (this._db && this._db.get && this._db.get("".concat(this.subscribeKey, "uuid")) ? this._db.get("".concat(this.subscribeKey, "uuid")) : "pn-".concat(s.default.createUUID()));
          } }]), e2;
        }());
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        var r = n(77), i = n(78), o = n(79), a = n(81);
        e.exports = function(e2, t2) {
          return r(e2) || i(e2, t2) || o(e2, t2) || a();
        };
      }, function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        t.default = { PNNetworkUpCategory: "PNNetworkUpCategory", PNNetworkDownCategory: "PNNetworkDownCategory", PNNetworkIssuesCategory: "PNNetworkIssuesCategory", PNTimeoutCategory: "PNTimeoutCategory", PNBadRequestCategory: "PNBadRequestCategory", PNAccessDeniedCategory: "PNAccessDeniedCategory", PNUnknownCategory: "PNUnknownCategory", PNReconnectedCategory: "PNReconnectedCategory", PNConnectedCategory: "PNConnectedCategory", PNRequestMessageCountExceededCategory: "PNRequestMessageCountExceededCategory" }, e.exports = t.default;
      }, function(e, t, n) {
        e.exports = n(72);
      }, function(e, t) {
        function n(e2, t2, n2, r, i, o, a) {
          try {
            var s = e2[o](a), u = s.value;
          } catch (e3) {
            return void n2(e3);
          }
          s.done ? t2(u) : Promise.resolve(u).then(r, i);
        }
        e.exports = function(e2) {
          return function() {
            var t2 = this, r = arguments;
            return new Promise(function(i, o) {
              var a = e2.apply(t2, r);
              function s(e3) {
                n(a, i, o, s, u, "next", e3);
              }
              function u(e3) {
                n(a, i, o, s, u, "throw", e3);
              }
              s(void 0);
            });
          };
        };
      }, function(e, t) {
        function n(t2) {
          return e.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function(e2) {
            return e2.__proto__ || Object.getPrototypeOf(e2);
          }, n(t2);
        }
        e.exports = n;
      }, function(e, t, n) {
        var r = n(15);
        e.exports = function(e2, t2) {
          if ("function" != typeof t2 && null !== t2)
            throw new TypeError("Super expression must either be null or a function");
          e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && r(e2, t2);
        };
      }, function(e, t) {
        function n(t2, r) {
          return e.exports = n = Object.setPrototypeOf || function(e2, t3) {
            return e2.__proto__ = t3, e2;
          }, n(t2, r);
        }
        e.exports = n;
      }, function(e, t, n) {
        var r = n(7), i = n(19);
        e.exports = function(e2, t2) {
          return !t2 || "object" !== r(t2) && "function" != typeof t2 ? i(e2) : t2;
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(31)), o = { createUUID: function() {
          return i.default.uuid ? i.default.uuid() : (0, i.default)();
        } };
        t.default = o, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.createValidationError = b, t.generatePNSDK = _, t.signRequest = w, t.default = function(e2, t2) {
          var n2 = e2.networking, r2 = e2.config, i2 = e2.telemetryManager, o2 = e2.tokenManager, a2 = l.default.createUUID(), s2 = null, u2 = null, c2 = {};
          t2.getOperation() === d.default.PNTimeOperation || t2.getOperation() === d.default.PNChannelGroupsOperation ? s2 = arguments.length <= 2 ? void 0 : arguments[2] : (c2 = arguments.length <= 2 ? void 0 : arguments[2], s2 = arguments.length <= 3 ? void 0 : arguments[3]);
          "undefined" == typeof Promise || s2 || (u2 = f2.default.createPromise());
          var h2 = t2.validateParams(e2, c2);
          if (h2)
            return s2 ? s2(b(h2)) : u2 ? (u2.reject(new y("Validation failed, check status for details", b(h2))), u2.promise) : void 0;
          var g2, O = t2.prepareParams(e2, c2), k = m(t2, e2, c2), S = { url: k, operation: t2.getOperation(), timeout: t2.getRequestTimeout(e2), headers: t2.getRequestHeaders ? t2.getRequestHeaders() : {}, ignoreBody: "function" == typeof t2.ignoreBody && t2.ignoreBody(e2), forceBuffered: "function" == typeof t2.forceBuffered ? t2.forceBuffered(e2, c2) : null };
          O.uuid = r2.UUID, O.pnsdk = _(r2);
          var T = i2.operationsLatencyForRequest();
          Object.keys(T).length && (O = v(v({}, O), T));
          r2.useInstanceId && (O.instanceid = r2.instanceId);
          r2.useRequestId && (O.requestid = a2);
          if (t2.isAuthSupported()) {
            var A = o2.getToken() || r2.getAuthKey();
            A && (O.auth = A);
          }
          r2.secretKey && w(e2, k, O, c2, t2);
          var M = function(n3, r3) {
            var o3;
            if (n3.error)
              return t2.handleError && t2.handleError(e2, c2, n3), void (s2 ? s2(n3) : u2 && u2.reject(new y("PubNub call failed, check status for details", n3)));
            i2.stopLatencyMeasure(t2.getOperation(), a2);
            var l2 = t2.handleResponse(e2, r3, c2);
            "function" != typeof (null === (o3 = l2) || void 0 === o3 ? void 0 : o3.then) && (l2 = Promise.resolve(l2)), l2.then(function(e3) {
              s2 ? s2(n3, e3) : u2 && u2.fulfill(e3);
            }).catch(function(e3) {
              if (s2) {
                var n4 = e3;
                t2.getOperation() === d.default.PNSubscribeOperation && (n4 = { statusCode: 400, error: true, operation: t2.getOperation(), errorData: e3, category: p.default.PNUnknownCategory }), s2(n4, null);
              } else
                u2 && u2.reject(new y("PubNub call failed, check status for details", e3));
            });
          };
          if (i2.startLatencyMeasure(t2.getOperation(), a2), "POST" === P(e2, t2, c2)) {
            var E = t2.postPayload(e2, c2);
            g2 = n2.POST(O, E, S, M);
          } else if ("PATCH" === P(e2, t2, c2)) {
            var x = t2.patchPayload(e2, c2);
            g2 = n2.PATCH(O, x, S, M);
          } else
            g2 = "DELETE" === P(e2, t2, c2) ? n2.DELETE(O, S, M) : "GETFILE" === P(e2, t2, c2) ? n2.GETFILE(O, S, M) : n2.GET(O, S, M);
          if (t2.getOperation() === d.default.PNSubscribeOperation)
            return g2;
          if (u2)
            return u2.promise;
        }, t.PubNubError = void 0;
        var i = r(n(4)), o = r(n(5)), a = r(n(14)), s = r(n(16)), u = r(n(13)), c = r(n(45)), l = r(n(17)), f2 = (n(2), r(n(3))), d = (r(n(8)), r(n(1))), p = r(n(10));
        function h(e2, t2) {
          var n2 = Object.keys(e2);
          if (Object.getOwnPropertySymbols) {
            var r2 = Object.getOwnPropertySymbols(e2);
            t2 && (r2 = r2.filter(function(t3) {
              return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
            })), n2.push.apply(n2, r2);
          }
          return n2;
        }
        function v(e2) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var n2 = null != arguments[t2] ? arguments[t2] : {};
            t2 % 2 ? h(Object(n2), true).forEach(function(t3) {
              (0, i.default)(e2, t3, n2[t3]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(n2)) : h(Object(n2)).forEach(function(t3) {
              Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(n2, t3));
            });
          }
          return e2;
        }
        function g(e2) {
          var t2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var n2, r2 = (0, u.default)(e2);
            if (t2) {
              var i2 = (0, u.default)(this).constructor;
              n2 = Reflect.construct(r2, arguments, i2);
            } else
              n2 = r2.apply(this, arguments);
            return (0, s.default)(this, n2);
          };
        }
        var y = function(e2) {
          (0, a.default)(n2, e2);
          var t2 = g(n2);
          function n2(e3, r2) {
            var i2;
            return (0, o.default)(this, n2), (i2 = t2.call(this, e3)).name = i2.constructor.name, i2.status = r2, i2.message = e3, i2;
          }
          return n2;
        }((0, c.default)(Error));
        function b(e2) {
          return (t2 = { message: e2 }).type = "validationError", t2.error = true, t2;
          var t2;
        }
        function m(e2, t2, n2) {
          return e2.usePost && e2.usePost(t2, n2) ? e2.postURL(t2, n2) : e2.usePatch && e2.usePatch(t2, n2) ? e2.patchURL(t2, n2) : e2.useGetFile && e2.useGetFile(t2, n2) ? e2.getFileURL(t2, n2) : e2.getURL(t2, n2);
        }
        function _(e2) {
          if (e2.sdkName)
            return e2.sdkName;
          var t2 = "PubNub-JS-".concat(e2.sdkFamily);
          e2.partnerId && (t2 += "-".concat(e2.partnerId)), t2 += "/".concat(e2.getVersion());
          var n2 = e2._getPnsdkSuffix(" ");
          return n2.length > 0 && (t2 += n2), t2;
        }
        function P(e2, t2, n2) {
          return t2.usePost && t2.usePost(e2, n2) ? "POST" : t2.usePatch && t2.usePatch(e2, n2) ? "PATCH" : t2.useDelete && t2.useDelete(e2, n2) ? "DELETE" : t2.useGetFile && t2.useGetFile(e2, n2) ? "GETFILE" : "GET";
        }
        function w(e2, t2, n2, r2, i2) {
          var o2 = e2.config, a2 = e2.crypto, s2 = P(e2, i2, r2);
          n2.timestamp = Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3), "PNPublishOperation" === i2.getOperation() && i2.usePost && i2.usePost(e2, r2) && (s2 = "GET"), "GETFILE" === s2 && (s2 = "GET");
          var u2 = "".concat(s2, "\n").concat(o2.publishKey, "\n").concat(t2, "\n").concat(f2.default.signPamFromParams(n2), "\n");
          if ("POST" === s2) {
            var c2 = i2.postPayload(e2, r2);
            u2 += "string" == typeof c2 ? c2 : JSON.stringify(c2);
          } else if ("PATCH" === s2) {
            var l2 = i2.patchPayload(e2, r2);
            u2 += "string" == typeof l2 ? l2 : JSON.stringify(l2);
          }
          var d2 = "v2.".concat(a2.HMACSHA256(u2));
          d2 = (d2 = (d2 = d2.replace(/\+/g, "-")).replace(/\//g, "_")).replace(/=+$/, ""), n2.signature = d2;
        }
        t.PubNubError = y;
      }, function(e, t) {
        e.exports = function(e2) {
          if (void 0 === e2)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return e2;
        };
      }, function(e, t, n) {
        "use strict";
        (function(r) {
          var i = n(0);
          Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
          var o = i(n(5)), a = i(n(6)), s = i(n(4)), u = (i(n(8)), i(n(22)));
          function c(e2) {
            var t2, n2 = [];
            for (t2 = 0; t2 < e2.length; t2 += 1)
              n2[t2 / 4 | 0] |= e2[t2] << 24 - 8 * t2;
            return u.default.lib.WordArray.create(n2, e2.length);
          }
          var l = function() {
            function e2(t2) {
              var n2 = t2.config;
              (0, o.default)(this, e2), (0, s.default)(this, "_config", void 0), (0, s.default)(this, "_iv", void 0), (0, s.default)(this, "_allowedKeyEncodings", void 0), (0, s.default)(this, "_allowedKeyLengths", void 0), (0, s.default)(this, "_allowedModes", void 0), (0, s.default)(this, "_defaultOptions", void 0), this._config = n2, this._iv = "0123456789012345", this._allowedKeyEncodings = ["hex", "utf8", "base64", "binary"], this._allowedKeyLengths = [128, 256], this._allowedModes = ["ecb", "cbc"], this._defaultOptions = { encryptKey: true, keyEncoding: "utf8", keyLength: 256, mode: "cbc" };
            }
            return (0, a.default)(e2, [{ key: "HMACSHA256", value: function(e3) {
              return u.default.HmacSHA256(e3, this._config.secretKey).toString(u.default.enc.Base64);
            } }, { key: "SHA256", value: function(e3) {
              return u.default.SHA256(e3).toString(u.default.enc.Hex);
            } }, { key: "_parseOptions", value: function(e3) {
              var t2 = e3 || {};
              return t2.hasOwnProperty("encryptKey") || (t2.encryptKey = this._defaultOptions.encryptKey), t2.hasOwnProperty("keyEncoding") || (t2.keyEncoding = this._defaultOptions.keyEncoding), t2.hasOwnProperty("keyLength") || (t2.keyLength = this._defaultOptions.keyLength), t2.hasOwnProperty("mode") || (t2.mode = this._defaultOptions.mode), -1 === this._allowedKeyEncodings.indexOf(t2.keyEncoding.toLowerCase()) && (t2.keyEncoding = this._defaultOptions.keyEncoding), -1 === this._allowedKeyLengths.indexOf(parseInt(t2.keyLength, 10)) && (t2.keyLength = this._defaultOptions.keyLength), -1 === this._allowedModes.indexOf(t2.mode.toLowerCase()) && (t2.mode = this._defaultOptions.mode), t2;
            } }, { key: "_decodeKey", value: function(e3, t2) {
              return "base64" === t2.keyEncoding ? u.default.enc.Base64.parse(e3) : "hex" === t2.keyEncoding ? u.default.enc.Hex.parse(e3) : e3;
            } }, { key: "_getPaddedKey", value: function(e3, t2) {
              return e3 = this._decodeKey(e3, t2), t2.encryptKey ? u.default.enc.Utf8.parse(this.SHA256(e3).slice(0, 32)) : e3;
            } }, { key: "_getMode", value: function(e3) {
              return "ecb" === e3.mode ? u.default.mode.ECB : u.default.mode.CBC;
            } }, { key: "_getIV", value: function(e3) {
              return "cbc" === e3.mode ? u.default.enc.Utf8.parse(this._iv) : null;
            } }, { key: "_getRandomIV", value: function() {
              return u.default.lib.WordArray.random(16);
            } }, { key: "encrypt", value: function(e3, t2, n2) {
              return this._config.customEncrypt ? this._config.customEncrypt(e3) : this.pnEncrypt(e3, t2, n2);
            } }, { key: "decrypt", value: function(e3, t2, n2) {
              return this._config.customDecrypt ? this._config.customDecrypt(e3) : this.pnDecrypt(e3, t2, n2);
            } }, { key: "pnEncrypt", value: function(e3, t2, n2) {
              if (!t2 && !this._config.cipherKey)
                return e3;
              n2 = this._parseOptions(n2);
              var r2 = this._getMode(n2), i2 = this._getPaddedKey(t2 || this._config.cipherKey, n2);
              if (this._config.useRandomIVs) {
                var o2 = this._getRandomIV(), a2 = u.default.AES.encrypt(e3, i2, { iv: o2, mode: r2 }).ciphertext;
                return o2.clone().concat(a2.clone()).toString(u.default.enc.Base64);
              }
              var s2 = this._getIV(n2);
              return u.default.AES.encrypt(e3, i2, { iv: s2, mode: r2 }).ciphertext.toString(u.default.enc.Base64) || e3;
            } }, { key: "pnDecrypt", value: function(e3, t2, n2) {
              if (!t2 && !this._config.cipherKey)
                return e3;
              n2 = this._parseOptions(n2);
              var i2 = this._getMode(n2), o2 = this._getPaddedKey(t2 || this._config.cipherKey, n2);
              if (this._config.useRandomIVs) {
                var a2 = r.from(e3, "base64"), s2 = c(a2.slice(0, 16)), l2 = c(a2.slice(16));
                try {
                  var f2 = u.default.AES.decrypt({ ciphertext: l2 }, o2, { iv: s2, mode: i2 }).toString(u.default.enc.Utf8);
                  return JSON.parse(f2);
                } catch (e4) {
                  return null;
                }
              } else {
                var d = this._getIV(n2);
                try {
                  var p = u.default.enc.Base64.parse(e3), h = u.default.AES.decrypt({ ciphertext: p }, o2, { iv: d, mode: i2 }).toString(u.default.enc.Utf8);
                  return JSON.parse(h);
                } catch (e4) {
                  return null;
                }
              }
            } }]), e2;
          }();
          t.default = l, e.exports = t.default;
        }).call(this, n(21).Buffer);
      }, function(e, t, n) {
        "use strict";
        (function(e2) {
          var r = n(33), i = n(34), o = n(35);
          function a() {
            return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
          }
          function s(e3, t2) {
            if (a() < t2)
              throw new RangeError("Invalid typed array length");
            return u.TYPED_ARRAY_SUPPORT ? (e3 = new Uint8Array(t2)).__proto__ = u.prototype : (null === e3 && (e3 = new u(t2)), e3.length = t2), e3;
          }
          function u(e3, t2, n2) {
            if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u))
              return new u(e3, t2, n2);
            if ("number" == typeof e3) {
              if ("string" == typeof t2)
                throw new Error("If encoding is specified then the first argument must be a string");
              return f2(this, e3);
            }
            return c(this, e3, t2, n2);
          }
          function c(e3, t2, n2, r2) {
            if ("number" == typeof t2)
              throw new TypeError('"value" argument must not be a number');
            return "undefined" != typeof ArrayBuffer && t2 instanceof ArrayBuffer ? function(e4, t3, n3, r3) {
              if (t3.byteLength, n3 < 0 || t3.byteLength < n3)
                throw new RangeError("'offset' is out of bounds");
              if (t3.byteLength < n3 + (r3 || 0))
                throw new RangeError("'length' is out of bounds");
              t3 = void 0 === n3 && void 0 === r3 ? new Uint8Array(t3) : void 0 === r3 ? new Uint8Array(t3, n3) : new Uint8Array(t3, n3, r3);
              u.TYPED_ARRAY_SUPPORT ? (e4 = t3).__proto__ = u.prototype : e4 = d(e4, t3);
              return e4;
            }(e3, t2, n2, r2) : "string" == typeof t2 ? function(e4, t3, n3) {
              "string" == typeof n3 && "" !== n3 || (n3 = "utf8");
              if (!u.isEncoding(n3))
                throw new TypeError('"encoding" must be a valid string encoding');
              var r3 = 0 | h(t3, n3), i2 = (e4 = s(e4, r3)).write(t3, n3);
              i2 !== r3 && (e4 = e4.slice(0, i2));
              return e4;
            }(e3, t2, n2) : function(e4, t3) {
              if (u.isBuffer(t3)) {
                var n3 = 0 | p(t3.length);
                return 0 === (e4 = s(e4, n3)).length || t3.copy(e4, 0, 0, n3), e4;
              }
              if (t3) {
                if ("undefined" != typeof ArrayBuffer && t3.buffer instanceof ArrayBuffer || "length" in t3)
                  return "number" != typeof t3.length || (r3 = t3.length) != r3 ? s(e4, 0) : d(e4, t3);
                if ("Buffer" === t3.type && o(t3.data))
                  return d(e4, t3.data);
              }
              var r3;
              throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
            }(e3, t2);
          }
          function l(e3) {
            if ("number" != typeof e3)
              throw new TypeError('"size" argument must be a number');
            if (e3 < 0)
              throw new RangeError('"size" argument must not be negative');
          }
          function f2(e3, t2) {
            if (l(t2), e3 = s(e3, t2 < 0 ? 0 : 0 | p(t2)), !u.TYPED_ARRAY_SUPPORT)
              for (var n2 = 0; n2 < t2; ++n2)
                e3[n2] = 0;
            return e3;
          }
          function d(e3, t2) {
            var n2 = t2.length < 0 ? 0 : 0 | p(t2.length);
            e3 = s(e3, n2);
            for (var r2 = 0; r2 < n2; r2 += 1)
              e3[r2] = 255 & t2[r2];
            return e3;
          }
          function p(e3) {
            if (e3 >= a())
              throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a().toString(16) + " bytes");
            return 0 | e3;
          }
          function h(e3, t2) {
            if (u.isBuffer(e3))
              return e3.length;
            if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer))
              return e3.byteLength;
            "string" != typeof e3 && (e3 = "" + e3);
            var n2 = e3.length;
            if (0 === n2)
              return 0;
            for (var r2 = false; ; )
              switch (t2) {
                case "ascii":
                case "latin1":
                case "binary":
                  return n2;
                case "utf8":
                case "utf-8":
                case void 0:
                  return F(e3).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * n2;
                case "hex":
                  return n2 >>> 1;
                case "base64":
                  return B(e3).length;
                default:
                  if (r2)
                    return F(e3).length;
                  t2 = ("" + t2).toLowerCase(), r2 = true;
              }
          }
          function v(e3, t2, n2) {
            var r2 = false;
            if ((void 0 === t2 || t2 < 0) && (t2 = 0), t2 > this.length)
              return "";
            if ((void 0 === n2 || n2 > this.length) && (n2 = this.length), n2 <= 0)
              return "";
            if ((n2 >>>= 0) <= (t2 >>>= 0))
              return "";
            for (e3 || (e3 = "utf8"); ; )
              switch (e3) {
                case "hex":
                  return E(this, t2, n2);
                case "utf8":
                case "utf-8":
                  return T(this, t2, n2);
                case "ascii":
                  return A(this, t2, n2);
                case "latin1":
                case "binary":
                  return M(this, t2, n2);
                case "base64":
                  return S(this, t2, n2);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return x(this, t2, n2);
                default:
                  if (r2)
                    throw new TypeError("Unknown encoding: " + e3);
                  e3 = (e3 + "").toLowerCase(), r2 = true;
              }
          }
          function g(e3, t2, n2) {
            var r2 = e3[t2];
            e3[t2] = e3[n2], e3[n2] = r2;
          }
          function y(e3, t2, n2, r2, i2) {
            if (0 === e3.length)
              return -1;
            if ("string" == typeof n2 ? (r2 = n2, n2 = 0) : n2 > 2147483647 ? n2 = 2147483647 : n2 < -2147483648 && (n2 = -2147483648), n2 = +n2, isNaN(n2) && (n2 = i2 ? 0 : e3.length - 1), n2 < 0 && (n2 = e3.length + n2), n2 >= e3.length) {
              if (i2)
                return -1;
              n2 = e3.length - 1;
            } else if (n2 < 0) {
              if (!i2)
                return -1;
              n2 = 0;
            }
            if ("string" == typeof t2 && (t2 = u.from(t2, r2)), u.isBuffer(t2))
              return 0 === t2.length ? -1 : b(e3, t2, n2, r2, i2);
            if ("number" == typeof t2)
              return t2 &= 255, u.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e3, t2, n2) : Uint8Array.prototype.lastIndexOf.call(e3, t2, n2) : b(e3, [t2], n2, r2, i2);
            throw new TypeError("val must be string, number or Buffer");
          }
          function b(e3, t2, n2, r2, i2) {
            var o2, a2 = 1, s2 = e3.length, u2 = t2.length;
            if (void 0 !== r2 && ("ucs2" === (r2 = String(r2).toLowerCase()) || "ucs-2" === r2 || "utf16le" === r2 || "utf-16le" === r2)) {
              if (e3.length < 2 || t2.length < 2)
                return -1;
              a2 = 2, s2 /= 2, u2 /= 2, n2 /= 2;
            }
            function c2(e4, t3) {
              return 1 === a2 ? e4[t3] : e4.readUInt16BE(t3 * a2);
            }
            if (i2) {
              var l2 = -1;
              for (o2 = n2; o2 < s2; o2++)
                if (c2(e3, o2) === c2(t2, -1 === l2 ? 0 : o2 - l2)) {
                  if (-1 === l2 && (l2 = o2), o2 - l2 + 1 === u2)
                    return l2 * a2;
                } else
                  -1 !== l2 && (o2 -= o2 - l2), l2 = -1;
            } else
              for (n2 + u2 > s2 && (n2 = s2 - u2), o2 = n2; o2 >= 0; o2--) {
                for (var f3 = true, d2 = 0; d2 < u2; d2++)
                  if (c2(e3, o2 + d2) !== c2(t2, d2)) {
                    f3 = false;
                    break;
                  }
                if (f3)
                  return o2;
              }
            return -1;
          }
          function m(e3, t2, n2, r2) {
            n2 = Number(n2) || 0;
            var i2 = e3.length - n2;
            r2 ? (r2 = Number(r2)) > i2 && (r2 = i2) : r2 = i2;
            var o2 = t2.length;
            if (o2 % 2 != 0)
              throw new TypeError("Invalid hex string");
            r2 > o2 / 2 && (r2 = o2 / 2);
            for (var a2 = 0; a2 < r2; ++a2) {
              var s2 = parseInt(t2.substr(2 * a2, 2), 16);
              if (isNaN(s2))
                return a2;
              e3[n2 + a2] = s2;
            }
            return a2;
          }
          function _(e3, t2, n2, r2) {
            return G(F(t2, e3.length - n2), e3, n2, r2);
          }
          function P(e3, t2, n2, r2) {
            return G(function(e4) {
              for (var t3 = [], n3 = 0; n3 < e4.length; ++n3)
                t3.push(255 & e4.charCodeAt(n3));
              return t3;
            }(t2), e3, n2, r2);
          }
          function w(e3, t2, n2, r2) {
            return P(e3, t2, n2, r2);
          }
          function O(e3, t2, n2, r2) {
            return G(B(t2), e3, n2, r2);
          }
          function k(e3, t2, n2, r2) {
            return G(function(e4, t3) {
              for (var n3, r3, i2, o2 = [], a2 = 0; a2 < e4.length && !((t3 -= 2) < 0); ++a2)
                n3 = e4.charCodeAt(a2), r3 = n3 >> 8, i2 = n3 % 256, o2.push(i2), o2.push(r3);
              return o2;
            }(t2, e3.length - n2), e3, n2, r2);
          }
          function S(e3, t2, n2) {
            return 0 === t2 && n2 === e3.length ? r.fromByteArray(e3) : r.fromByteArray(e3.slice(t2, n2));
          }
          function T(e3, t2, n2) {
            n2 = Math.min(e3.length, n2);
            for (var r2 = [], i2 = t2; i2 < n2; ) {
              var o2, a2, s2, u2, c2 = e3[i2], l2 = null, f3 = c2 > 239 ? 4 : c2 > 223 ? 3 : c2 > 191 ? 2 : 1;
              if (i2 + f3 <= n2)
                switch (f3) {
                  case 1:
                    c2 < 128 && (l2 = c2);
                    break;
                  case 2:
                    128 == (192 & (o2 = e3[i2 + 1])) && (u2 = (31 & c2) << 6 | 63 & o2) > 127 && (l2 = u2);
                    break;
                  case 3:
                    o2 = e3[i2 + 1], a2 = e3[i2 + 2], 128 == (192 & o2) && 128 == (192 & a2) && (u2 = (15 & c2) << 12 | (63 & o2) << 6 | 63 & a2) > 2047 && (u2 < 55296 || u2 > 57343) && (l2 = u2);
                    break;
                  case 4:
                    o2 = e3[i2 + 1], a2 = e3[i2 + 2], s2 = e3[i2 + 3], 128 == (192 & o2) && 128 == (192 & a2) && 128 == (192 & s2) && (u2 = (15 & c2) << 18 | (63 & o2) << 12 | (63 & a2) << 6 | 63 & s2) > 65535 && u2 < 1114112 && (l2 = u2);
                }
              null === l2 ? (l2 = 65533, f3 = 1) : l2 > 65535 && (l2 -= 65536, r2.push(l2 >>> 10 & 1023 | 55296), l2 = 56320 | 1023 & l2), r2.push(l2), i2 += f3;
            }
            return function(e4) {
              var t3 = e4.length;
              if (t3 <= 4096)
                return String.fromCharCode.apply(String, e4);
              var n3 = "", r3 = 0;
              for (; r3 < t3; )
                n3 += String.fromCharCode.apply(String, e4.slice(r3, r3 += 4096));
              return n3;
            }(r2);
          }
          t.Buffer = u, t.SlowBuffer = function(e3) {
            +e3 != e3 && (e3 = 0);
            return u.alloc(+e3);
          }, t.INSPECT_MAX_BYTES = 50, u.TYPED_ARRAY_SUPPORT = void 0 !== e2.TYPED_ARRAY_SUPPORT ? e2.TYPED_ARRAY_SUPPORT : function() {
            try {
              var e3 = new Uint8Array(1);
              return e3.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
                return 42;
              } }, 42 === e3.foo() && "function" == typeof e3.subarray && 0 === e3.subarray(1, 1).byteLength;
            } catch (e4) {
              return false;
            }
          }(), t.kMaxLength = a(), u.poolSize = 8192, u._augment = function(e3) {
            return e3.__proto__ = u.prototype, e3;
          }, u.from = function(e3, t2, n2) {
            return c(null, e3, t2, n2);
          }, u.TYPED_ARRAY_SUPPORT && (u.prototype.__proto__ = Uint8Array.prototype, u.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && u[Symbol.species] === u && Object.defineProperty(u, Symbol.species, { value: null, configurable: true })), u.alloc = function(e3, t2, n2) {
            return function(e4, t3, n3, r2) {
              return l(t3), t3 <= 0 ? s(e4, t3) : void 0 !== n3 ? "string" == typeof r2 ? s(e4, t3).fill(n3, r2) : s(e4, t3).fill(n3) : s(e4, t3);
            }(null, e3, t2, n2);
          }, u.allocUnsafe = function(e3) {
            return f2(null, e3);
          }, u.allocUnsafeSlow = function(e3) {
            return f2(null, e3);
          }, u.isBuffer = function(e3) {
            return !(null == e3 || !e3._isBuffer);
          }, u.compare = function(e3, t2) {
            if (!u.isBuffer(e3) || !u.isBuffer(t2))
              throw new TypeError("Arguments must be Buffers");
            if (e3 === t2)
              return 0;
            for (var n2 = e3.length, r2 = t2.length, i2 = 0, o2 = Math.min(n2, r2); i2 < o2; ++i2)
              if (e3[i2] !== t2[i2]) {
                n2 = e3[i2], r2 = t2[i2];
                break;
              }
            return n2 < r2 ? -1 : r2 < n2 ? 1 : 0;
          }, u.isEncoding = function(e3) {
            switch (String(e3).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return true;
              default:
                return false;
            }
          }, u.concat = function(e3, t2) {
            if (!o(e3))
              throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === e3.length)
              return u.alloc(0);
            var n2;
            if (void 0 === t2)
              for (t2 = 0, n2 = 0; n2 < e3.length; ++n2)
                t2 += e3[n2].length;
            var r2 = u.allocUnsafe(t2), i2 = 0;
            for (n2 = 0; n2 < e3.length; ++n2) {
              var a2 = e3[n2];
              if (!u.isBuffer(a2))
                throw new TypeError('"list" argument must be an Array of Buffers');
              a2.copy(r2, i2), i2 += a2.length;
            }
            return r2;
          }, u.byteLength = h, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
            var e3 = this.length;
            if (e3 % 2 != 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var t2 = 0; t2 < e3; t2 += 2)
              g(this, t2, t2 + 1);
            return this;
          }, u.prototype.swap32 = function() {
            var e3 = this.length;
            if (e3 % 4 != 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var t2 = 0; t2 < e3; t2 += 4)
              g(this, t2, t2 + 3), g(this, t2 + 1, t2 + 2);
            return this;
          }, u.prototype.swap64 = function() {
            var e3 = this.length;
            if (e3 % 8 != 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var t2 = 0; t2 < e3; t2 += 8)
              g(this, t2, t2 + 7), g(this, t2 + 1, t2 + 6), g(this, t2 + 2, t2 + 5), g(this, t2 + 3, t2 + 4);
            return this;
          }, u.prototype.toString = function() {
            var e3 = 0 | this.length;
            return 0 === e3 ? "" : 0 === arguments.length ? T(this, 0, e3) : v.apply(this, arguments);
          }, u.prototype.equals = function(e3) {
            if (!u.isBuffer(e3))
              throw new TypeError("Argument must be a Buffer");
            return this === e3 || 0 === u.compare(this, e3);
          }, u.prototype.inspect = function() {
            var e3 = "", n2 = t.INSPECT_MAX_BYTES;
            return this.length > 0 && (e3 = this.toString("hex", 0, n2).match(/.{2}/g).join(" "), this.length > n2 && (e3 += " ... ")), "<Buffer " + e3 + ">";
          }, u.prototype.compare = function(e3, t2, n2, r2, i2) {
            if (!u.isBuffer(e3))
              throw new TypeError("Argument must be a Buffer");
            if (void 0 === t2 && (t2 = 0), void 0 === n2 && (n2 = e3 ? e3.length : 0), void 0 === r2 && (r2 = 0), void 0 === i2 && (i2 = this.length), t2 < 0 || n2 > e3.length || r2 < 0 || i2 > this.length)
              throw new RangeError("out of range index");
            if (r2 >= i2 && t2 >= n2)
              return 0;
            if (r2 >= i2)
              return -1;
            if (t2 >= n2)
              return 1;
            if (this === e3)
              return 0;
            for (var o2 = (i2 >>>= 0) - (r2 >>>= 0), a2 = (n2 >>>= 0) - (t2 >>>= 0), s2 = Math.min(o2, a2), c2 = this.slice(r2, i2), l2 = e3.slice(t2, n2), f3 = 0; f3 < s2; ++f3)
              if (c2[f3] !== l2[f3]) {
                o2 = c2[f3], a2 = l2[f3];
                break;
              }
            return o2 < a2 ? -1 : a2 < o2 ? 1 : 0;
          }, u.prototype.includes = function(e3, t2, n2) {
            return -1 !== this.indexOf(e3, t2, n2);
          }, u.prototype.indexOf = function(e3, t2, n2) {
            return y(this, e3, t2, n2, true);
          }, u.prototype.lastIndexOf = function(e3, t2, n2) {
            return y(this, e3, t2, n2, false);
          }, u.prototype.write = function(e3, t2, n2, r2) {
            if (void 0 === t2)
              r2 = "utf8", n2 = this.length, t2 = 0;
            else if (void 0 === n2 && "string" == typeof t2)
              r2 = t2, n2 = this.length, t2 = 0;
            else {
              if (!isFinite(t2))
                throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
              t2 |= 0, isFinite(n2) ? (n2 |= 0, void 0 === r2 && (r2 = "utf8")) : (r2 = n2, n2 = void 0);
            }
            var i2 = this.length - t2;
            if ((void 0 === n2 || n2 > i2) && (n2 = i2), e3.length > 0 && (n2 < 0 || t2 < 0) || t2 > this.length)
              throw new RangeError("Attempt to write outside buffer bounds");
            r2 || (r2 = "utf8");
            for (var o2 = false; ; )
              switch (r2) {
                case "hex":
                  return m(this, e3, t2, n2);
                case "utf8":
                case "utf-8":
                  return _(this, e3, t2, n2);
                case "ascii":
                  return P(this, e3, t2, n2);
                case "latin1":
                case "binary":
                  return w(this, e3, t2, n2);
                case "base64":
                  return O(this, e3, t2, n2);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return k(this, e3, t2, n2);
                default:
                  if (o2)
                    throw new TypeError("Unknown encoding: " + r2);
                  r2 = ("" + r2).toLowerCase(), o2 = true;
              }
          }, u.prototype.toJSON = function() {
            return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
          };
          function A(e3, t2, n2) {
            var r2 = "";
            n2 = Math.min(e3.length, n2);
            for (var i2 = t2; i2 < n2; ++i2)
              r2 += String.fromCharCode(127 & e3[i2]);
            return r2;
          }
          function M(e3, t2, n2) {
            var r2 = "";
            n2 = Math.min(e3.length, n2);
            for (var i2 = t2; i2 < n2; ++i2)
              r2 += String.fromCharCode(e3[i2]);
            return r2;
          }
          function E(e3, t2, n2) {
            var r2 = e3.length;
            (!t2 || t2 < 0) && (t2 = 0), (!n2 || n2 < 0 || n2 > r2) && (n2 = r2);
            for (var i2 = "", o2 = t2; o2 < n2; ++o2)
              i2 += L(e3[o2]);
            return i2;
          }
          function x(e3, t2, n2) {
            for (var r2 = e3.slice(t2, n2), i2 = "", o2 = 0; o2 < r2.length; o2 += 2)
              i2 += String.fromCharCode(r2[o2] + 256 * r2[o2 + 1]);
            return i2;
          }
          function R(e3, t2, n2) {
            if (e3 % 1 != 0 || e3 < 0)
              throw new RangeError("offset is not uint");
            if (e3 + t2 > n2)
              throw new RangeError("Trying to access beyond buffer length");
          }
          function C(e3, t2, n2, r2, i2, o2) {
            if (!u.isBuffer(e3))
              throw new TypeError('"buffer" argument must be a Buffer instance');
            if (t2 > i2 || t2 < o2)
              throw new RangeError('"value" argument is out of bounds');
            if (n2 + r2 > e3.length)
              throw new RangeError("Index out of range");
          }
          function N(e3, t2, n2, r2) {
            t2 < 0 && (t2 = 65535 + t2 + 1);
            for (var i2 = 0, o2 = Math.min(e3.length - n2, 2); i2 < o2; ++i2)
              e3[n2 + i2] = (t2 & 255 << 8 * (r2 ? i2 : 1 - i2)) >>> 8 * (r2 ? i2 : 1 - i2);
          }
          function U(e3, t2, n2, r2) {
            t2 < 0 && (t2 = 4294967295 + t2 + 1);
            for (var i2 = 0, o2 = Math.min(e3.length - n2, 4); i2 < o2; ++i2)
              e3[n2 + i2] = t2 >>> 8 * (r2 ? i2 : 3 - i2) & 255;
          }
          function j(e3, t2, n2, r2, i2, o2) {
            if (n2 + r2 > e3.length)
              throw new RangeError("Index out of range");
            if (n2 < 0)
              throw new RangeError("Index out of range");
          }
          function K(e3, t2, n2, r2, o2) {
            return o2 || j(e3, 0, n2, 4), i.write(e3, t2, n2, r2, 23, 4), n2 + 4;
          }
          function I(e3, t2, n2, r2, o2) {
            return o2 || j(e3, 0, n2, 8), i.write(e3, t2, n2, r2, 52, 8), n2 + 8;
          }
          u.prototype.slice = function(e3, t2) {
            var n2, r2 = this.length;
            if ((e3 = ~~e3) < 0 ? (e3 += r2) < 0 && (e3 = 0) : e3 > r2 && (e3 = r2), (t2 = void 0 === t2 ? r2 : ~~t2) < 0 ? (t2 += r2) < 0 && (t2 = 0) : t2 > r2 && (t2 = r2), t2 < e3 && (t2 = e3), u.TYPED_ARRAY_SUPPORT)
              (n2 = this.subarray(e3, t2)).__proto__ = u.prototype;
            else {
              var i2 = t2 - e3;
              n2 = new u(i2, void 0);
              for (var o2 = 0; o2 < i2; ++o2)
                n2[o2] = this[o2 + e3];
            }
            return n2;
          }, u.prototype.readUIntLE = function(e3, t2, n2) {
            e3 |= 0, t2 |= 0, n2 || R(e3, t2, this.length);
            for (var r2 = this[e3], i2 = 1, o2 = 0; ++o2 < t2 && (i2 *= 256); )
              r2 += this[e3 + o2] * i2;
            return r2;
          }, u.prototype.readUIntBE = function(e3, t2, n2) {
            e3 |= 0, t2 |= 0, n2 || R(e3, t2, this.length);
            for (var r2 = this[e3 + --t2], i2 = 1; t2 > 0 && (i2 *= 256); )
              r2 += this[e3 + --t2] * i2;
            return r2;
          }, u.prototype.readUInt8 = function(e3, t2) {
            return t2 || R(e3, 1, this.length), this[e3];
          }, u.prototype.readUInt16LE = function(e3, t2) {
            return t2 || R(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
          }, u.prototype.readUInt16BE = function(e3, t2) {
            return t2 || R(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
          }, u.prototype.readUInt32LE = function(e3, t2) {
            return t2 || R(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
          }, u.prototype.readUInt32BE = function(e3, t2) {
            return t2 || R(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
          }, u.prototype.readIntLE = function(e3, t2, n2) {
            e3 |= 0, t2 |= 0, n2 || R(e3, t2, this.length);
            for (var r2 = this[e3], i2 = 1, o2 = 0; ++o2 < t2 && (i2 *= 256); )
              r2 += this[e3 + o2] * i2;
            return r2 >= (i2 *= 128) && (r2 -= Math.pow(2, 8 * t2)), r2;
          }, u.prototype.readIntBE = function(e3, t2, n2) {
            e3 |= 0, t2 |= 0, n2 || R(e3, t2, this.length);
            for (var r2 = t2, i2 = 1, o2 = this[e3 + --r2]; r2 > 0 && (i2 *= 256); )
              o2 += this[e3 + --r2] * i2;
            return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * t2)), o2;
          }, u.prototype.readInt8 = function(e3, t2) {
            return t2 || R(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
          }, u.prototype.readInt16LE = function(e3, t2) {
            t2 || R(e3, 2, this.length);
            var n2 = this[e3] | this[e3 + 1] << 8;
            return 32768 & n2 ? 4294901760 | n2 : n2;
          }, u.prototype.readInt16BE = function(e3, t2) {
            t2 || R(e3, 2, this.length);
            var n2 = this[e3 + 1] | this[e3] << 8;
            return 32768 & n2 ? 4294901760 | n2 : n2;
          }, u.prototype.readInt32LE = function(e3, t2) {
            return t2 || R(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
          }, u.prototype.readInt32BE = function(e3, t2) {
            return t2 || R(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
          }, u.prototype.readFloatLE = function(e3, t2) {
            return t2 || R(e3, 4, this.length), i.read(this, e3, true, 23, 4);
          }, u.prototype.readFloatBE = function(e3, t2) {
            return t2 || R(e3, 4, this.length), i.read(this, e3, false, 23, 4);
          }, u.prototype.readDoubleLE = function(e3, t2) {
            return t2 || R(e3, 8, this.length), i.read(this, e3, true, 52, 8);
          }, u.prototype.readDoubleBE = function(e3, t2) {
            return t2 || R(e3, 8, this.length), i.read(this, e3, false, 52, 8);
          }, u.prototype.writeUIntLE = function(e3, t2, n2, r2) {
            (e3 = +e3, t2 |= 0, n2 |= 0, r2) || C(this, e3, t2, n2, Math.pow(2, 8 * n2) - 1, 0);
            var i2 = 1, o2 = 0;
            for (this[t2] = 255 & e3; ++o2 < n2 && (i2 *= 256); )
              this[t2 + o2] = e3 / i2 & 255;
            return t2 + n2;
          }, u.prototype.writeUIntBE = function(e3, t2, n2, r2) {
            (e3 = +e3, t2 |= 0, n2 |= 0, r2) || C(this, e3, t2, n2, Math.pow(2, 8 * n2) - 1, 0);
            var i2 = n2 - 1, o2 = 1;
            for (this[t2 + i2] = 255 & e3; --i2 >= 0 && (o2 *= 256); )
              this[t2 + i2] = e3 / o2 & 255;
            return t2 + n2;
          }, u.prototype.writeUInt8 = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 1, 255, 0), u.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), this[t2] = 255 & e3, t2 + 1;
          }, u.prototype.writeUInt16LE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : N(this, e3, t2, true), t2 + 2;
          }, u.prototype.writeUInt16BE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : N(this, e3, t2, false), t2 + 2;
          }, u.prototype.writeUInt32LE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e3 >>> 24, this[t2 + 2] = e3 >>> 16, this[t2 + 1] = e3 >>> 8, this[t2] = 255 & e3) : U(this, e3, t2, true), t2 + 4;
          }, u.prototype.writeUInt32BE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : U(this, e3, t2, false), t2 + 4;
          }, u.prototype.writeIntLE = function(e3, t2, n2, r2) {
            if (e3 = +e3, t2 |= 0, !r2) {
              var i2 = Math.pow(2, 8 * n2 - 1);
              C(this, e3, t2, n2, i2 - 1, -i2);
            }
            var o2 = 0, a2 = 1, s2 = 0;
            for (this[t2] = 255 & e3; ++o2 < n2 && (a2 *= 256); )
              e3 < 0 && 0 === s2 && 0 !== this[t2 + o2 - 1] && (s2 = 1), this[t2 + o2] = (e3 / a2 >> 0) - s2 & 255;
            return t2 + n2;
          }, u.prototype.writeIntBE = function(e3, t2, n2, r2) {
            if (e3 = +e3, t2 |= 0, !r2) {
              var i2 = Math.pow(2, 8 * n2 - 1);
              C(this, e3, t2, n2, i2 - 1, -i2);
            }
            var o2 = n2 - 1, a2 = 1, s2 = 0;
            for (this[t2 + o2] = 255 & e3; --o2 >= 0 && (a2 *= 256); )
              e3 < 0 && 0 === s2 && 0 !== this[t2 + o2 + 1] && (s2 = 1), this[t2 + o2] = (e3 / a2 >> 0) - s2 & 255;
            return t2 + n2;
          }, u.prototype.writeInt8 = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 1, 127, -128), u.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), e3 < 0 && (e3 = 255 + e3 + 1), this[t2] = 255 & e3, t2 + 1;
          }, u.prototype.writeInt16LE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : N(this, e3, t2, true), t2 + 2;
          }, u.prototype.writeInt16BE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : N(this, e3, t2, false), t2 + 2;
          }, u.prototype.writeInt32LE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 4, 2147483647, -2147483648), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, this[t2 + 2] = e3 >>> 16, this[t2 + 3] = e3 >>> 24) : U(this, e3, t2, true), t2 + 4;
          }, u.prototype.writeInt32BE = function(e3, t2, n2) {
            return e3 = +e3, t2 |= 0, n2 || C(this, e3, t2, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : U(this, e3, t2, false), t2 + 4;
          }, u.prototype.writeFloatLE = function(e3, t2, n2) {
            return K(this, e3, t2, true, n2);
          }, u.prototype.writeFloatBE = function(e3, t2, n2) {
            return K(this, e3, t2, false, n2);
          }, u.prototype.writeDoubleLE = function(e3, t2, n2) {
            return I(this, e3, t2, true, n2);
          }, u.prototype.writeDoubleBE = function(e3, t2, n2) {
            return I(this, e3, t2, false, n2);
          }, u.prototype.copy = function(e3, t2, n2, r2) {
            if (n2 || (n2 = 0), r2 || 0 === r2 || (r2 = this.length), t2 >= e3.length && (t2 = e3.length), t2 || (t2 = 0), r2 > 0 && r2 < n2 && (r2 = n2), r2 === n2)
              return 0;
            if (0 === e3.length || 0 === this.length)
              return 0;
            if (t2 < 0)
              throw new RangeError("targetStart out of bounds");
            if (n2 < 0 || n2 >= this.length)
              throw new RangeError("sourceStart out of bounds");
            if (r2 < 0)
              throw new RangeError("sourceEnd out of bounds");
            r2 > this.length && (r2 = this.length), e3.length - t2 < r2 - n2 && (r2 = e3.length - t2 + n2);
            var i2, o2 = r2 - n2;
            if (this === e3 && n2 < t2 && t2 < r2)
              for (i2 = o2 - 1; i2 >= 0; --i2)
                e3[i2 + t2] = this[i2 + n2];
            else if (o2 < 1e3 || !u.TYPED_ARRAY_SUPPORT)
              for (i2 = 0; i2 < o2; ++i2)
                e3[i2 + t2] = this[i2 + n2];
            else
              Uint8Array.prototype.set.call(e3, this.subarray(n2, n2 + o2), t2);
            return o2;
          }, u.prototype.fill = function(e3, t2, n2, r2) {
            if ("string" == typeof e3) {
              if ("string" == typeof t2 ? (r2 = t2, t2 = 0, n2 = this.length) : "string" == typeof n2 && (r2 = n2, n2 = this.length), 1 === e3.length) {
                var i2 = e3.charCodeAt(0);
                i2 < 256 && (e3 = i2);
              }
              if (void 0 !== r2 && "string" != typeof r2)
                throw new TypeError("encoding must be a string");
              if ("string" == typeof r2 && !u.isEncoding(r2))
                throw new TypeError("Unknown encoding: " + r2);
            } else
              "number" == typeof e3 && (e3 &= 255);
            if (t2 < 0 || this.length < t2 || this.length < n2)
              throw new RangeError("Out of range index");
            if (n2 <= t2)
              return this;
            var o2;
            if (t2 >>>= 0, n2 = void 0 === n2 ? this.length : n2 >>> 0, e3 || (e3 = 0), "number" == typeof e3)
              for (o2 = t2; o2 < n2; ++o2)
                this[o2] = e3;
            else {
              var a2 = u.isBuffer(e3) ? e3 : F(new u(e3, r2).toString()), s2 = a2.length;
              for (o2 = 0; o2 < n2 - t2; ++o2)
                this[o2 + t2] = a2[o2 % s2];
            }
            return this;
          };
          var D = /[^+\/0-9A-Za-z-_]/g;
          function L(e3) {
            return e3 < 16 ? "0" + e3.toString(16) : e3.toString(16);
          }
          function F(e3, t2) {
            var n2;
            t2 = t2 || 1 / 0;
            for (var r2 = e3.length, i2 = null, o2 = [], a2 = 0; a2 < r2; ++a2) {
              if ((n2 = e3.charCodeAt(a2)) > 55295 && n2 < 57344) {
                if (!i2) {
                  if (n2 > 56319) {
                    (t2 -= 3) > -1 && o2.push(239, 191, 189);
                    continue;
                  }
                  if (a2 + 1 === r2) {
                    (t2 -= 3) > -1 && o2.push(239, 191, 189);
                    continue;
                  }
                  i2 = n2;
                  continue;
                }
                if (n2 < 56320) {
                  (t2 -= 3) > -1 && o2.push(239, 191, 189), i2 = n2;
                  continue;
                }
                n2 = 65536 + (i2 - 55296 << 10 | n2 - 56320);
              } else
                i2 && (t2 -= 3) > -1 && o2.push(239, 191, 189);
              if (i2 = null, n2 < 128) {
                if ((t2 -= 1) < 0)
                  break;
                o2.push(n2);
              } else if (n2 < 2048) {
                if ((t2 -= 2) < 0)
                  break;
                o2.push(n2 >> 6 | 192, 63 & n2 | 128);
              } else if (n2 < 65536) {
                if ((t2 -= 3) < 0)
                  break;
                o2.push(n2 >> 12 | 224, n2 >> 6 & 63 | 128, 63 & n2 | 128);
              } else {
                if (!(n2 < 1114112))
                  throw new Error("Invalid code point");
                if ((t2 -= 4) < 0)
                  break;
                o2.push(n2 >> 18 | 240, n2 >> 12 & 63 | 128, n2 >> 6 & 63 | 128, 63 & n2 | 128);
              }
            }
            return o2;
          }
          function B(e3) {
            return r.toByteArray(function(e4) {
              if ((e4 = function(e5) {
                return e5.trim ? e5.trim() : e5.replace(/^\s+|\s+$/g, "");
              }(e4).replace(D, "")).length < 2)
                return "";
              for (; e4.length % 4 != 0; )
                e4 += "=";
              return e4;
            }(e3));
          }
          function G(e3, t2, n2, r2) {
            for (var i2 = 0; i2 < r2 && !(i2 + n2 >= t2.length || i2 >= e3.length); ++i2)
              t2[i2 + n2] = e3[i2];
            return i2;
          }
        }).call(this, n(32));
      }, function(e, t, n) {
        "use strict";
        var r, i, o, a, s, u = u || function(e2, t2) {
          var n2 = {}, r2 = n2.lib = {}, i2 = function() {
          }, o2 = r2.Base = { extend: function(e3) {
            i2.prototype = this;
            var t3 = new i2();
            return e3 && t3.mixIn(e3), t3.hasOwnProperty("init") || (t3.init = function() {
              t3.$super.init.apply(this, arguments);
            }), t3.init.prototype = t3, t3.$super = this, t3;
          }, create: function() {
            var e3 = this.extend();
            return e3.init.apply(e3, arguments), e3;
          }, init: function() {
          }, mixIn: function(e3) {
            for (var t3 in e3)
              e3.hasOwnProperty(t3) && (this[t3] = e3[t3]);
            e3.hasOwnProperty("toString") && (this.toString = e3.toString);
          }, clone: function() {
            return this.init.prototype.extend(this);
          } }, a2 = r2.WordArray = o2.extend({ init: function(e3, t3) {
            e3 = this.words = e3 || [], this.sigBytes = null != t3 ? t3 : 4 * e3.length;
          }, toString: function(e3) {
            return (e3 || u2).stringify(this);
          }, concat: function(e3) {
            var t3 = this.words, n3 = e3.words, r3 = this.sigBytes;
            if (e3 = e3.sigBytes, this.clamp(), r3 % 4)
              for (var i3 = 0; i3 < e3; i3++)
                t3[r3 + i3 >>> 2] |= (n3[i3 >>> 2] >>> 24 - i3 % 4 * 8 & 255) << 24 - (r3 + i3) % 4 * 8;
            else if (65535 < n3.length)
              for (i3 = 0; i3 < e3; i3 += 4)
                t3[r3 + i3 >>> 2] = n3[i3 >>> 2];
            else
              t3.push.apply(t3, n3);
            return this.sigBytes += e3, this;
          }, clamp: function() {
            var t3 = this.words, n3 = this.sigBytes;
            t3[n3 >>> 2] &= 4294967295 << 32 - n3 % 4 * 8, t3.length = e2.ceil(n3 / 4);
          }, clone: function() {
            var e3 = o2.clone.call(this);
            return e3.words = this.words.slice(0), e3;
          }, random: function(t3) {
            for (var n3 = [], r3 = 0; r3 < t3; r3 += 4)
              n3.push(4294967296 * e2.random() | 0);
            return new a2.init(n3, t3);
          } }), s2 = n2.enc = {}, u2 = s2.Hex = { stringify: function(e3) {
            var t3 = e3.words;
            e3 = e3.sigBytes;
            for (var n3 = [], r3 = 0; r3 < e3; r3++) {
              var i3 = t3[r3 >>> 2] >>> 24 - r3 % 4 * 8 & 255;
              n3.push((i3 >>> 4).toString(16)), n3.push((15 & i3).toString(16));
            }
            return n3.join("");
          }, parse: function(e3) {
            for (var t3 = e3.length, n3 = [], r3 = 0; r3 < t3; r3 += 2)
              n3[r3 >>> 3] |= parseInt(e3.substr(r3, 2), 16) << 24 - r3 % 8 * 4;
            return new a2.init(n3, t3 / 2);
          } }, c = s2.Latin1 = { stringify: function(e3) {
            var t3 = e3.words;
            e3 = e3.sigBytes;
            for (var n3 = [], r3 = 0; r3 < e3; r3++)
              n3.push(String.fromCharCode(t3[r3 >>> 2] >>> 24 - r3 % 4 * 8 & 255));
            return n3.join("");
          }, parse: function(e3) {
            for (var t3 = e3.length, n3 = [], r3 = 0; r3 < t3; r3++)
              n3[r3 >>> 2] |= (255 & e3.charCodeAt(r3)) << 24 - r3 % 4 * 8;
            return new a2.init(n3, t3);
          } }, l = s2.Utf8 = { stringify: function(e3) {
            try {
              return decodeURIComponent(escape(c.stringify(e3)));
            } catch (e4) {
              throw Error("Malformed UTF-8 data");
            }
          }, parse: function(e3) {
            return c.parse(unescape(encodeURIComponent(e3)));
          } }, f2 = r2.BufferedBlockAlgorithm = o2.extend({ reset: function() {
            this._data = new a2.init(), this._nDataBytes = 0;
          }, _append: function(e3) {
            "string" == typeof e3 && (e3 = l.parse(e3)), this._data.concat(e3), this._nDataBytes += e3.sigBytes;
          }, _process: function(t3) {
            var n3 = this._data, r3 = n3.words, i3 = n3.sigBytes, o3 = this.blockSize, s3 = i3 / (4 * o3);
            if (t3 = (s3 = t3 ? e2.ceil(s3) : e2.max((0 | s3) - this._minBufferSize, 0)) * o3, i3 = e2.min(4 * t3, i3), t3) {
              for (var u3 = 0; u3 < t3; u3 += o3)
                this._doProcessBlock(r3, u3);
              u3 = r3.splice(0, t3), n3.sigBytes -= i3;
            }
            return new a2.init(u3, i3);
          }, clone: function() {
            var e3 = o2.clone.call(this);
            return e3._data = this._data.clone(), e3;
          }, _minBufferSize: 0 });
          r2.Hasher = f2.extend({ cfg: o2.extend(), init: function(e3) {
            this.cfg = this.cfg.extend(e3), this.reset();
          }, reset: function() {
            f2.reset.call(this), this._doReset();
          }, update: function(e3) {
            return this._append(e3), this._process(), this;
          }, finalize: function(e3) {
            return e3 && this._append(e3), this._doFinalize();
          }, blockSize: 16, _createHelper: function(e3) {
            return function(t3, n3) {
              return new e3.init(n3).finalize(t3);
            };
          }, _createHmacHelper: function(e3) {
            return function(t3, n3) {
              return new d.HMAC.init(e3, n3).finalize(t3);
            };
          } });
          var d = n2.algo = {};
          return n2;
        }(Math);
        !function(e2) {
          for (var t2 = u, n2 = (i2 = t2.lib).WordArray, r2 = i2.Hasher, i2 = t2.algo, o2 = [], a2 = [], s2 = function(e3) {
            return 4294967296 * (e3 - (0 | e3)) | 0;
          }, c = 2, l = 0; 64 > l; ) {
            var f2;
            e: {
              f2 = c;
              for (var d = e2.sqrt(f2), p = 2; p <= d; p++)
                if (!(f2 % p)) {
                  f2 = false;
                  break e;
                }
              f2 = true;
            }
            f2 && (8 > l && (o2[l] = s2(e2.pow(c, 0.5))), a2[l] = s2(e2.pow(c, 1 / 3)), l++), c++;
          }
          var h = [];
          i2 = i2.SHA256 = r2.extend({ _doReset: function() {
            this._hash = new n2.init(o2.slice(0));
          }, _doProcessBlock: function(e3, t3) {
            for (var n3 = this._hash.words, r3 = n3[0], i3 = n3[1], o3 = n3[2], s3 = n3[3], u2 = n3[4], c2 = n3[5], l2 = n3[6], f3 = n3[7], d2 = 0; 64 > d2; d2++) {
              if (16 > d2)
                h[d2] = 0 | e3[t3 + d2];
              else {
                var p2 = h[d2 - 15], v = h[d2 - 2];
                h[d2] = ((p2 << 25 | p2 >>> 7) ^ (p2 << 14 | p2 >>> 18) ^ p2 >>> 3) + h[d2 - 7] + ((v << 15 | v >>> 17) ^ (v << 13 | v >>> 19) ^ v >>> 10) + h[d2 - 16];
              }
              p2 = f3 + ((u2 << 26 | u2 >>> 6) ^ (u2 << 21 | u2 >>> 11) ^ (u2 << 7 | u2 >>> 25)) + (u2 & c2 ^ ~u2 & l2) + a2[d2] + h[d2], v = ((r3 << 30 | r3 >>> 2) ^ (r3 << 19 | r3 >>> 13) ^ (r3 << 10 | r3 >>> 22)) + (r3 & i3 ^ r3 & o3 ^ i3 & o3), f3 = l2, l2 = c2, c2 = u2, u2 = s3 + p2 | 0, s3 = o3, o3 = i3, i3 = r3, r3 = p2 + v | 0;
            }
            n3[0] = n3[0] + r3 | 0, n3[1] = n3[1] + i3 | 0, n3[2] = n3[2] + o3 | 0, n3[3] = n3[3] + s3 | 0, n3[4] = n3[4] + u2 | 0, n3[5] = n3[5] + c2 | 0, n3[6] = n3[6] + l2 | 0, n3[7] = n3[7] + f3 | 0;
          }, _doFinalize: function() {
            var t3 = this._data, n3 = t3.words, r3 = 8 * this._nDataBytes, i3 = 8 * t3.sigBytes;
            return n3[i3 >>> 5] |= 128 << 24 - i3 % 32, n3[14 + (i3 + 64 >>> 9 << 4)] = e2.floor(r3 / 4294967296), n3[15 + (i3 + 64 >>> 9 << 4)] = r3, t3.sigBytes = 4 * n3.length, this._process(), this._hash;
          }, clone: function() {
            var e3 = r2.clone.call(this);
            return e3._hash = this._hash.clone(), e3;
          } });
          t2.SHA256 = r2._createHelper(i2), t2.HmacSHA256 = r2._createHmacHelper(i2);
        }(Math), i = (r = u).enc.Utf8, r.algo.HMAC = r.lib.Base.extend({ init: function(e2, t2) {
          e2 = this._hasher = new e2.init(), "string" == typeof t2 && (t2 = i.parse(t2));
          var n2 = e2.blockSize, r2 = 4 * n2;
          t2.sigBytes > r2 && (t2 = e2.finalize(t2)), t2.clamp();
          for (var o2 = this._oKey = t2.clone(), a2 = this._iKey = t2.clone(), s2 = o2.words, u2 = a2.words, c = 0; c < n2; c++)
            s2[c] ^= 1549556828, u2[c] ^= 909522486;
          o2.sigBytes = a2.sigBytes = r2, this.reset();
        }, reset: function() {
          var e2 = this._hasher;
          e2.reset(), e2.update(this._iKey);
        }, update: function(e2) {
          return this._hasher.update(e2), this;
        }, finalize: function(e2) {
          var t2 = this._hasher;
          return e2 = t2.finalize(e2), t2.reset(), t2.finalize(this._oKey.clone().concat(e2));
        } }), a = (o = u).lib.WordArray, o.enc.Base64 = { stringify: function(e2) {
          var t2 = e2.words, n2 = e2.sigBytes, r2 = this._map;
          e2.clamp(), e2 = [];
          for (var i2 = 0; i2 < n2; i2 += 3)
            for (var o2 = (t2[i2 >>> 2] >>> 24 - i2 % 4 * 8 & 255) << 16 | (t2[i2 + 1 >>> 2] >>> 24 - (i2 + 1) % 4 * 8 & 255) << 8 | t2[i2 + 2 >>> 2] >>> 24 - (i2 + 2) % 4 * 8 & 255, a2 = 0; 4 > a2 && i2 + 0.75 * a2 < n2; a2++)
              e2.push(r2.charAt(o2 >>> 6 * (3 - a2) & 63));
          if (t2 = r2.charAt(64))
            for (; e2.length % 4; )
              e2.push(t2);
          return e2.join("");
        }, parse: function(e2) {
          var t2 = e2.length, n2 = this._map;
          (r2 = n2.charAt(64)) && -1 != (r2 = e2.indexOf(r2)) && (t2 = r2);
          for (var r2 = [], i2 = 0, o2 = 0; o2 < t2; o2++)
            if (o2 % 4) {
              var s2 = n2.indexOf(e2.charAt(o2 - 1)) << o2 % 4 * 2, u2 = n2.indexOf(e2.charAt(o2)) >>> 6 - o2 % 4 * 2;
              r2[i2 >>> 2] |= (s2 | u2) << 24 - i2 % 4 * 8, i2++;
            }
          return a.create(r2, i2);
        }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, function(e2) {
          function t2(e3, t3, n3, r3, i3, o3, a3) {
            return ((e3 = e3 + (t3 & n3 | ~t3 & r3) + i3 + a3) << o3 | e3 >>> 32 - o3) + t3;
          }
          function n2(e3, t3, n3, r3, i3, o3, a3) {
            return ((e3 = e3 + (t3 & r3 | n3 & ~r3) + i3 + a3) << o3 | e3 >>> 32 - o3) + t3;
          }
          function r2(e3, t3, n3, r3, i3, o3, a3) {
            return ((e3 = e3 + (t3 ^ n3 ^ r3) + i3 + a3) << o3 | e3 >>> 32 - o3) + t3;
          }
          function i2(e3, t3, n3, r3, i3, o3, a3) {
            return ((e3 = e3 + (n3 ^ (t3 | ~r3)) + i3 + a3) << o3 | e3 >>> 32 - o3) + t3;
          }
          for (var o2 = u, a2 = (c = o2.lib).WordArray, s2 = c.Hasher, c = o2.algo, l = [], f2 = 0; 64 > f2; f2++)
            l[f2] = 4294967296 * e2.abs(e2.sin(f2 + 1)) | 0;
          c = c.MD5 = s2.extend({ _doReset: function() {
            this._hash = new a2.init([1732584193, 4023233417, 2562383102, 271733878]);
          }, _doProcessBlock: function(e3, o3) {
            for (var a3 = 0; 16 > a3; a3++) {
              var s3 = e3[u2 = o3 + a3];
              e3[u2] = 16711935 & (s3 << 8 | s3 >>> 24) | 4278255360 & (s3 << 24 | s3 >>> 8);
            }
            a3 = this._hash.words;
            var u2 = e3[o3 + 0], c2 = (s3 = e3[o3 + 1], e3[o3 + 2]), f3 = e3[o3 + 3], d = e3[o3 + 4], p = e3[o3 + 5], h = e3[o3 + 6], v = e3[o3 + 7], g = e3[o3 + 8], y = e3[o3 + 9], b = e3[o3 + 10], m = e3[o3 + 11], _ = e3[o3 + 12], P = e3[o3 + 13], w = e3[o3 + 14], O = e3[o3 + 15], k = t2(k = a3[0], A = a3[1], T = a3[2], S = a3[3], u2, 7, l[0]), S = t2(S, k, A, T, s3, 12, l[1]), T = t2(T, S, k, A, c2, 17, l[2]), A = t2(A, T, S, k, f3, 22, l[3]);
            k = t2(k, A, T, S, d, 7, l[4]), S = t2(S, k, A, T, p, 12, l[5]), T = t2(T, S, k, A, h, 17, l[6]), A = t2(A, T, S, k, v, 22, l[7]), k = t2(k, A, T, S, g, 7, l[8]), S = t2(S, k, A, T, y, 12, l[9]), T = t2(T, S, k, A, b, 17, l[10]), A = t2(A, T, S, k, m, 22, l[11]), k = t2(k, A, T, S, _, 7, l[12]), S = t2(S, k, A, T, P, 12, l[13]), T = t2(T, S, k, A, w, 17, l[14]), k = n2(k, A = t2(A, T, S, k, O, 22, l[15]), T, S, s3, 5, l[16]), S = n2(S, k, A, T, h, 9, l[17]), T = n2(T, S, k, A, m, 14, l[18]), A = n2(A, T, S, k, u2, 20, l[19]), k = n2(k, A, T, S, p, 5, l[20]), S = n2(S, k, A, T, b, 9, l[21]), T = n2(T, S, k, A, O, 14, l[22]), A = n2(A, T, S, k, d, 20, l[23]), k = n2(k, A, T, S, y, 5, l[24]), S = n2(S, k, A, T, w, 9, l[25]), T = n2(T, S, k, A, f3, 14, l[26]), A = n2(A, T, S, k, g, 20, l[27]), k = n2(k, A, T, S, P, 5, l[28]), S = n2(S, k, A, T, c2, 9, l[29]), T = n2(T, S, k, A, v, 14, l[30]), k = r2(k, A = n2(A, T, S, k, _, 20, l[31]), T, S, p, 4, l[32]), S = r2(S, k, A, T, g, 11, l[33]), T = r2(T, S, k, A, m, 16, l[34]), A = r2(A, T, S, k, w, 23, l[35]), k = r2(k, A, T, S, s3, 4, l[36]), S = r2(S, k, A, T, d, 11, l[37]), T = r2(T, S, k, A, v, 16, l[38]), A = r2(A, T, S, k, b, 23, l[39]), k = r2(k, A, T, S, P, 4, l[40]), S = r2(S, k, A, T, u2, 11, l[41]), T = r2(T, S, k, A, f3, 16, l[42]), A = r2(A, T, S, k, h, 23, l[43]), k = r2(k, A, T, S, y, 4, l[44]), S = r2(S, k, A, T, _, 11, l[45]), T = r2(T, S, k, A, O, 16, l[46]), k = i2(k, A = r2(A, T, S, k, c2, 23, l[47]), T, S, u2, 6, l[48]), S = i2(S, k, A, T, v, 10, l[49]), T = i2(T, S, k, A, w, 15, l[50]), A = i2(A, T, S, k, p, 21, l[51]), k = i2(k, A, T, S, _, 6, l[52]), S = i2(S, k, A, T, f3, 10, l[53]), T = i2(T, S, k, A, b, 15, l[54]), A = i2(A, T, S, k, s3, 21, l[55]), k = i2(k, A, T, S, g, 6, l[56]), S = i2(S, k, A, T, O, 10, l[57]), T = i2(T, S, k, A, h, 15, l[58]), A = i2(A, T, S, k, P, 21, l[59]), k = i2(k, A, T, S, d, 6, l[60]), S = i2(S, k, A, T, m, 10, l[61]), T = i2(T, S, k, A, c2, 15, l[62]), A = i2(A, T, S, k, y, 21, l[63]);
            a3[0] = a3[0] + k | 0, a3[1] = a3[1] + A | 0, a3[2] = a3[2] + T | 0, a3[3] = a3[3] + S | 0;
          }, _doFinalize: function() {
            var t3 = this._data, n3 = t3.words, r3 = 8 * this._nDataBytes, i3 = 8 * t3.sigBytes;
            n3[i3 >>> 5] |= 128 << 24 - i3 % 32;
            var o3 = e2.floor(r3 / 4294967296);
            for (n3[15 + (i3 + 64 >>> 9 << 4)] = 16711935 & (o3 << 8 | o3 >>> 24) | 4278255360 & (o3 << 24 | o3 >>> 8), n3[14 + (i3 + 64 >>> 9 << 4)] = 16711935 & (r3 << 8 | r3 >>> 24) | 4278255360 & (r3 << 24 | r3 >>> 8), t3.sigBytes = 4 * (n3.length + 1), this._process(), n3 = (t3 = this._hash).words, r3 = 0; 4 > r3; r3++)
              i3 = n3[r3], n3[r3] = 16711935 & (i3 << 8 | i3 >>> 24) | 4278255360 & (i3 << 24 | i3 >>> 8);
            return t3;
          }, clone: function() {
            var e3 = s2.clone.call(this);
            return e3._hash = this._hash.clone(), e3;
          } }), o2.MD5 = s2._createHelper(c), o2.HmacMD5 = s2._createHmacHelper(c);
        }(Math), function() {
          var e2, t2 = u, n2 = (e2 = t2.lib).Base, r2 = e2.WordArray, i2 = (e2 = t2.algo).EvpKDF = n2.extend({ cfg: n2.extend({ keySize: 4, hasher: e2.MD5, iterations: 1 }), init: function(e3) {
            this.cfg = this.cfg.extend(e3);
          }, compute: function(e3, t3) {
            for (var n3 = (s2 = this.cfg).hasher.create(), i3 = r2.create(), o2 = i3.words, a2 = s2.keySize, s2 = s2.iterations; o2.length < a2; ) {
              u2 && n3.update(u2);
              var u2 = n3.update(e3).finalize(t3);
              n3.reset();
              for (var c = 1; c < s2; c++)
                u2 = n3.finalize(u2), n3.reset();
              i3.concat(u2);
            }
            return i3.sigBytes = 4 * a2, i3;
          } });
          t2.EvpKDF = function(e3, t3, n3) {
            return i2.create(n3).compute(e3, t3);
          };
        }(), u.lib.Cipher || function(e2) {
          var t2 = (h = u).lib, n2 = t2.Base, r2 = t2.WordArray, i2 = t2.BufferedBlockAlgorithm, o2 = h.enc.Base64, a2 = h.algo.EvpKDF, s2 = t2.Cipher = i2.extend({ cfg: n2.extend(), createEncryptor: function(e3, t3) {
            return this.create(this._ENC_XFORM_MODE, e3, t3);
          }, createDecryptor: function(e3, t3) {
            return this.create(this._DEC_XFORM_MODE, e3, t3);
          }, init: function(e3, t3, n3) {
            this.cfg = this.cfg.extend(n3), this._xformMode = e3, this._key = t3, this.reset();
          }, reset: function() {
            i2.reset.call(this), this._doReset();
          }, process: function(e3) {
            return this._append(e3), this._process();
          }, finalize: function(e3) {
            return e3 && this._append(e3), this._doFinalize();
          }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function(e3) {
            return { encrypt: function(t3, n3, r3) {
              return ("string" == typeof n3 ? v : p).encrypt(e3, t3, n3, r3);
            }, decrypt: function(t3, n3, r3) {
              return ("string" == typeof n3 ? v : p).decrypt(e3, t3, n3, r3);
            } };
          } });
          t2.StreamCipher = s2.extend({ _doFinalize: function() {
            return this._process(true);
          }, blockSize: 1 });
          var c = h.mode = {}, l = function(e3, t3, n3) {
            var r3 = this._iv;
            r3 ? this._iv = void 0 : r3 = this._prevBlock;
            for (var i3 = 0; i3 < n3; i3++)
              e3[t3 + i3] ^= r3[i3];
          }, f2 = (t2.BlockCipherMode = n2.extend({ createEncryptor: function(e3, t3) {
            return this.Encryptor.create(e3, t3);
          }, createDecryptor: function(e3, t3) {
            return this.Decryptor.create(e3, t3);
          }, init: function(e3, t3) {
            this._cipher = e3, this._iv = t3;
          } })).extend();
          f2.Encryptor = f2.extend({ processBlock: function(e3, t3) {
            var n3 = this._cipher, r3 = n3.blockSize;
            l.call(this, e3, t3, r3), n3.encryptBlock(e3, t3), this._prevBlock = e3.slice(t3, t3 + r3);
          } }), f2.Decryptor = f2.extend({ processBlock: function(e3, t3) {
            var n3 = this._cipher, r3 = n3.blockSize, i3 = e3.slice(t3, t3 + r3);
            n3.decryptBlock(e3, t3), l.call(this, e3, t3, r3), this._prevBlock = i3;
          } }), c = c.CBC = f2, f2 = (h.pad = {}).Pkcs7 = { pad: function(e3, t3) {
            for (var n3, i3 = (n3 = (n3 = 4 * t3) - e3.sigBytes % n3) << 24 | n3 << 16 | n3 << 8 | n3, o3 = [], a3 = 0; a3 < n3; a3 += 4)
              o3.push(i3);
            n3 = r2.create(o3, n3), e3.concat(n3);
          }, unpad: function(e3) {
            e3.sigBytes -= 255 & e3.words[e3.sigBytes - 1 >>> 2];
          } }, t2.BlockCipher = s2.extend({ cfg: s2.cfg.extend({ mode: c, padding: f2 }), reset: function() {
            s2.reset.call(this);
            var e3 = (t3 = this.cfg).iv, t3 = t3.mode;
            if (this._xformMode == this._ENC_XFORM_MODE)
              var n3 = t3.createEncryptor;
            else
              n3 = t3.createDecryptor, this._minBufferSize = 1;
            this._mode = n3.call(t3, this, e3 && e3.words);
          }, _doProcessBlock: function(e3, t3) {
            this._mode.processBlock(e3, t3);
          }, _doFinalize: function() {
            var e3 = this.cfg.padding;
            if (this._xformMode == this._ENC_XFORM_MODE) {
              e3.pad(this._data, this.blockSize);
              var t3 = this._process(true);
            } else
              t3 = this._process(true), e3.unpad(t3);
            return t3;
          }, blockSize: 4 });
          var d = t2.CipherParams = n2.extend({ init: function(e3) {
            this.mixIn(e3);
          }, toString: function(e3) {
            return (e3 || this.formatter).stringify(this);
          } }), p = (c = (h.format = {}).OpenSSL = { stringify: function(e3) {
            var t3 = e3.ciphertext;
            return ((e3 = e3.salt) ? r2.create([1398893684, 1701076831]).concat(e3).concat(t3) : t3).toString(o2);
          }, parse: function(e3) {
            var t3 = (e3 = o2.parse(e3)).words;
            if (1398893684 == t3[0] && 1701076831 == t3[1]) {
              var n3 = r2.create(t3.slice(2, 4));
              t3.splice(0, 4), e3.sigBytes -= 16;
            }
            return d.create({ ciphertext: e3, salt: n3 });
          } }, t2.SerializableCipher = n2.extend({ cfg: n2.extend({ format: c }), encrypt: function(e3, t3, n3, r3) {
            r3 = this.cfg.extend(r3);
            var i3 = e3.createEncryptor(n3, r3);
            return t3 = i3.finalize(t3), i3 = i3.cfg, d.create({ ciphertext: t3, key: n3, iv: i3.iv, algorithm: e3, mode: i3.mode, padding: i3.padding, blockSize: e3.blockSize, formatter: r3.format });
          }, decrypt: function(e3, t3, n3, r3) {
            return r3 = this.cfg.extend(r3), t3 = this._parse(t3, r3.format), e3.createDecryptor(n3, r3).finalize(t3.ciphertext);
          }, _parse: function(e3, t3) {
            return "string" == typeof e3 ? t3.parse(e3, this) : e3;
          } })), h = (h.kdf = {}).OpenSSL = { execute: function(e3, t3, n3, i3) {
            return i3 || (i3 = r2.random(8)), e3 = a2.create({ keySize: t3 + n3 }).compute(e3, i3), n3 = r2.create(e3.words.slice(t3), 4 * n3), e3.sigBytes = 4 * t3, d.create({ key: e3, iv: n3, salt: i3 });
          } }, v = t2.PasswordBasedCipher = p.extend({ cfg: p.cfg.extend({ kdf: h }), encrypt: function(e3, t3, n3, r3) {
            return n3 = (r3 = this.cfg.extend(r3)).kdf.execute(n3, e3.keySize, e3.ivSize), r3.iv = n3.iv, (e3 = p.encrypt.call(this, e3, t3, n3.key, r3)).mixIn(n3), e3;
          }, decrypt: function(e3, t3, n3, r3) {
            return r3 = this.cfg.extend(r3), t3 = this._parse(t3, r3.format), n3 = r3.kdf.execute(n3, e3.keySize, e3.ivSize, t3.salt), r3.iv = n3.iv, p.decrypt.call(this, e3, t3, n3.key, r3);
          } });
        }(), function() {
          for (var e2 = u, t2 = e2.lib.BlockCipher, n2 = e2.algo, r2 = [], i2 = [], o2 = [], a2 = [], s2 = [], c = [], l = [], f2 = [], d = [], p = [], h = [], v = 0; 256 > v; v++)
            h[v] = 128 > v ? v << 1 : v << 1 ^ 283;
          var g = 0, y = 0;
          for (v = 0; 256 > v; v++) {
            var b = (b = y ^ y << 1 ^ y << 2 ^ y << 3 ^ y << 4) >>> 8 ^ 255 & b ^ 99;
            r2[g] = b, i2[b] = g;
            var m = h[g], _ = h[m], P = h[_], w = 257 * h[b] ^ 16843008 * b;
            o2[g] = w << 24 | w >>> 8, a2[g] = w << 16 | w >>> 16, s2[g] = w << 8 | w >>> 24, c[g] = w, w = 16843009 * P ^ 65537 * _ ^ 257 * m ^ 16843008 * g, l[b] = w << 24 | w >>> 8, f2[b] = w << 16 | w >>> 16, d[b] = w << 8 | w >>> 24, p[b] = w, g ? (g = m ^ h[h[h[P ^ m]]], y ^= h[h[y]]) : g = y = 1;
          }
          var O = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
          n2 = n2.AES = t2.extend({ _doReset: function() {
            for (var e3 = (n3 = this._key).words, t3 = n3.sigBytes / 4, n3 = 4 * ((this._nRounds = t3 + 6) + 1), i3 = this._keySchedule = [], o3 = 0; o3 < n3; o3++)
              if (o3 < t3)
                i3[o3] = e3[o3];
              else {
                var a3 = i3[o3 - 1];
                o3 % t3 ? 6 < t3 && 4 == o3 % t3 && (a3 = r2[a3 >>> 24] << 24 | r2[a3 >>> 16 & 255] << 16 | r2[a3 >>> 8 & 255] << 8 | r2[255 & a3]) : (a3 = r2[(a3 = a3 << 8 | a3 >>> 24) >>> 24] << 24 | r2[a3 >>> 16 & 255] << 16 | r2[a3 >>> 8 & 255] << 8 | r2[255 & a3], a3 ^= O[o3 / t3 | 0] << 24), i3[o3] = i3[o3 - t3] ^ a3;
              }
            for (e3 = this._invKeySchedule = [], t3 = 0; t3 < n3; t3++)
              o3 = n3 - t3, a3 = t3 % 4 ? i3[o3] : i3[o3 - 4], e3[t3] = 4 > t3 || 4 >= o3 ? a3 : l[r2[a3 >>> 24]] ^ f2[r2[a3 >>> 16 & 255]] ^ d[r2[a3 >>> 8 & 255]] ^ p[r2[255 & a3]];
          }, encryptBlock: function(e3, t3) {
            this._doCryptBlock(e3, t3, this._keySchedule, o2, a2, s2, c, r2);
          }, decryptBlock: function(e3, t3) {
            var n3 = e3[t3 + 1];
            e3[t3 + 1] = e3[t3 + 3], e3[t3 + 3] = n3, this._doCryptBlock(e3, t3, this._invKeySchedule, l, f2, d, p, i2), n3 = e3[t3 + 1], e3[t3 + 1] = e3[t3 + 3], e3[t3 + 3] = n3;
          }, _doCryptBlock: function(e3, t3, n3, r3, i3, o3, a3, s3) {
            for (var u2 = this._nRounds, c2 = e3[t3] ^ n3[0], l2 = e3[t3 + 1] ^ n3[1], f3 = e3[t3 + 2] ^ n3[2], d2 = e3[t3 + 3] ^ n3[3], p2 = 4, h2 = 1; h2 < u2; h2++) {
              var v2 = r3[c2 >>> 24] ^ i3[l2 >>> 16 & 255] ^ o3[f3 >>> 8 & 255] ^ a3[255 & d2] ^ n3[p2++], g2 = r3[l2 >>> 24] ^ i3[f3 >>> 16 & 255] ^ o3[d2 >>> 8 & 255] ^ a3[255 & c2] ^ n3[p2++], y2 = r3[f3 >>> 24] ^ i3[d2 >>> 16 & 255] ^ o3[c2 >>> 8 & 255] ^ a3[255 & l2] ^ n3[p2++];
              d2 = r3[d2 >>> 24] ^ i3[c2 >>> 16 & 255] ^ o3[l2 >>> 8 & 255] ^ a3[255 & f3] ^ n3[p2++], c2 = v2, l2 = g2, f3 = y2;
            }
            v2 = (s3[c2 >>> 24] << 24 | s3[l2 >>> 16 & 255] << 16 | s3[f3 >>> 8 & 255] << 8 | s3[255 & d2]) ^ n3[p2++], g2 = (s3[l2 >>> 24] << 24 | s3[f3 >>> 16 & 255] << 16 | s3[d2 >>> 8 & 255] << 8 | s3[255 & c2]) ^ n3[p2++], y2 = (s3[f3 >>> 24] << 24 | s3[d2 >>> 16 & 255] << 16 | s3[c2 >>> 8 & 255] << 8 | s3[255 & l2]) ^ n3[p2++], d2 = (s3[d2 >>> 24] << 24 | s3[c2 >>> 16 & 255] << 16 | s3[l2 >>> 8 & 255] << 8 | s3[255 & f3]) ^ n3[p2++], e3[t3] = v2, e3[t3 + 1] = g2, e3[t3 + 2] = y2, e3[t3 + 3] = d2;
          }, keySize: 8 });
          e2.AES = t2._createHelper(n2);
        }(), u.mode.ECB = ((s = u.lib.BlockCipherMode.extend()).Encryptor = s.extend({ processBlock: function(e2, t2) {
          this._cipher.encryptBlock(e2, t2);
        } }), s.Decryptor = s.extend({ processBlock: function(e2, t2) {
          this._cipher.decryptBlock(e2, t2);
        } }), s), e.exports = u;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = (n(2), r(n(10))), u = function() {
          function e2() {
            (0, i.default)(this, e2), (0, a.default)(this, "_listeners", void 0), this._listeners = [];
          }
          return (0, o.default)(e2, [{ key: "addListener", value: function(e3) {
            this._listeners.push(e3);
          } }, { key: "removeListener", value: function(e3) {
            var t2 = [];
            this._listeners.forEach(function(n2) {
              n2 !== e3 && t2.push(n2);
            }), this._listeners = t2;
          } }, { key: "removeAllListeners", value: function() {
            this._listeners = [];
          } }, { key: "announcePresence", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.presence && t2.presence(e3);
            });
          } }, { key: "announceStatus", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.status && t2.status(e3);
            });
          } }, { key: "announceMessage", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.message && t2.message(e3);
            });
          } }, { key: "announceSignal", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.signal && t2.signal(e3);
            });
          } }, { key: "announceMessageAction", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.messageAction && t2.messageAction(e3);
            });
          } }, { key: "announceFile", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.file && t2.file(e3);
            });
          } }, { key: "announceObjects", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.objects && t2.objects(e3);
            });
          } }, { key: "announceUser", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.user && t2.user(e3);
            });
          } }, { key: "announceSpace", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.space && t2.space(e3);
            });
          } }, { key: "announceMembership", value: function(e3) {
            this._listeners.forEach(function(t2) {
              t2.membership && t2.membership(e3);
            });
          } }, { key: "announceNetworkUp", value: function() {
            var e3 = {};
            e3.category = s.default.PNNetworkUpCategory, this.announceStatus(e3);
          } }, { key: "announceNetworkDown", value: function() {
            var e3 = {};
            e3.category = s.default.PNNetworkDownCategory, this.announceStatus(e3);
          } }]), e2;
        }();
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNTimeOperation;
        }, t.getURL = function() {
          return "/time/0";
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.prepareParams = function() {
          return {};
        }, t.isAuthSupported = function() {
          return false;
        }, t.handleResponse = function(e2, t2) {
          return { timetoken: t2[0] };
        }, t.validateParams = function() {
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
      }, function(e, t, n) {
        "use strict";
        e.exports = function(e2) {
          return null !== e2 && "object" == typeof e2;
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(14)), a = r(n(16)), s = r(n(13)), u = r(n(7)), c = r(n(28)), l = r(n(29)), f2 = r(n(121)), d = r(n(22)), p = r(n(122)), h = r(n(123)), v = n(124), g = (n(2), r(n(131))), y = r(n(132));
        function b(e2) {
          var t2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var n2, r2 = (0, s.default)(e2);
            if (t2) {
              var i2 = (0, s.default)(this).constructor;
              n2 = Reflect.construct(r2, arguments, i2);
            } else
              n2 = r2.apply(this, arguments);
            return (0, a.default)(this, n2);
          };
        }
        function m(e2) {
          if (!navigator || !navigator.sendBeacon)
            return false;
          navigator.sendBeacon(e2);
        }
        function _(e2) {
          for (var t2 = d.default.enc.Base64.parse(e2).words, n2 = new ArrayBuffer(4 * t2.length), r2 = new Uint8Array(n2), i2 = 0, o2 = 0, a2 = 0; a2 < t2.length; a2 += 1) {
            var s2 = t2[a2];
            r2[o2 = 4 * a2] = (4278190080 & s2) >> 24, r2[o2 + 1] = (16711680 & s2) >> 16, r2[o2 + 2] = (65280 & s2) >> 8, r2[o2 + 3] = 255 & s2;
          }
          for (var u2 = o2 + 3; u2 >= o2; u2 -= 1)
            0 === r2[u2] && (i2 += 1);
          return i2 > 0 ? r2.buffer.slice(0, r2.byteLength - i2) : r2.buffer;
        }
        function P(e2) {
          var t2 = function(e3) {
            return e3 && "object" === (0, u.default)(e3) && e3.constructor === Object;
          };
          if (!t2(e2))
            return e2;
          var n2 = {};
          return Object.keys(e2).forEach(function(r2) {
            var i2 = function(e3) {
              return "string" == typeof e3 || e3 instanceof String;
            }(r2), o2 = r2, a2 = e2[r2];
            Array.isArray(r2) || i2 && r2.indexOf(",") >= 0 ? o2 = (i2 ? r2.split(",") : r2).reduce(function(e3, t3) {
              return e3 += String.fromCharCode(t3);
            }, "") : (function(e3) {
              return "number" == typeof e3 && isFinite(e3);
            }(r2) || i2 && !isNaN(r2)) && (o2 = String.fromCharCode(i2 ? parseInt(r2, 10) : 10));
            n2[o2] = t2(a2) ? P(a2) : a2;
          }), n2;
        }
        var w = function(e2) {
          (0, o.default)(n2, e2);
          var t2 = b(n2);
          function n2(e3) {
            var r2;
            (0, i.default)(this, n2);
            var o2 = e3.listenToBrowserNetworkEvents, a2 = void 0 === o2 || o2;
            return e3.db = p.default, e3.sdkFamily = "Web", e3.networking = new f2.default({ del: v.del, get: v.get, post: v.post, patch: v.patch, sendBeacon: m, getfile: v.getfile, postfile: v.postfile }), e3.cbor = new h.default(function(e4) {
              return P(c.default.decode(e4));
            }, _), e3.PubNubFile = y.default, e3.cryptography = new g.default(), r2 = t2.call(this, e3), a2 && (window.addEventListener("offline", function() {
              r2.networkDownDetected();
            }), window.addEventListener("online", function() {
              r2.networkUpDetected();
            })), r2;
          }
          return n2;
        }(l.default);
        t.default = w, e.exports = t.default;
      }, function(e, t, n) {
        var r, i;
        !function(o, a) {
          "use strict";
          var s = Math.pow(2, -24), u = Math.pow(2, 32), c = Math.pow(2, 53);
          void 0 === (i = "function" == typeof (r = { encode: function(e2) {
            var t2, n2 = new ArrayBuffer(256), r2 = new DataView(n2), i2 = 0;
            function o2(e3) {
              for (var o3 = n2.byteLength, a3 = i2 + e3; o3 < a3; )
                o3 *= 2;
              if (o3 !== n2.byteLength) {
                var s3 = r2;
                n2 = new ArrayBuffer(o3), r2 = new DataView(n2);
                for (var u2 = i2 + 3 >> 2, c2 = 0; c2 < u2; ++c2)
                  r2.setUint32(4 * c2, s3.getUint32(4 * c2));
              }
              return t2 = e3, r2;
            }
            function a2() {
              i2 += t2;
            }
            function s2(e3) {
              a2(o2(1).setUint8(i2, e3));
            }
            function l(e3) {
              for (var t3 = o2(e3.length), n3 = 0; n3 < e3.length; ++n3)
                t3.setUint8(i2 + n3, e3[n3]);
              a2();
            }
            function f2(e3, t3) {
              t3 < 24 ? s2(e3 << 5 | t3) : t3 < 256 ? (s2(e3 << 5 | 24), s2(t3)) : t3 < 65536 ? (s2(e3 << 5 | 25), function(e4) {
                a2(o2(2).setUint16(i2, e4));
              }(t3)) : t3 < 4294967296 ? (s2(e3 << 5 | 26), function(e4) {
                a2(o2(4).setUint32(i2, e4));
              }(t3)) : (s2(e3 << 5 | 27), function(e4) {
                var t4 = e4 % u, n3 = (e4 - t4) / u, r3 = o2(8);
                r3.setUint32(i2, n3), r3.setUint32(i2 + 4, t4), a2();
              }(t3));
            }
            if (function e3(t3) {
              var n3;
              if (false === t3)
                return s2(244);
              if (true === t3)
                return s2(245);
              if (null === t3)
                return s2(246);
              if (void 0 === t3)
                return s2(247);
              switch (typeof t3) {
                case "number":
                  if (Math.floor(t3) === t3) {
                    if (0 <= t3 && t3 <= c)
                      return f2(0, t3);
                    if (-c <= t3 && t3 < 0)
                      return f2(1, -(t3 + 1));
                  }
                  return s2(251), function(e4) {
                    a2(o2(8).setFloat64(i2, e4));
                  }(t3);
                case "string":
                  var r3 = [];
                  for (n3 = 0; n3 < t3.length; ++n3) {
                    var u2 = t3.charCodeAt(n3);
                    u2 < 128 ? r3.push(u2) : u2 < 2048 ? (r3.push(192 | u2 >> 6), r3.push(128 | 63 & u2)) : u2 < 55296 ? (r3.push(224 | u2 >> 12), r3.push(128 | u2 >> 6 & 63), r3.push(128 | 63 & u2)) : (u2 = (1023 & u2) << 10, u2 |= 1023 & t3.charCodeAt(++n3), u2 += 65536, r3.push(240 | u2 >> 18), r3.push(128 | u2 >> 12 & 63), r3.push(128 | u2 >> 6 & 63), r3.push(128 | 63 & u2));
                  }
                  return f2(3, r3.length), l(r3);
                default:
                  var d2;
                  if (Array.isArray(t3))
                    for (f2(4, d2 = t3.length), n3 = 0; n3 < d2; ++n3)
                      e3(t3[n3]);
                  else if (t3 instanceof Uint8Array)
                    f2(2, t3.length), l(t3);
                  else {
                    var p2 = Object.keys(t3);
                    for (f2(5, d2 = p2.length), n3 = 0; n3 < d2; ++n3) {
                      var h2 = p2[n3];
                      e3(h2), e3(t3[h2]);
                    }
                  }
              }
            }(e2), "slice" in n2)
              return n2.slice(0, i2);
            for (var d = new ArrayBuffer(i2), p = new DataView(d), h = 0; h < i2; ++h)
              p.setUint8(h, r2.getUint8(h));
            return d;
          }, decode: function(e2, t2, n2) {
            var r2 = new DataView(e2), i2 = 0;
            function o2(e3, t3) {
              return i2 += t3, e3;
            }
            function a2(t3) {
              return o2(new Uint8Array(e2, i2, t3), t3);
            }
            function c2() {
              return o2(r2.getUint8(i2), 1);
            }
            function l() {
              return o2(r2.getUint16(i2), 2);
            }
            function f2() {
              return o2(r2.getUint32(i2), 4);
            }
            function d() {
              return 255 === r2.getUint8(i2) && (i2 += 1, true);
            }
            function p(e3) {
              if (e3 < 24)
                return e3;
              if (24 === e3)
                return c2();
              if (25 === e3)
                return l();
              if (26 === e3)
                return f2();
              if (27 === e3)
                return f2() * u + f2();
              if (31 === e3)
                return -1;
              throw "Invalid length encoding";
            }
            function h(e3) {
              var t3 = c2();
              if (255 === t3)
                return -1;
              var n3 = p(31 & t3);
              if (n3 < 0 || t3 >> 5 !== e3)
                throw "Invalid indefinite length element";
              return n3;
            }
            function v(e3, t3) {
              for (var n3 = 0; n3 < t3; ++n3) {
                var r3 = c2();
                128 & r3 && (r3 < 224 ? (r3 = (31 & r3) << 6 | 63 & c2(), t3 -= 1) : r3 < 240 ? (r3 = (15 & r3) << 12 | (63 & c2()) << 6 | 63 & c2(), t3 -= 2) : (r3 = (15 & r3) << 18 | (63 & c2()) << 12 | (63 & c2()) << 6 | 63 & c2(), t3 -= 3)), r3 < 65536 ? e3.push(r3) : (r3 -= 65536, e3.push(55296 | r3 >> 10), e3.push(56320 | 1023 & r3));
              }
            }
            "function" != typeof t2 && (t2 = function(e3) {
              return e3;
            }), "function" != typeof n2 && (n2 = function() {
            });
            var g = function e3() {
              var u2, f3, g2 = c2(), y = g2 >> 5, b = 31 & g2;
              if (7 === y)
                switch (b) {
                  case 25:
                    return function() {
                      var e4 = new ArrayBuffer(4), t3 = new DataView(e4), n3 = l(), r3 = 32768 & n3, i3 = 31744 & n3, o3 = 1023 & n3;
                      if (31744 === i3)
                        i3 = 261120;
                      else if (0 !== i3)
                        i3 += 114688;
                      else if (0 !== o3)
                        return o3 * s;
                      return t3.setUint32(0, r3 << 16 | i3 << 13 | o3 << 13), t3.getFloat32(0);
                    }();
                  case 26:
                    return o2(r2.getFloat32(i2), 4);
                  case 27:
                    return o2(r2.getFloat64(i2), 8);
                }
              if ((f3 = p(b)) < 0 && (y < 2 || 6 < y))
                throw "Invalid length";
              switch (y) {
                case 0:
                  return f3;
                case 1:
                  return -1 - f3;
                case 2:
                  if (f3 < 0) {
                    for (var m = [], _ = 0; (f3 = h(y)) >= 0; )
                      _ += f3, m.push(a2(f3));
                    var P = new Uint8Array(_), w = 0;
                    for (u2 = 0; u2 < m.length; ++u2)
                      P.set(m[u2], w), w += m[u2].length;
                    return P;
                  }
                  return a2(f3);
                case 3:
                  var O = [];
                  if (f3 < 0)
                    for (; (f3 = h(y)) >= 0; )
                      v(O, f3);
                  else
                    v(O, f3);
                  return String.fromCharCode.apply(null, O);
                case 4:
                  var k;
                  if (f3 < 0)
                    for (k = []; !d(); )
                      k.push(e3());
                  else
                    for (k = new Array(f3), u2 = 0; u2 < f3; ++u2)
                      k[u2] = e3();
                  return k;
                case 5:
                  var S = {};
                  for (u2 = 0; u2 < f3 || f3 < 0 && !d(); ++u2) {
                    S[e3()] = e3();
                  }
                  return S;
                case 6:
                  return t2(e3(), f3);
                case 7:
                  switch (f3) {
                    case 20:
                      return false;
                    case 21:
                      return true;
                    case 22:
                      return null;
                    case 23:
                      return;
                    default:
                      return n2(f3);
                  }
              }
            }();
            if (i2 !== e2.byteLength)
              throw "Remaining bytes";
            return g;
          } }) ? r.call(t, n, t, e) : r) || (e.exports = i);
        }();
      }, function(e, t, n) {
        "use strict";
        var r = n(30), i = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var o = i(n(5)), a = i(n(6)), s = i(n(4)), u = i(n(8)), c = i(n(20)), l = i(n(36)), f2 = i(n(40)), d = i(n(41)), p = i(n(23)), h = i(n(44)), v = i(n(18)), g = n(3), y = r(n(49)), b = r(n(50)), m = r(n(51)), _ = r(n(52)), P = r(n(53)), w = r(n(54)), O = r(n(55)), k = r(n(56)), S = r(n(57)), T = r(n(58)), A = r(n(59)), M = r(n(60)), E = r(n(61)), x = r(n(62)), R = r(n(63)), C = r(n(64)), N = r(n(65)), U = r(n(66)), j = (n(25), r(n(67)), i(n(68))), K = i(n(69)), I = i(n(70)), D = i(n(71)), L = i(n(73)), F = i(n(74)), B = i(n(75)), G = i(n(76)), H = i(n(82)), q = i(n(83)), z = i(n(84)), Y = i(n(85)), V = i(n(86)), W = i(n(87)), J = i(n(88)), X = i(n(89)), $ = i(n(90)), Q = i(n(91)), Z = i(n(92)), ee = r(n(93)), te = r(n(94)), ne = r(n(95)), re = r(n(96)), ie = r(n(97)), oe = r(n(98)), ae = r(n(99)), se = r(n(100)), ue = r(n(101)), ce = r(n(102)), le = r(n(103)), fe = r(n(104)), de = r(n(105)), pe = r(n(106)), he = r(n(107)), ve = r(n(108)), ge = r(n(109)), ye = r(n(110)), be = r(n(111)), me = r(n(112)), _e = r(n(113)), Pe = r(n(114)), we = r(n(115)), Oe = r(n(116)), ke = r(n(117)), Se = r(n(118)), Te = r(n(119)), Ae = r(n(24)), Me = r(n(120)), Ee = i(n(1)), xe = i(n(10)), Re = (n(2), i(n(17)));
        function Ce(e2, t2) {
          var n2 = Object.keys(e2);
          if (Object.getOwnPropertySymbols) {
            var r2 = Object.getOwnPropertySymbols(e2);
            t2 && (r2 = r2.filter(function(t3) {
              return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
            })), n2.push.apply(n2, r2);
          }
          return n2;
        }
        function Ne(e2) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var n2 = null != arguments[t2] ? arguments[t2] : {};
            t2 % 2 ? Ce(Object(n2), true).forEach(function(t3) {
              (0, s.default)(e2, t3, n2[t3]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(n2)) : Ce(Object(n2)).forEach(function(t3) {
              Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(n2, t3));
            });
          }
          return e2;
        }
        var Ue = function() {
          function e2(t2) {
            var n2 = this;
            (0, o.default)(this, e2), (0, s.default)(this, "_config", void 0), (0, s.default)(this, "_telemetryManager", void 0), (0, s.default)(this, "_listenerManager", void 0), (0, s.default)(this, "_tokenManager", void 0), (0, s.default)(this, "time", void 0), (0, s.default)(this, "publish", void 0), (0, s.default)(this, "fire", void 0), (0, s.default)(this, "history", void 0), (0, s.default)(this, "deleteMessages", void 0), (0, s.default)(this, "messageCounts", void 0), (0, s.default)(this, "fetchMessages", void 0), (0, s.default)(this, "channelGroups", void 0), (0, s.default)(this, "push", void 0), (0, s.default)(this, "hereNow", void 0), (0, s.default)(this, "whereNow", void 0), (0, s.default)(this, "getState", void 0), (0, s.default)(this, "setState", void 0), (0, s.default)(this, "grant", void 0), (0, s.default)(this, "grantToken", void 0), (0, s.default)(this, "audit", void 0), (0, s.default)(this, "subscribe", void 0), (0, s.default)(this, "signal", void 0), (0, s.default)(this, "presence", void 0), (0, s.default)(this, "unsubscribe", void 0), (0, s.default)(this, "unsubscribeAll", void 0), (0, s.default)(this, "addMessageAction", void 0), (0, s.default)(this, "removeMessageAction", void 0), (0, s.default)(this, "getMessageActions", void 0), (0, s.default)(this, "File", void 0), (0, s.default)(this, "encryptFile", void 0), (0, s.default)(this, "decryptFile", void 0), (0, s.default)(this, "listFiles", void 0), (0, s.default)(this, "sendFile", void 0), (0, s.default)(this, "downloadFile", void 0), (0, s.default)(this, "getFileUrl", void 0), (0, s.default)(this, "deleteFile", void 0), (0, s.default)(this, "publishFile", void 0), (0, s.default)(this, "objects", void 0), (0, s.default)(this, "createUser", void 0), (0, s.default)(this, "updateUser", void 0), (0, s.default)(this, "deleteUser", void 0), (0, s.default)(this, "getUser", void 0), (0, s.default)(this, "getUsers", void 0), (0, s.default)(this, "createSpace", void 0), (0, s.default)(this, "updateSpace", void 0), (0, s.default)(this, "deleteSpace", void 0), (0, s.default)(this, "getSpaces", void 0), (0, s.default)(this, "getSpace", void 0), (0, s.default)(this, "getMembers", void 0), (0, s.default)(this, "addMembers", void 0), (0, s.default)(this, "updateMembers", void 0), (0, s.default)(this, "removeMembers", void 0), (0, s.default)(this, "getMemberships", void 0), (0, s.default)(this, "joinSpaces", void 0), (0, s.default)(this, "updateMemberships", void 0), (0, s.default)(this, "leaveSpaces", void 0), (0, s.default)(this, "disconnect", void 0), (0, s.default)(this, "reconnect", void 0), (0, s.default)(this, "destroy", void 0), (0, s.default)(this, "stop", void 0), (0, s.default)(this, "getSubscribedChannels", void 0), (0, s.default)(this, "getSubscribedChannelGroups", void 0), (0, s.default)(this, "addListener", void 0), (0, s.default)(this, "removeListener", void 0), (0, s.default)(this, "removeAllListeners", void 0), (0, s.default)(this, "parseToken", void 0), (0, s.default)(this, "setToken", void 0), (0, s.default)(this, "getToken", void 0), (0, s.default)(this, "getAuthKey", void 0), (0, s.default)(this, "setAuthKey", void 0), (0, s.default)(this, "setCipherKey", void 0), (0, s.default)(this, "setUUID", void 0), (0, s.default)(this, "getUUID", void 0), (0, s.default)(this, "getFilterExpression", void 0), (0, s.default)(this, "setFilterExpression", void 0), (0, s.default)(this, "setHeartbeatInterval", void 0), (0, s.default)(this, "setProxy", void 0), (0, s.default)(this, "encrypt", void 0), (0, s.default)(this, "decrypt", void 0);
            var r2 = t2.db, i2 = t2.networking, a2 = t2.cbor, d2 = this._config = new u.default({ setup: t2, db: r2 }), Ee2 = new c.default({ config: d2 }), xe2 = t2.cryptography;
            i2.init(d2);
            var Re2 = this._tokenManager = new h.default(d2, a2), Ce2 = this._telemetryManager = new f2.default({ maximumSamplesCount: 6e4 }), Ue2 = { config: d2, networking: i2, crypto: Ee2, cryptography: xe2, tokenManager: Re2, telemetryManager: Ce2, PubNubFile: t2.PubNubFile };
            this.File = t2.PubNubFile, this.encryptFile = function(e3, t3) {
              return xe2.encryptFile(e3, t3, n2.File);
            }, this.decryptFile = function(e3, t3) {
              return xe2.decryptFile(e3, t3, n2.File);
            };
            var je = v.default.bind(this, Ue2, Ae), Ke = v.default.bind(this, Ue2, T), Ie = v.default.bind(this, Ue2, M), De = v.default.bind(this, Ue2, x), Le = v.default.bind(this, Ue2, Me), Fe = this._listenerManager = new p.default(), Be = new l.default({ timeEndpoint: je, leaveEndpoint: Ke, heartbeatEndpoint: Ie, setStateEndpoint: De, subscribeEndpoint: Le, crypto: Ue2.crypto, config: Ue2.config, listenerManager: Fe, getFileUrl: function(e3) {
              return (0, L.default)(Ue2, e3);
            } });
            this.addListener = Fe.addListener.bind(Fe), this.removeListener = Fe.removeListener.bind(Fe), this.removeAllListeners = Fe.removeAllListeners.bind(Fe), this.parseToken = Re2.parseToken.bind(Re2), this.setToken = Re2.setToken.bind(Re2), this.getToken = Re2.getToken.bind(Re2), this.channelGroups = { listGroups: v.default.bind(this, Ue2, _), listChannels: v.default.bind(this, Ue2, P), addChannels: v.default.bind(this, Ue2, y), removeChannels: v.default.bind(this, Ue2, b), deleteGroup: v.default.bind(this, Ue2, m) }, this.push = { addChannels: v.default.bind(this, Ue2, w), removeChannels: v.default.bind(this, Ue2, O), deleteDevice: v.default.bind(this, Ue2, S), listChannels: v.default.bind(this, Ue2, k) }, this.hereNow = v.default.bind(this, Ue2, R), this.whereNow = v.default.bind(this, Ue2, A), this.getState = v.default.bind(this, Ue2, E), this.setState = Be.adaptStateChange.bind(Be), this.grant = v.default.bind(this, Ue2, me), this.grantToken = v.default.bind(this, Ue2, _e), this.audit = v.default.bind(this, Ue2, be), this.publish = v.default.bind(this, Ue2, Pe), this.fire = function(e3, t3) {
              return e3.replicate = false, e3.storeInHistory = false, n2.publish(e3, t3);
            }, this.signal = v.default.bind(this, Ue2, we), this.history = v.default.bind(this, Ue2, Oe), this.deleteMessages = v.default.bind(this, Ue2, ke), this.messageCounts = v.default.bind(this, Ue2, Se), this.fetchMessages = v.default.bind(this, Ue2, Te), this.addMessageAction = v.default.bind(this, Ue2, C), this.removeMessageAction = v.default.bind(this, Ue2, N), this.getMessageActions = v.default.bind(this, Ue2, U), this.listFiles = v.default.bind(this, Ue2, j.default);
            var Ge = v.default.bind(this, Ue2, K.default);
            this.publishFile = v.default.bind(this, Ue2, I.default), this.sendFile = (0, D.default)({ generateUploadUrl: Ge, publishFile: this.publishFile, modules: Ue2 }), this.getFileUrl = function(e3) {
              return (0, L.default)(Ue2, e3);
            }, this.downloadFile = v.default.bind(this, Ue2, F.default), this.deleteFile = v.default.bind(this, Ue2, B.default), this.objects = { getAllUUIDMetadata: v.default.bind(this, Ue2, G.default), getUUIDMetadata: v.default.bind(this, Ue2, H.default), setUUIDMetadata: v.default.bind(this, Ue2, q.default), removeUUIDMetadata: v.default.bind(this, Ue2, z.default), getAllChannelMetadata: v.default.bind(this, Ue2, Y.default), getChannelMetadata: v.default.bind(this, Ue2, V.default), setChannelMetadata: v.default.bind(this, Ue2, W.default), removeChannelMetadata: v.default.bind(this, Ue2, J.default), getChannelMembers: v.default.bind(this, Ue2, X.default), setChannelMembers: function(e3) {
              for (var t3 = arguments.length, r3 = new Array(t3 > 1 ? t3 - 1 : 0), i3 = 1; i3 < t3; i3++)
                r3[i3 - 1] = arguments[i3];
              return v.default.call.apply(v.default, [n2, Ue2, $.default, Ne({ type: "set" }, e3)].concat(r3));
            }, removeChannelMembers: function(e3) {
              for (var t3 = arguments.length, r3 = new Array(t3 > 1 ? t3 - 1 : 0), i3 = 1; i3 < t3; i3++)
                r3[i3 - 1] = arguments[i3];
              return v.default.call.apply(v.default, [n2, Ue2, $.default, Ne({ type: "delete" }, e3)].concat(r3));
            }, getMemberships: v.default.bind(this, Ue2, Q.default), setMemberships: function(e3) {
              for (var t3 = arguments.length, r3 = new Array(t3 > 1 ? t3 - 1 : 0), i3 = 1; i3 < t3; i3++)
                r3[i3 - 1] = arguments[i3];
              return v.default.call.apply(v.default, [n2, Ue2, Z.default, Ne({ type: "set" }, e3)].concat(r3));
            }, removeMemberships: function(e3) {
              for (var t3 = arguments.length, r3 = new Array(t3 > 1 ? t3 - 1 : 0), i3 = 1; i3 < t3; i3++)
                r3[i3 - 1] = arguments[i3];
              return v.default.call.apply(v.default, [n2, Ue2, Z.default, Ne({ type: "delete" }, e3)].concat(r3));
            } }, this.createUser = (0, g.deprecated)(v.default.bind(this, Ue2, ee)), this.updateUser = (0, g.deprecated)(v.default.bind(this, Ue2, te)), this.deleteUser = (0, g.deprecated)(v.default.bind(this, Ue2, ne)), this.getUser = (0, g.deprecated)(v.default.bind(this, Ue2, re)), this.getUsers = (0, g.deprecated)(v.default.bind(this, Ue2, ie)), this.createSpace = (0, g.deprecated)(v.default.bind(this, Ue2, oe)), this.updateSpace = (0, g.deprecated)(v.default.bind(this, Ue2, ae)), this.deleteSpace = (0, g.deprecated)(v.default.bind(this, Ue2, se)), this.getSpaces = (0, g.deprecated)(v.default.bind(this, Ue2, ue)), this.getSpace = (0, g.deprecated)(v.default.bind(this, Ue2, ce)), this.addMembers = (0, g.deprecated)(v.default.bind(this, Ue2, fe)), this.updateMembers = (0, g.deprecated)(v.default.bind(this, Ue2, de)), this.removeMembers = (0, g.deprecated)(v.default.bind(this, Ue2, pe)), this.getMembers = (0, g.deprecated)(v.default.bind(this, Ue2, le)), this.getMemberships = (0, g.deprecated)(v.default.bind(this, Ue2, he)), this.joinSpaces = (0, g.deprecated)(v.default.bind(this, Ue2, ge)), this.updateMemberships = (0, g.deprecated)(v.default.bind(this, Ue2, ve)), this.leaveSpaces = (0, g.deprecated)(v.default.bind(this, Ue2, ye)), this.time = je, this.subscribe = Be.adaptSubscribeChange.bind(Be), this.presence = Be.adaptPresenceChange.bind(Be), this.unsubscribe = Be.adaptUnsubscribeChange.bind(Be), this.disconnect = Be.disconnect.bind(Be), this.reconnect = Be.reconnect.bind(Be), this.destroy = function(e3) {
              Be.unsubscribeAll(e3), Be.disconnect();
            }, this.stop = this.destroy, this.unsubscribeAll = Be.unsubscribeAll.bind(Be), this.getSubscribedChannels = Be.getSubscribedChannels.bind(Be), this.getSubscribedChannelGroups = Be.getSubscribedChannelGroups.bind(Be), this.encrypt = Ee2.encrypt.bind(Ee2), this.decrypt = Ee2.decrypt.bind(Ee2), this.getAuthKey = Ue2.config.getAuthKey.bind(Ue2.config), this.setAuthKey = Ue2.config.setAuthKey.bind(Ue2.config), this.setCipherKey = Ue2.config.setCipherKey.bind(Ue2.config), this.getUUID = Ue2.config.getUUID.bind(Ue2.config), this.setUUID = Ue2.config.setUUID.bind(Ue2.config), this.getFilterExpression = Ue2.config.getFilterExpression.bind(Ue2.config), this.setFilterExpression = Ue2.config.setFilterExpression.bind(Ue2.config), this.setHeartbeatInterval = Ue2.config.setHeartbeatInterval.bind(Ue2.config), i2.hasModule("proxy") && (this.setProxy = function(e3) {
              Ue2.config.setProxy(e3), n2.reconnect();
            });
          }
          return (0, a.default)(e2, [{ key: "getVersion", value: function() {
            return this._config.getVersion();
          } }, { key: "_addPnsdkSuffix", value: function(e3, t2) {
            this._config._addPnsdkSuffix(e3, t2);
          } }, { key: "networkDownDetected", value: function() {
            this._listenerManager.announceNetworkDown(), this._config.restore ? this.disconnect() : this.destroy(true);
          } }, { key: "networkUpDetected", value: function() {
            this._listenerManager.announceNetworkUp(), this.reconnect();
          } }], [{ key: "notificationPayload", value: function(e3, t2) {
            return new d.default(e3, t2);
          } }, { key: "generateUUID", value: function() {
            return Re.default.createUUID();
          } }]), e2;
        }();
        t.default = Ue, (0, s.default)(Ue, "OPERATIONS", Ee.default), (0, s.default)(Ue, "CATEGORIES", xe.default), e.exports = t.default;
      }, function(e, t, n) {
        var r = n(7);
        function i() {
          if ("function" != typeof WeakMap)
            return null;
          var e2 = /* @__PURE__ */ new WeakMap();
          return i = function() {
            return e2;
          }, e2;
        }
        e.exports = function(e2) {
          if (e2 && e2.__esModule)
            return e2;
          if (null === e2 || "object" !== r(e2) && "function" != typeof e2)
            return { default: e2 };
          var t2 = i();
          if (t2 && t2.has(e2))
            return t2.get(e2);
          var n2 = {}, o = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var a in e2)
            if (Object.prototype.hasOwnProperty.call(e2, a)) {
              var s = o ? Object.getOwnPropertyDescriptor(e2, a) : null;
              s && (s.get || s.set) ? Object.defineProperty(n2, a, s) : n2[a] = e2[a];
            }
          return n2.default = e2, t2 && t2.set(e2, n2), n2;
        };
      }, function(e, t, n) {
        var r, i, o;
        i = [t], void 0 === (o = "function" == typeof (r = function(e2) {
          var t2 = { 3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i, 4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i, 5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i, all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i };
          function n2() {
            var e3, t3, n3 = "";
            for (e3 = 0; e3 < 32; e3++)
              t3 = 16 * Math.random() | 0, 8 !== e3 && 12 !== e3 && 16 !== e3 && 20 !== e3 || (n3 += "-"), n3 += (12 === e3 ? 4 : 16 === e3 ? 3 & t3 | 8 : t3).toString(16);
            return n3;
          }
          function r2(e3, n3) {
            var r3 = t2[n3 || "all"];
            return r3 && r3.test(e3) || false;
          }
          n2.isUUID = r2, n2.VERSION = "0.1.0", e2.uuid = n2, e2.isUUID = r2;
        }) ? r.apply(t, i) : r) || (e.exports = o);
      }, function(e, t) {
        var n;
        n = function() {
          return this;
        }();
        try {
          n = n || new Function("return this")();
        } catch (e2) {
          "object" == typeof window && (n = window);
        }
        e.exports = n;
      }, function(e, t, n) {
        "use strict";
        t.byteLength = function(e2) {
          var t2 = c(e2), n2 = t2[0], r2 = t2[1];
          return 3 * (n2 + r2) / 4 - r2;
        }, t.toByteArray = function(e2) {
          var t2, n2, r2 = c(e2), a2 = r2[0], s2 = r2[1], u2 = new o(function(e3, t3, n3) {
            return 3 * (t3 + n3) / 4 - n3;
          }(0, a2, s2)), l2 = 0, f2 = s2 > 0 ? a2 - 4 : a2;
          for (n2 = 0; n2 < f2; n2 += 4)
            t2 = i[e2.charCodeAt(n2)] << 18 | i[e2.charCodeAt(n2 + 1)] << 12 | i[e2.charCodeAt(n2 + 2)] << 6 | i[e2.charCodeAt(n2 + 3)], u2[l2++] = t2 >> 16 & 255, u2[l2++] = t2 >> 8 & 255, u2[l2++] = 255 & t2;
          2 === s2 && (t2 = i[e2.charCodeAt(n2)] << 2 | i[e2.charCodeAt(n2 + 1)] >> 4, u2[l2++] = 255 & t2);
          1 === s2 && (t2 = i[e2.charCodeAt(n2)] << 10 | i[e2.charCodeAt(n2 + 1)] << 4 | i[e2.charCodeAt(n2 + 2)] >> 2, u2[l2++] = t2 >> 8 & 255, u2[l2++] = 255 & t2);
          return u2;
        }, t.fromByteArray = function(e2) {
          for (var t2, n2 = e2.length, i2 = n2 % 3, o2 = [], a2 = 0, s2 = n2 - i2; a2 < s2; a2 += 16383)
            o2.push(l(e2, a2, a2 + 16383 > s2 ? s2 : a2 + 16383));
          1 === i2 ? (t2 = e2[n2 - 1], o2.push(r[t2 >> 2] + r[t2 << 4 & 63] + "==")) : 2 === i2 && (t2 = (e2[n2 - 2] << 8) + e2[n2 - 1], o2.push(r[t2 >> 10] + r[t2 >> 4 & 63] + r[t2 << 2 & 63] + "="));
          return o2.join("");
        };
        for (var r = [], i = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, u = a.length; s < u; ++s)
          r[s] = a[s], i[a.charCodeAt(s)] = s;
        function c(e2) {
          var t2 = e2.length;
          if (t2 % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
          var n2 = e2.indexOf("=");
          return -1 === n2 && (n2 = t2), [n2, n2 === t2 ? 0 : 4 - n2 % 4];
        }
        function l(e2, t2, n2) {
          for (var i2, o2, a2 = [], s2 = t2; s2 < n2; s2 += 3)
            i2 = (e2[s2] << 16 & 16711680) + (e2[s2 + 1] << 8 & 65280) + (255 & e2[s2 + 2]), a2.push(r[(o2 = i2) >> 18 & 63] + r[o2 >> 12 & 63] + r[o2 >> 6 & 63] + r[63 & o2]);
          return a2.join("");
        }
        i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
      }, function(e, t) {
        t.read = function(e2, t2, n, r, i) {
          var o, a, s = 8 * i - r - 1, u = (1 << s) - 1, c = u >> 1, l = -7, f2 = n ? i - 1 : 0, d = n ? -1 : 1, p = e2[t2 + f2];
          for (f2 += d, o = p & (1 << -l) - 1, p >>= -l, l += s; l > 0; o = 256 * o + e2[t2 + f2], f2 += d, l -= 8)
            ;
          for (a = o & (1 << -l) - 1, o >>= -l, l += r; l > 0; a = 256 * a + e2[t2 + f2], f2 += d, l -= 8)
            ;
          if (0 === o)
            o = 1 - c;
          else {
            if (o === u)
              return a ? NaN : 1 / 0 * (p ? -1 : 1);
            a += Math.pow(2, r), o -= c;
          }
          return (p ? -1 : 1) * a * Math.pow(2, o - r);
        }, t.write = function(e2, t2, n, r, i, o) {
          var a, s, u, c = 8 * o - i - 1, l = (1 << c) - 1, f2 = l >> 1, d = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = r ? 0 : o - 1, h = r ? 1 : -1, v = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
          for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (s = isNaN(t2) ? 1 : 0, a = l) : (a = Math.floor(Math.log(t2) / Math.LN2), t2 * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), (t2 += a + f2 >= 1 ? d / u : d * Math.pow(2, 1 - f2)) * u >= 2 && (a++, u /= 2), a + f2 >= l ? (s = 0, a = l) : a + f2 >= 1 ? (s = (t2 * u - 1) * Math.pow(2, i), a += f2) : (s = t2 * Math.pow(2, f2 - 1) * Math.pow(2, i), a = 0)); i >= 8; e2[n + p] = 255 & s, p += h, s /= 256, i -= 8)
            ;
          for (a = a << i | s, c += i; c > 0; e2[n + p] = 255 & a, p += h, a /= 256, c -= 8)
            ;
          e2[n + p - h] |= 128 * v;
        };
      }, function(e, t) {
        var n = {}.toString;
        e.exports = Array.isArray || function(e2) {
          return "[object Array]" == n.call(e2);
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(7)), o = r(n(5)), a = r(n(6)), s = r(n(4)), u = (r(n(20)), r(n(8)), r(n(23)), r(n(37))), c = r(n(38)), l = r(n(3)), f2 = (n(2), r(n(10))), d = function() {
          function e2(t2) {
            var n2 = t2.subscribeEndpoint, r2 = t2.leaveEndpoint, i2 = t2.heartbeatEndpoint, a2 = t2.setStateEndpoint, l2 = t2.timeEndpoint, f3 = t2.getFileUrl, d2 = t2.config, p = t2.crypto, h = t2.listenerManager;
            (0, o.default)(this, e2), (0, s.default)(this, "_crypto", void 0), (0, s.default)(this, "_config", void 0), (0, s.default)(this, "_listenerManager", void 0), (0, s.default)(this, "_reconnectionManager", void 0), (0, s.default)(this, "_leaveEndpoint", void 0), (0, s.default)(this, "_heartbeatEndpoint", void 0), (0, s.default)(this, "_setStateEndpoint", void 0), (0, s.default)(this, "_subscribeEndpoint", void 0), (0, s.default)(this, "_getFileUrl", void 0), (0, s.default)(this, "_channels", void 0), (0, s.default)(this, "_presenceChannels", void 0), (0, s.default)(this, "_heartbeatChannels", void 0), (0, s.default)(this, "_heartbeatChannelGroups", void 0), (0, s.default)(this, "_channelGroups", void 0), (0, s.default)(this, "_presenceChannelGroups", void 0), (0, s.default)(this, "_currentTimetoken", void 0), (0, s.default)(this, "_lastTimetoken", void 0), (0, s.default)(this, "_storedTimetoken", void 0), (0, s.default)(this, "_region", void 0), (0, s.default)(this, "_subscribeCall", void 0), (0, s.default)(this, "_heartbeatTimer", void 0), (0, s.default)(this, "_subscriptionStatusAnnounced", void 0), (0, s.default)(this, "_autoNetworkDetection", void 0), (0, s.default)(this, "_isOnline", void 0), (0, s.default)(this, "_pendingChannelSubscriptions", void 0), (0, s.default)(this, "_pendingChannelGroupSubscriptions", void 0), (0, s.default)(this, "_dedupingManager", void 0), this._listenerManager = h, this._config = d2, this._leaveEndpoint = r2, this._heartbeatEndpoint = i2, this._setStateEndpoint = a2, this._subscribeEndpoint = n2, this._getFileUrl = f3, this._crypto = p, this._channels = {}, this._presenceChannels = {}, this._heartbeatChannels = {}, this._heartbeatChannelGroups = {}, this._channelGroups = {}, this._presenceChannelGroups = {}, this._pendingChannelSubscriptions = [], this._pendingChannelGroupSubscriptions = [], this._currentTimetoken = 0, this._lastTimetoken = 0, this._storedTimetoken = null, this._subscriptionStatusAnnounced = false, this._isOnline = true, this._reconnectionManager = new u.default({ timeEndpoint: l2 }), this._dedupingManager = new c.default({ config: d2 });
          }
          return (0, a.default)(e2, [{ key: "adaptStateChange", value: function(e3, t2) {
            var n2 = this, r2 = e3.state, i2 = e3.channels, o2 = void 0 === i2 ? [] : i2, a2 = e3.channelGroups, s2 = void 0 === a2 ? [] : a2;
            return o2.forEach(function(e4) {
              e4 in n2._channels && (n2._channels[e4].state = r2);
            }), s2.forEach(function(e4) {
              e4 in n2._channelGroups && (n2._channelGroups[e4].state = r2);
            }), this._setStateEndpoint({ state: r2, channels: o2, channelGroups: s2 }, t2);
          } }, { key: "adaptPresenceChange", value: function(e3) {
            var t2 = this, n2 = e3.connected, r2 = e3.channels, i2 = void 0 === r2 ? [] : r2, o2 = e3.channelGroups, a2 = void 0 === o2 ? [] : o2;
            n2 ? (i2.forEach(function(e4) {
              t2._heartbeatChannels[e4] = { state: {} };
            }), a2.forEach(function(e4) {
              t2._heartbeatChannelGroups[e4] = { state: {} };
            })) : (i2.forEach(function(e4) {
              e4 in t2._heartbeatChannels && delete t2._heartbeatChannels[e4];
            }), a2.forEach(function(e4) {
              e4 in t2._heartbeatChannelGroups && delete t2._heartbeatChannelGroups[e4];
            }), false === this._config.suppressLeaveEvents && this._leaveEndpoint({ channels: i2, channelGroups: a2 }, function(e4) {
              t2._listenerManager.announceStatus(e4);
            })), this.reconnect();
          } }, { key: "adaptSubscribeChange", value: function(e3) {
            var t2 = this, n2 = e3.timetoken, r2 = e3.channels, i2 = void 0 === r2 ? [] : r2, o2 = e3.channelGroups, a2 = void 0 === o2 ? [] : o2, s2 = e3.withPresence, u2 = void 0 !== s2 && s2, c2 = e3.withHeartbeats, l2 = void 0 !== c2 && c2;
            this._config.subscribeKey && "" !== this._config.subscribeKey ? (n2 && (this._lastTimetoken = this._currentTimetoken, this._currentTimetoken = n2), "0" !== this._currentTimetoken && 0 !== this._currentTimetoken && (this._storedTimetoken = this._currentTimetoken, this._currentTimetoken = 0), i2.forEach(function(e4) {
              t2._channels[e4] = { state: {} }, u2 && (t2._presenceChannels[e4] = {}), (l2 || t2._config.getHeartbeatInterval()) && (t2._heartbeatChannels[e4] = {}), t2._pendingChannelSubscriptions.push(e4);
            }), a2.forEach(function(e4) {
              t2._channelGroups[e4] = { state: {} }, u2 && (t2._presenceChannelGroups[e4] = {}), (l2 || t2._config.getHeartbeatInterval()) && (t2._heartbeatChannelGroups[e4] = {}), t2._pendingChannelGroupSubscriptions.push(e4);
            }), this._subscriptionStatusAnnounced = false, this.reconnect()) : console && console.log && console.log("subscribe key missing; aborting subscribe");
          } }, { key: "adaptUnsubscribeChange", value: function(e3, t2) {
            var n2 = this, r2 = e3.channels, i2 = void 0 === r2 ? [] : r2, o2 = e3.channelGroups, a2 = void 0 === o2 ? [] : o2, s2 = [], u2 = [];
            i2.forEach(function(e4) {
              e4 in n2._channels && (delete n2._channels[e4], s2.push(e4), e4 in n2._heartbeatChannels && delete n2._heartbeatChannels[e4]), e4 in n2._presenceChannels && (delete n2._presenceChannels[e4], s2.push(e4));
            }), a2.forEach(function(e4) {
              e4 in n2._channelGroups && (delete n2._channelGroups[e4], u2.push(e4), e4 in n2._heartbeatChannelGroups && delete n2._heartbeatChannelGroups[e4]), e4 in n2._presenceChannelGroups && (delete n2._channelGroups[e4], u2.push(e4));
            }), 0 === s2.length && 0 === u2.length || (false !== this._config.suppressLeaveEvents || t2 || this._leaveEndpoint({ channels: s2, channelGroups: u2 }, function(e4) {
              e4.affectedChannels = s2, e4.affectedChannelGroups = u2, e4.currentTimetoken = n2._currentTimetoken, e4.lastTimetoken = n2._lastTimetoken, n2._listenerManager.announceStatus(e4);
            }), 0 === Object.keys(this._channels).length && 0 === Object.keys(this._presenceChannels).length && 0 === Object.keys(this._channelGroups).length && 0 === Object.keys(this._presenceChannelGroups).length && (this._lastTimetoken = 0, this._currentTimetoken = 0, this._storedTimetoken = null, this._region = null, this._reconnectionManager.stopPolling()), this.reconnect());
          } }, { key: "unsubscribeAll", value: function(e3) {
            this.adaptUnsubscribeChange({ channels: this.getSubscribedChannels(), channelGroups: this.getSubscribedChannelGroups() }, e3);
          } }, { key: "getHeartbeatChannels", value: function() {
            return Object.keys(this._heartbeatChannels);
          } }, { key: "getHeartbeatChannelGroups", value: function() {
            return Object.keys(this._heartbeatChannelGroups);
          } }, { key: "getSubscribedChannels", value: function() {
            return Object.keys(this._channels);
          } }, { key: "getSubscribedChannelGroups", value: function() {
            return Object.keys(this._channelGroups);
          } }, { key: "reconnect", value: function() {
            this._startSubscribeLoop(), this._registerHeartbeatTimer();
          } }, { key: "disconnect", value: function() {
            this._stopSubscribeLoop(), this._stopHeartbeatTimer(), this._reconnectionManager.stopPolling();
          } }, { key: "_registerHeartbeatTimer", value: function() {
            this._stopHeartbeatTimer(), 0 !== this._config.getHeartbeatInterval() && void 0 !== this._config.getHeartbeatInterval() && (this._performHeartbeatLoop(), this._heartbeatTimer = setInterval(this._performHeartbeatLoop.bind(this), 1e3 * this._config.getHeartbeatInterval()));
          } }, { key: "_stopHeartbeatTimer", value: function() {
            this._heartbeatTimer && (clearInterval(this._heartbeatTimer), this._heartbeatTimer = null);
          } }, { key: "_performHeartbeatLoop", value: function() {
            var e3 = this, t2 = this.getHeartbeatChannels(), n2 = this.getHeartbeatChannelGroups(), r2 = {};
            if (0 !== t2.length || 0 !== n2.length) {
              this.getSubscribedChannels().forEach(function(t3) {
                var n3 = e3._channels[t3].state;
                Object.keys(n3).length && (r2[t3] = n3);
              }), this.getSubscribedChannelGroups().forEach(function(t3) {
                var n3 = e3._channelGroups[t3].state;
                Object.keys(n3).length && (r2[t3] = n3);
              });
              this._heartbeatEndpoint({ channels: t2, channelGroups: n2, state: r2 }, function(t3) {
                t3.error && e3._config.announceFailedHeartbeats && e3._listenerManager.announceStatus(t3), t3.error && e3._config.autoNetworkDetection && e3._isOnline && (e3._isOnline = false, e3.disconnect(), e3._listenerManager.announceNetworkDown(), e3.reconnect()), !t3.error && e3._config.announceSuccessfulHeartbeats && e3._listenerManager.announceStatus(t3);
              }.bind(this));
            }
          } }, { key: "_startSubscribeLoop", value: function() {
            var e3 = this;
            this._stopSubscribeLoop();
            var t2 = {}, n2 = [], r2 = [];
            if (Object.keys(this._channels).forEach(function(r3) {
              var i3 = e3._channels[r3].state;
              Object.keys(i3).length && (t2[r3] = i3), n2.push(r3);
            }), Object.keys(this._presenceChannels).forEach(function(e4) {
              n2.push("".concat(e4, "-pnpres"));
            }), Object.keys(this._channelGroups).forEach(function(n3) {
              var i3 = e3._channelGroups[n3].state;
              Object.keys(i3).length && (t2[n3] = i3), r2.push(n3);
            }), Object.keys(this._presenceChannelGroups).forEach(function(e4) {
              r2.push("".concat(e4, "-pnpres"));
            }), 0 !== n2.length || 0 !== r2.length) {
              var i2 = { channels: n2, channelGroups: r2, state: t2, timetoken: this._currentTimetoken, filterExpression: this._config.filterExpression, region: this._region };
              this._subscribeCall = this._subscribeEndpoint(i2, this._processSubscribeResponse.bind(this));
            }
          } }, { key: "_processSubscribeResponse", value: function(e3, t2) {
            var n2 = this;
            if (e3.error)
              e3.category === f2.default.PNTimeoutCategory ? this._startSubscribeLoop() : e3.category === f2.default.PNNetworkIssuesCategory ? (this.disconnect(), e3.error && this._config.autoNetworkDetection && this._isOnline && (this._isOnline = false, this._listenerManager.announceNetworkDown()), this._reconnectionManager.onReconnection(function() {
                n2._config.autoNetworkDetection && !n2._isOnline && (n2._isOnline = true, n2._listenerManager.announceNetworkUp()), n2.reconnect(), n2._subscriptionStatusAnnounced = true;
                var t3 = { category: f2.default.PNReconnectedCategory, operation: e3.operation, lastTimetoken: n2._lastTimetoken, currentTimetoken: n2._currentTimetoken };
                n2._listenerManager.announceStatus(t3);
              }), this._reconnectionManager.startPolling(), this._listenerManager.announceStatus(e3)) : e3.category === f2.default.PNBadRequestCategory ? (this._stopHeartbeatTimer(), this._listenerManager.announceStatus(e3)) : this._listenerManager.announceStatus(e3);
            else {
              if (this._storedTimetoken ? (this._currentTimetoken = this._storedTimetoken, this._storedTimetoken = null) : (this._lastTimetoken = this._currentTimetoken, this._currentTimetoken = t2.metadata.timetoken), !this._subscriptionStatusAnnounced) {
                var r2 = {};
                r2.category = f2.default.PNConnectedCategory, r2.operation = e3.operation, r2.affectedChannels = this._pendingChannelSubscriptions, r2.subscribedChannels = this.getSubscribedChannels(), r2.affectedChannelGroups = this._pendingChannelGroupSubscriptions, r2.lastTimetoken = this._lastTimetoken, r2.currentTimetoken = this._currentTimetoken, this._subscriptionStatusAnnounced = true, this._listenerManager.announceStatus(r2), this._pendingChannelSubscriptions = [], this._pendingChannelGroupSubscriptions = [];
              }
              var o2 = t2.messages || [], a2 = this._config, s2 = a2.requestMessageCountThreshold, u2 = a2.dedupeOnSubscribe;
              if (s2 && o2.length >= s2) {
                var c2 = {};
                c2.category = f2.default.PNRequestMessageCountExceededCategory, c2.operation = e3.operation, this._listenerManager.announceStatus(c2);
              }
              o2.forEach(function(e4) {
                var t3 = e4.channel, r3 = e4.subscriptionMatch, o3 = e4.publishMetaData;
                if (t3 === r3 && (r3 = null), u2) {
                  if (n2._dedupingManager.isDuplicate(e4))
                    return;
                  n2._dedupingManager.addEntry(e4);
                }
                if (l.default.endsWith(e4.channel, "-pnpres")) {
                  var a3 = { channel: null, subscription: null };
                  a3.actualChannel = null != r3 ? t3 : null, a3.subscribedChannel = null != r3 ? r3 : t3, t3 && (a3.channel = t3.substring(0, t3.lastIndexOf("-pnpres"))), r3 && (a3.subscription = r3.substring(0, r3.lastIndexOf("-pnpres"))), a3.action = e4.payload.action, a3.state = e4.payload.data, a3.timetoken = o3.publishTimetoken, a3.occupancy = e4.payload.occupancy, a3.uuid = e4.payload.uuid, a3.timestamp = e4.payload.timestamp, e4.payload.join && (a3.join = e4.payload.join), e4.payload.leave && (a3.leave = e4.payload.leave), e4.payload.timeout && (a3.timeout = e4.payload.timeout), n2._listenerManager.announcePresence(a3);
                } else if (1 === e4.messageType) {
                  var s3 = { channel: null, subscription: null };
                  s3.channel = t3, s3.subscription = r3, s3.timetoken = o3.publishTimetoken, s3.publisher = e4.issuingClientId, e4.userMetadata && (s3.userMetadata = e4.userMetadata), s3.message = e4.payload, n2._listenerManager.announceSignal(s3);
                } else if (2 === e4.messageType) {
                  var c3 = { channel: null, subscription: null };
                  c3.channel = t3, c3.subscription = r3, c3.timetoken = o3.publishTimetoken, c3.publisher = e4.issuingClientId, e4.userMetadata && (c3.userMetadata = e4.userMetadata), c3.message = { event: e4.payload.event, type: e4.payload.type, data: e4.payload.data }, n2._listenerManager.announceObjects(c3), "user" === e4.payload.type ? n2._listenerManager.announceUser(c3) : "space" === e4.payload.type ? n2._listenerManager.announceSpace(c3) : "membership" === e4.payload.type && n2._listenerManager.announceMembership(c3);
                } else if (3 === e4.messageType) {
                  var f3 = {};
                  f3.channel = t3, f3.subscription = r3, f3.timetoken = o3.publishTimetoken, f3.publisher = e4.issuingClientId, f3.data = { messageTimetoken: e4.payload.data.messageTimetoken, actionTimetoken: e4.payload.data.actionTimetoken, type: e4.payload.data.type, uuid: e4.issuingClientId, value: e4.payload.data.value }, f3.event = e4.payload.event, n2._listenerManager.announceMessageAction(f3);
                } else if (4 === e4.messageType) {
                  var d2 = {};
                  d2.channel = t3, d2.subscription = r3, d2.timetoken = o3.publishTimetoken, d2.publisher = e4.issuingClientId;
                  var p = e4.payload;
                  if (n2._config.cipherKey) {
                    var h = n2._crypto.decrypt(e4.payload);
                    "object" === (0, i.default)(h) && null !== h && (p = h);
                  }
                  e4.userMetadata && (d2.userMetadata = e4.userMetadata), d2.message = p.message, d2.file = { id: p.file.id, name: p.file.name, url: n2._getFileUrl({ id: p.file.id, name: p.file.name, channel: t3 }) }, n2._listenerManager.announceFile(d2);
                } else {
                  var v = { channel: null, subscription: null };
                  v.actualChannel = null != r3 ? t3 : null, v.subscribedChannel = null != r3 ? r3 : t3, v.channel = t3, v.subscription = r3, v.timetoken = o3.publishTimetoken, v.publisher = e4.issuingClientId, e4.userMetadata && (v.userMetadata = e4.userMetadata), n2._config.cipherKey ? v.message = n2._crypto.decrypt(e4.payload) : v.message = e4.payload, n2._listenerManager.announceMessage(v);
                }
              }), this._region = t2.metadata.region, this._startSubscribeLoop();
            }
          } }, { key: "_stopSubscribeLoop", value: function() {
            this._subscribeCall && ("function" == typeof this._subscribeCall.abort && this._subscribeCall.abort(), this._subscribeCall = null);
          } }]), e2;
        }();
        t.default = d, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = (r(n(24)), n(2), function() {
          function e2(t2) {
            var n2 = t2.timeEndpoint;
            (0, i.default)(this, e2), (0, a.default)(this, "_reconnectionCallback", void 0), (0, a.default)(this, "_timeEndpoint", void 0), (0, a.default)(this, "_timeTimer", void 0), this._timeEndpoint = n2;
          }
          return (0, o.default)(e2, [{ key: "onReconnection", value: function(e3) {
            this._reconnectionCallback = e3;
          } }, { key: "startPolling", value: function() {
            this._timeTimer = setInterval(this._performTimeLoop.bind(this), 3e3);
          } }, { key: "stopPolling", value: function() {
            clearInterval(this._timeTimer);
          } }, { key: "_performTimeLoop", value: function() {
            var e3 = this;
            this._timeEndpoint(function(t2) {
              t2.error || (clearInterval(e3._timeTimer), e3._reconnectionCallback());
            });
          } }]), e2;
        }());
        t.default = s, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = (r(n(8)), n(2), function() {
          function e2(t2) {
            var n2 = t2.config;
            (0, i.default)(this, e2), (0, a.default)(this, "_config", void 0), (0, a.default)(this, "hashHistory", void 0), this.hashHistory = [], this._config = n2;
          }
          return (0, o.default)(e2, [{ key: "getKey", value: function(e3) {
            var t2 = function(e4) {
              var t3 = 0;
              if (0 === e4.length)
                return t3;
              for (var n3 = 0; n3 < e4.length; n3 += 1) {
                t3 = (t3 << 5) - t3 + e4.charCodeAt(n3), t3 &= t3;
              }
              return t3;
            }(JSON.stringify(e3.payload)).toString(), n2 = e3.publishMetaData.publishTimetoken;
            return "".concat(n2, "-").concat(t2);
          } }, { key: "isDuplicate", value: function(e3) {
            return this.hashHistory.includes(this.getKey(e3));
          } }, { key: "addEntry", value: function(e3) {
            this.hashHistory.length >= this._config.maximumCacheSize && this.hashHistory.shift(), this.hashHistory.push(this.getKey(e3));
          } }, { key: "clearHistory", value: function() {
            this.hashHistory = [];
          } }]), e2;
        }());
        t.default = s, e.exports = t.default;
      }, function(e, t) {
        var n, r, i = e.exports = {};
        function o() {
          throw new Error("setTimeout has not been defined");
        }
        function a() {
          throw new Error("clearTimeout has not been defined");
        }
        function s(e2) {
          if (n === setTimeout)
            return setTimeout(e2, 0);
          if ((n === o || !n) && setTimeout)
            return n = setTimeout, setTimeout(e2, 0);
          try {
            return n(e2, 0);
          } catch (t2) {
            try {
              return n.call(null, e2, 0);
            } catch (t3) {
              return n.call(this, e2, 0);
            }
          }
        }
        !function() {
          try {
            n = "function" == typeof setTimeout ? setTimeout : o;
          } catch (e2) {
            n = o;
          }
          try {
            r = "function" == typeof clearTimeout ? clearTimeout : a;
          } catch (e2) {
            r = a;
          }
        }();
        var u, c = [], l = false, f2 = -1;
        function d() {
          l && u && (l = false, u.length ? c = u.concat(c) : f2 = -1, c.length && p());
        }
        function p() {
          if (!l) {
            var e2 = s(d);
            l = true;
            for (var t2 = c.length; t2; ) {
              for (u = c, c = []; ++f2 < t2; )
                u && u[f2].run();
              f2 = -1, t2 = c.length;
            }
            u = null, l = false, function(e3) {
              if (r === clearTimeout)
                return clearTimeout(e3);
              if ((r === a || !r) && clearTimeout)
                return r = clearTimeout, clearTimeout(e3);
              try {
                r(e3);
              } catch (t3) {
                try {
                  return r.call(null, e3);
                } catch (t4) {
                  return r.call(this, e3);
                }
              }
            }(e2);
          }
        }
        function h(e2, t2) {
          this.fun = e2, this.array = t2;
        }
        function v() {
        }
        i.nextTick = function(e2) {
          var t2 = new Array(arguments.length - 1);
          if (arguments.length > 1)
            for (var n2 = 1; n2 < arguments.length; n2++)
              t2[n2 - 1] = arguments[n2];
          c.push(new h(e2, t2)), 1 !== c.length || l || s(p);
        }, h.prototype.run = function() {
          this.fun.apply(null, this.array);
        }, i.title = "browser", i.browser = true, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = v, i.addListener = v, i.once = v, i.off = v, i.removeListener = v, i.removeAllListeners = v, i.emit = v, i.prependListener = v, i.prependOnceListener = v, i.listeners = function(e2) {
          return [];
        }, i.binding = function(e2) {
          throw new Error("process.binding is not supported");
        }, i.cwd = function() {
          return "/";
        }, i.chdir = function(e2) {
          throw new Error("process.chdir is not supported");
        }, i.umask = function() {
          return 0;
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = r(n(1)), u = function() {
          function e2(t2) {
            (0, i.default)(this, e2), (0, a.default)(this, "_maximumSamplesCount", 100), (0, a.default)(this, "_trackedLatencies", {}), (0, a.default)(this, "_latencies", {}), this._maximumSamplesCount = t2.maximumSamplesCount || this._maximumSamplesCount;
          }
          return (0, o.default)(e2, [{ key: "operationsLatencyForRequest", value: function() {
            var e3 = this, t2 = {};
            return Object.keys(this._latencies).forEach(function(n2) {
              var r2 = e3._latencies[n2], i2 = e3._averageLatency(r2);
              i2 > 0 && (t2["l_".concat(n2)] = i2);
            }), t2;
          } }, { key: "startLatencyMeasure", value: function(e3, t2) {
            e3 !== s.default.PNSubscribeOperation && t2 && (this._trackedLatencies[t2] = Date.now());
          } }, { key: "stopLatencyMeasure", value: function(e3, t2) {
            if (e3 !== s.default.PNSubscribeOperation && t2) {
              var n2 = this._endpointName(e3), r2 = this._latencies[n2], i2 = this._trackedLatencies[t2];
              r2 || (r2 = this._latencies[n2] = []), r2.push(Date.now() - i2), r2.length > this._maximumSamplesCount && r2.splice(0, r2.length - this._maximumSamplesCount), delete this._trackedLatencies[t2];
            }
          } }, { key: "_averageLatency", value: function(e3) {
            return Math.floor(e3.reduce(function(e4, t2) {
              return e4 + t2;
            }, 0) / e3.length);
          } }, { key: "_endpointName", value: function(e3) {
            var t2 = null;
            switch (e3) {
              case s.default.PNPublishOperation:
                t2 = "pub";
                break;
              case s.default.PNSignalOperation:
                t2 = "sig";
                break;
              case s.default.PNHistoryOperation:
              case s.default.PNFetchMessagesOperation:
              case s.default.PNDeleteMessagesOperation:
              case s.default.PNMessageCounts:
                t2 = "hist";
                break;
              case s.default.PNUnsubscribeOperation:
              case s.default.PNWhereNowOperation:
              case s.default.PNHereNowOperation:
              case s.default.PNHeartbeatOperation:
              case s.default.PNSetStateOperation:
              case s.default.PNGetStateOperation:
                t2 = "pres";
                break;
              case s.default.PNAddChannelsToGroupOperation:
              case s.default.PNRemoveChannelsFromGroupOperation:
              case s.default.PNChannelGroupsOperation:
              case s.default.PNRemoveGroupOperation:
              case s.default.PNChannelsForGroupOperation:
                t2 = "cg";
                break;
              case s.default.PNPushNotificationEnabledChannelsOperation:
              case s.default.PNRemoveAllPushNotificationsOperation:
                t2 = "push";
                break;
              case s.default.PNCreateUserOperation:
              case s.default.PNUpdateUserOperation:
              case s.default.PNDeleteUserOperation:
              case s.default.PNGetUserOperation:
              case s.default.PNGetUsersOperation:
              case s.default.PNCreateSpaceOperation:
              case s.default.PNUpdateSpaceOperation:
              case s.default.PNDeleteSpaceOperation:
              case s.default.PNGetSpaceOperation:
              case s.default.PNGetSpacesOperation:
              case s.default.PNGetMembersOperation:
              case s.default.PNUpdateMembersOperation:
              case s.default.PNGetMembershipsOperation:
              case s.default.PNUpdateMembershipsOperation:
                t2 = "obj";
                break;
              case s.default.PNAddMessageActionOperation:
              case s.default.PNRemoveMessageActionOperation:
              case s.default.PNGetMessageActionsOperation:
                t2 = "msga";
                break;
              case s.default.PNAccessManagerGrant:
              case s.default.PNAccessManagerAudit:
                t2 = "pam";
                break;
              case s.default.PNAccessManagerGrantToken:
                t2 = "pam3";
                break;
              default:
                t2 = "time";
            }
            return t2;
          } }]), e2;
        }();
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = t.FCMNotificationPayload = t.MPNSNotificationPayload = t.APNSNotificationPayload = void 0;
        var i = r(n(42)), o = r(n(19)), a = r(n(14)), s = r(n(16)), u = r(n(13)), c = r(n(5)), l = r(n(6)), f2 = r(n(4));
        n(2);
        function d(e2, t2) {
          var n2 = Object.keys(e2);
          if (Object.getOwnPropertySymbols) {
            var r2 = Object.getOwnPropertySymbols(e2);
            t2 && (r2 = r2.filter(function(t3) {
              return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
            })), n2.push.apply(n2, r2);
          }
          return n2;
        }
        function p(e2) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var n2 = null != arguments[t2] ? arguments[t2] : {};
            t2 % 2 ? d(Object(n2), true).forEach(function(t3) {
              (0, f2.default)(e2, t3, n2[t3]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(n2)) : d(Object(n2)).forEach(function(t3) {
              Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(n2, t3));
            });
          }
          return e2;
        }
        function h(e2) {
          var t2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), true;
            } catch (e3) {
              return false;
            }
          }();
          return function() {
            var n2, r2 = (0, u.default)(e2);
            if (t2) {
              var i2 = (0, u.default)(this).constructor;
              n2 = Reflect.construct(r2, arguments, i2);
            } else
              n2 = r2.apply(this, arguments);
            return (0, s.default)(this, n2);
          };
        }
        var v = function() {
          function e2(t2, n2, r2) {
            (0, c.default)(this, e2), (0, f2.default)(this, "_subtitle", void 0), (0, f2.default)(this, "_payload", void 0), (0, f2.default)(this, "_badge", void 0), (0, f2.default)(this, "_sound", void 0), (0, f2.default)(this, "_title", void 0), (0, f2.default)(this, "_body", void 0), this._payload = t2, this._setDefaultPayloadStructure(), this.title = n2, this.body = r2;
          }
          return (0, l.default)(e2, [{ key: "payload", get: function() {
            return this._payload;
          } }, { key: "title", set: function(e3) {
            this._title = e3;
          } }, { key: "subtitle", set: function(e3) {
            this._subtitle = e3;
          } }, { key: "body", set: function(e3) {
            this._body = e3;
          } }, { key: "badge", set: function(e3) {
            this._badge = e3;
          } }, { key: "sound", set: function(e3) {
            this._sound = e3;
          } }]), (0, l.default)(e2, [{ key: "_setDefaultPayloadStructure", value: function() {
          } }, { key: "toObject", value: function() {
            return {};
          } }]), e2;
        }(), g = function(e2) {
          (0, a.default)(n2, e2);
          var t2 = h(n2);
          function n2() {
            var e3;
            (0, c.default)(this, n2);
            for (var r2 = arguments.length, i2 = new Array(r2), a2 = 0; a2 < r2; a2++)
              i2[a2] = arguments[a2];
            return e3 = t2.call.apply(t2, [this].concat(i2)), (0, f2.default)((0, o.default)(e3), "_configurations", void 0), (0, f2.default)((0, o.default)(e3), "_apnsPushType", void 0), (0, f2.default)((0, o.default)(e3), "_isSilent", void 0), e3;
          }
          return (0, l.default)(n2, [{ key: "_setDefaultPayloadStructure", value: function() {
            this._payload.aps = { alert: {} };
          } }, { key: "toObject", value: function() {
            var e3 = this, t3 = p({}, this._payload), n3 = t3.aps, r2 = n3.alert;
            if (this._isSilent && (n3["content-available"] = 1), "apns2" === this._apnsPushType) {
              if (!this._configurations || !this._configurations.length)
                throw new ReferenceError("APNS2 configuration is missing");
              var i2 = [];
              this._configurations.forEach(function(t4) {
                i2.push(e3._objectFromAPNS2Configuration(t4));
              }), i2.length && (t3.pn_push = i2);
            }
            return r2 && Object.keys(r2).length || delete n3.alert, this._isSilent && (delete n3.alert, delete n3.badge, delete n3.sound, r2 = {}), this._isSilent || Object.keys(r2).length ? t3 : null;
          } }, { key: "_objectFromAPNS2Configuration", value: function(e3) {
            var t3 = this;
            if (!e3.targets || !e3.targets.length)
              throw new ReferenceError("At least one APNS2 target should be provided");
            var n3 = [];
            e3.targets.forEach(function(e4) {
              n3.push(t3._objectFromAPNSTarget(e4));
            });
            var r2 = e3.collapseId, i2 = e3.expirationDate, o2 = { auth_method: "token", targets: n3, version: "v2" };
            return r2 && r2.length && (o2.collapse_id = r2), i2 && (o2.expiration = i2.toISOString()), o2;
          } }, { key: "_objectFromAPNSTarget", value: function(e3) {
            if (!e3.topic || !e3.topic.length)
              throw new TypeError("Target 'topic' undefined.");
            var t3 = e3.topic, n3 = e3.environment, r2 = void 0 === n3 ? "development" : n3, i2 = e3.excludedDevices, o2 = void 0 === i2 ? [] : i2, a2 = { topic: t3, environment: r2 };
            return o2.length && (a2.excluded_devices = o2), a2;
          } }, { key: "configurations", set: function(e3) {
            e3 && e3.length && (this._configurations = e3);
          } }, { key: "notification", get: function() {
            return this._payload.aps;
          } }, { key: "title", get: function() {
            return this._title;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.aps.alert.title = e3, this._title = e3);
          } }, { key: "subtitle", get: function() {
            return this._subtitle;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.aps.alert.subtitle = e3, this._subtitle = e3);
          } }, { key: "body", get: function() {
            return this._body;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.aps.alert.body = e3, this._body = e3);
          } }, { key: "badge", get: function() {
            return this._badge;
          }, set: function(e3) {
            null != e3 && (this._payload.aps.badge = e3, this._badge = e3);
          } }, { key: "sound", get: function() {
            return this._sound;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.aps.sound = e3, this._sound = e3);
          } }, { key: "silent", set: function(e3) {
            this._isSilent = e3;
          } }]), n2;
        }(v);
        t.APNSNotificationPayload = g;
        var y = function(e2) {
          (0, a.default)(n2, e2);
          var t2 = h(n2);
          function n2() {
            var e3;
            (0, c.default)(this, n2);
            for (var r2 = arguments.length, i2 = new Array(r2), a2 = 0; a2 < r2; a2++)
              i2[a2] = arguments[a2];
            return e3 = t2.call.apply(t2, [this].concat(i2)), (0, f2.default)((0, o.default)(e3), "_backContent", void 0), (0, f2.default)((0, o.default)(e3), "_backTitle", void 0), (0, f2.default)((0, o.default)(e3), "_count", void 0), (0, f2.default)((0, o.default)(e3), "_type", void 0), e3;
          }
          return (0, l.default)(n2, [{ key: "toObject", value: function() {
            return Object.keys(this._payload).length ? p({}, this._payload) : null;
          } }, { key: "backContent", get: function() {
            return this._backContent;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.back_content = e3, this._backContent = e3);
          } }, { key: "backTitle", get: function() {
            return this._backTitle;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.back_title = e3, this._backTitle = e3);
          } }, { key: "count", get: function() {
            return this._count;
          }, set: function(e3) {
            null != e3 && (this._payload.count = e3, this._count = e3);
          } }, { key: "title", get: function() {
            return this._title;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.title = e3, this._title = e3);
          } }, { key: "type", get: function() {
            return this._type;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.type = e3, this._type = e3);
          } }, { key: "subtitle", get: function() {
            return this.backTitle;
          }, set: function(e3) {
            this.backTitle = e3;
          } }, { key: "body", get: function() {
            return this.backContent;
          }, set: function(e3) {
            this.backContent = e3;
          } }, { key: "badge", get: function() {
            return this.count;
          }, set: function(e3) {
            this.count = e3;
          } }]), n2;
        }(v);
        t.MPNSNotificationPayload = y;
        var b = function(e2) {
          (0, a.default)(n2, e2);
          var t2 = h(n2);
          function n2() {
            var e3;
            (0, c.default)(this, n2);
            for (var r2 = arguments.length, i2 = new Array(r2), a2 = 0; a2 < r2; a2++)
              i2[a2] = arguments[a2];
            return e3 = t2.call.apply(t2, [this].concat(i2)), (0, f2.default)((0, o.default)(e3), "_isSilent", void 0), (0, f2.default)((0, o.default)(e3), "_icon", void 0), (0, f2.default)((0, o.default)(e3), "_tag", void 0), e3;
          }
          return (0, l.default)(n2, [{ key: "_setDefaultPayloadStructure", value: function() {
            this._payload.notification = {}, this._payload.data = {};
          } }, { key: "toObject", value: function() {
            var e3 = p({}, this._payload.data), t3 = null, n3 = {};
            if (Object.keys(this._payload).length > 2) {
              var r2 = this._payload, o2 = (r2.notification, r2.data, (0, i.default)(r2, ["notification", "data"]));
              e3 = p(p({}, e3), o2);
            }
            return this._isSilent ? e3.notification = this._payload.notification : t3 = this._payload.notification, Object.keys(e3).length && (n3.data = e3), t3 && Object.keys(t3).length && (n3.notification = t3), Object.keys(n3).length ? n3 : null;
          } }, { key: "notification", get: function() {
            return this._payload.notification;
          } }, { key: "data", get: function() {
            return this._payload.data;
          } }, { key: "title", get: function() {
            return this._title;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.notification.title = e3, this._title = e3);
          } }, { key: "body", get: function() {
            return this._body;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.notification.body = e3, this._body = e3);
          } }, { key: "sound", get: function() {
            return this._sound;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.notification.sound = e3, this._sound = e3);
          } }, { key: "icon", get: function() {
            return this._icon;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.notification.icon = e3, this._icon = e3);
          } }, { key: "tag", get: function() {
            return this._tag;
          }, set: function(e3) {
            e3 && e3.length && (this._payload.notification.tag = e3, this._tag = e3);
          } }, { key: "silent", set: function(e3) {
            this._isSilent = e3;
          } }]), n2;
        }(v);
        t.FCMNotificationPayload = b;
        var m = function() {
          function e2(t2, n2) {
            (0, c.default)(this, e2), (0, f2.default)(this, "_payload", void 0), (0, f2.default)(this, "_debugging", void 0), (0, f2.default)(this, "_subtitle", void 0), (0, f2.default)(this, "_badge", void 0), (0, f2.default)(this, "_sound", void 0), (0, f2.default)(this, "_title", void 0), (0, f2.default)(this, "_body", void 0), (0, f2.default)(this, "apns", void 0), (0, f2.default)(this, "mpns", void 0), (0, f2.default)(this, "fcm", void 0), this._payload = { apns: {}, mpns: {}, fcm: {} }, this._title = t2, this._body = n2, this.apns = new g(this._payload.apns, t2, n2), this.mpns = new y(this._payload.mpns, t2, n2), this.fcm = new b(this._payload.fcm, t2, n2);
          }
          return (0, l.default)(e2, [{ key: "debugging", set: function(e3) {
            this._debugging = e3;
          } }, { key: "title", get: function() {
            return this._title;
          } }, { key: "body", get: function() {
            return this._body;
          } }, { key: "subtitle", get: function() {
            return this._subtitle;
          }, set: function(e3) {
            this._subtitle = e3, this.apns.subtitle = e3, this.mpns.subtitle = e3, this.fcm.subtitle = e3;
          } }, { key: "badge", get: function() {
            return this._badge;
          }, set: function(e3) {
            this._badge = e3, this.apns.badge = e3, this.mpns.badge = e3, this.fcm.badge = e3;
          } }, { key: "sound", get: function() {
            return this._sound;
          }, set: function(e3) {
            this._sound = e3, this.apns.sound = e3, this.mpns.sound = e3, this.fcm.sound = e3;
          } }]), (0, l.default)(e2, [{ key: "buildPayload", value: function(e3) {
            var t2 = {};
            if (e3.includes("apns") || e3.includes("apns2")) {
              this.apns._apnsPushType = e3.includes("apns") ? "apns" : "apns2";
              var n2 = this.apns.toObject();
              n2 && Object.keys(n2).length && (t2.pn_apns = n2);
            }
            if (e3.includes("mpns")) {
              var r2 = this.mpns.toObject();
              r2 && Object.keys(r2).length && (t2.pn_mpns = r2);
            }
            if (e3.includes("fcm")) {
              var i2 = this.fcm.toObject();
              i2 && Object.keys(i2).length && (t2.pn_gcm = i2);
            }
            return Object.keys(t2).length && this._debugging && (t2.pn_debug = true), t2;
          } }]), e2;
        }();
        t.default = m;
      }, function(e, t, n) {
        var r = n(43);
        e.exports = function(e2, t2) {
          if (null == e2)
            return {};
          var n2, i, o = r(e2, t2);
          if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e2);
            for (i = 0; i < a.length; i++)
              n2 = a[i], t2.indexOf(n2) >= 0 || Object.prototype.propertyIsEnumerable.call(e2, n2) && (o[n2] = e2[n2]);
          }
          return o;
        };
      }, function(e, t) {
        e.exports = function(e2, t2) {
          if (null == e2)
            return {};
          var n, r, i = {}, o = Object.keys(e2);
          for (r = 0; r < o.length; r++)
            n = o[r], t2.indexOf(n) >= 0 || (i[n] = e2[n]);
          return i;
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = (r(n(8)), n(2), function() {
          function e2(t2, n2) {
            (0, i.default)(this, e2), (0, a.default)(this, "_config", void 0), (0, a.default)(this, "_cbor", void 0), (0, a.default)(this, "_token", void 0), this._config = t2, this._cbor = n2;
          }
          return (0, o.default)(e2, [{ key: "setToken", value: function(e3) {
            e3 && e3.length > 0 ? this._token = e3 : this._token = void 0;
          } }, { key: "getToken", value: function() {
            return this._token;
          } }, { key: "extractPermissions", value: function(e3) {
            var t2 = { read: false, write: false, manage: false, delete: false, get: false, update: false, join: false };
            return 128 == (128 & e3) && (t2.join = true), 64 == (64 & e3) && (t2.update = true), 32 == (32 & e3) && (t2.get = true), 8 == (8 & e3) && (t2.delete = true), 4 == (4 & e3) && (t2.manage = true), 2 == (2 & e3) && (t2.write = true), 1 == (1 & e3) && (t2.read = true), t2;
          } }, { key: "parseToken", value: function(e3) {
            var t2 = this, n2 = this._cbor.decodeToken(e3);
            if (void 0 !== n2) {
              var r2 = n2.res.uuid ? Object.keys(n2.res.uuid) : [], i2 = Object.keys(n2.res.chan), o2 = Object.keys(n2.res.grp), a2 = n2.pat.uuid ? Object.keys(n2.pat.uuid) : [], s2 = Object.keys(n2.pat.chan), u = Object.keys(n2.pat.grp), c = { version: n2.v, timestamp: n2.t, ttl: n2.ttl, authorized_uuid: n2.uuid }, l = r2.length > 0, f2 = i2.length > 0, d = o2.length > 0;
              (l || f2 || d) && (c.resources = {}, l && (c.resources.uuids = {}, r2.forEach(function(e4) {
                c.resources.uuids[e4] = t2.extractPermissions(n2.res.uuid[e4]);
              })), f2 && (c.resources.channels = {}, i2.forEach(function(e4) {
                c.resources.channels[e4] = t2.extractPermissions(n2.res.chan[e4]);
              })), d && (c.resources.groups = {}, o2.forEach(function(e4) {
                c.resources.groups[e4] = t2.extractPermissions(n2.res.grp[e4]);
              })));
              var p = a2.length > 0, h = s2.length > 0, v = u.length > 0;
              return (p || h || v) && (c.patterns = {}, p && (c.patterns.uuids = {}, a2.forEach(function(e4) {
                c.patterns.uuids[e4] = t2.extractPermissions(n2.pat.uuid[e4]);
              })), h && (c.patterns.channels = {}, s2.forEach(function(e4) {
                c.patterns.channels[e4] = t2.extractPermissions(n2.pat.chan[e4]);
              })), v && (c.patterns.groups = {}, u.forEach(function(e4) {
                c.patterns.groups[e4] = t2.extractPermissions(n2.pat.grp[e4]);
              }))), Object.keys(n2.meta).length > 0 && (c.meta = n2.meta), c.signature = n2.sig, c;
            }
          } }]), e2;
        }());
        t.default = s, e.exports = t.default;
      }, function(e, t, n) {
        var r = n(13), i = n(15), o = n(46), a = n(47);
        function s(t2) {
          var n2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return e.exports = s = function(e2) {
            if (null === e2 || !o(e2))
              return e2;
            if ("function" != typeof e2)
              throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== n2) {
              if (n2.has(e2))
                return n2.get(e2);
              n2.set(e2, t3);
            }
            function t3() {
              return a(e2, arguments, r(this).constructor);
            }
            return t3.prototype = Object.create(e2.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }), i(t3, e2);
          }, s(t2);
        }
        e.exports = s;
      }, function(e, t) {
        e.exports = function(e2) {
          return -1 !== Function.toString.call(e2).indexOf("[native code]");
        };
      }, function(e, t, n) {
        var r = n(15), i = n(48);
        function o(t2, n2, a) {
          return i() ? e.exports = o = Reflect.construct : e.exports = o = function(e2, t3, n3) {
            var i2 = [null];
            i2.push.apply(i2, t3);
            var o2 = new (Function.bind.apply(e2, i2))();
            return n3 && r(o2, n3.prototype), o2;
          }, o.apply(null, arguments);
        }
        e.exports = o;
      }, function(e, t) {
        e.exports = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
            })), true;
          } catch (e2) {
            return false;
          }
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNAddChannelsToGroupOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channels, r2 = t2.channelGroup, i2 = e2.config;
          if (!r2)
            return "Missing Channel Group";
          if (!n2 || 0 === n2.length)
            return "Missing Channels";
          if (!i2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channelGroup, r2 = e2.config;
          return "/v1/channel-registration/sub-key/".concat(r2.subscribeKey, "/channel-group/").concat(o.default.encodeString(n2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channels;
          return { add: (void 0 === n2 ? [] : n2).join(",") };
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNRemoveChannelsFromGroupOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channels, r2 = t2.channelGroup, i2 = e2.config;
          if (!r2)
            return "Missing Channel Group";
          if (!n2 || 0 === n2.length)
            return "Missing Channels";
          if (!i2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channelGroup, r2 = e2.config;
          return "/v1/channel-registration/sub-key/".concat(r2.subscribeKey, "/channel-group/").concat(o.default.encodeString(n2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channels;
          return { remove: (void 0 === n2 ? [] : n2).join(",") };
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNRemoveGroupOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channelGroup, r2 = e2.config;
          if (!n2)
            return "Missing Channel Group";
          if (!r2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channelGroup, r2 = e2.config;
          return "/v1/channel-registration/sub-key/".concat(r2.subscribeKey, "/channel-group/").concat(o.default.encodeString(n2), "/remove");
        }, t.isAuthSupported = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNChannelGroupsOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v1/channel-registration/sub-key/".concat(t2.subscribeKey, "/channel-group");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          return { groups: t2.payload.groups };
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNChannelsForGroupOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channelGroup, r2 = e2.config;
          if (!n2)
            return "Missing Channel Group";
          if (!r2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channelGroup, r2 = e2.config;
          return "/v1/channel-registration/sub-key/".concat(r2.subscribeKey, "/channel-group/").concat(o.default.encodeString(n2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          return { channels: t2.payload.channels };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNPushNotificationEnabledChannelsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = t2.channels, o = t2.topic, a = e2.config;
          if (!n2)
            return "Missing Device ID (device)";
          if (!r2)
            return "Missing GW Type (pushGateway: gcm, apns or apns2)";
          if ("apns2" === r2 && !o)
            return "Missing APNS2 topic";
          if (!i2 || 0 === i2.length)
            return "Missing Channels";
          if (!a.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = e2.config;
          if ("apns2" === r2)
            return "/v2/push/sub-key/".concat(i2.subscribeKey, "/devices-apns2/").concat(n2);
          return "/v1/push/sub-key/".concat(i2.subscribeKey, "/devices/").concat(n2);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.pushGateway, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, o = t2.environment, a = void 0 === o ? "development" : o, s = t2.topic, u = { type: n2, add: i2.join(",") };
          "apns2" === n2 && delete (u = Object.assign({}, u, { environment: a, topic: s })).type;
          return u;
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNPushNotificationEnabledChannelsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = t2.channels, o = t2.topic, a = e2.config;
          if (!n2)
            return "Missing Device ID (device)";
          if (!r2)
            return "Missing GW Type (pushGateway: gcm, apns or apns2)";
          if ("apns2" === r2 && !o)
            return "Missing APNS2 topic";
          if (!i2 || 0 === i2.length)
            return "Missing Channels";
          if (!a.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = e2.config;
          if ("apns2" === r2)
            return "/v2/push/sub-key/".concat(i2.subscribeKey, "/devices-apns2/").concat(n2);
          return "/v1/push/sub-key/".concat(i2.subscribeKey, "/devices/").concat(n2);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.pushGateway, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, o = t2.environment, a = void 0 === o ? "development" : o, s = t2.topic, u = { type: n2, remove: i2.join(",") };
          "apns2" === n2 && delete (u = Object.assign({}, u, { environment: a, topic: s })).type;
          return u;
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNPushNotificationEnabledChannelsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = t2.topic, o = e2.config;
          if (!n2)
            return "Missing Device ID (device)";
          if (!r2)
            return "Missing GW Type (pushGateway: gcm, apns or apns2)";
          if ("apns2" === r2 && !i2)
            return "Missing APNS2 topic";
          if (!o.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = e2.config;
          if ("apns2" === r2)
            return "/v2/push/sub-key/".concat(i2.subscribeKey, "/devices-apns2/").concat(n2);
          return "/v1/push/sub-key/".concat(i2.subscribeKey, "/devices/").concat(n2);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.pushGateway, r2 = t2.environment, i2 = void 0 === r2 ? "development" : r2, o = t2.topic, a = { type: n2 };
          "apns2" === n2 && delete (a = Object.assign({}, a, { environment: i2, topic: o })).type;
          return a;
        }, t.handleResponse = function(e2, t2) {
          return { channels: t2 };
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNRemoveAllPushNotificationsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = t2.topic, o = e2.config;
          if (!n2)
            return "Missing Device ID (device)";
          if (!r2)
            return "Missing GW Type (pushGateway: gcm, apns or apns2)";
          if ("apns2" === r2 && !i2)
            return "Missing APNS2 topic";
          if (!o.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.device, r2 = t2.pushGateway, i2 = e2.config;
          if ("apns2" === r2)
            return "/v2/push/sub-key/".concat(i2.subscribeKey, "/devices-apns2/").concat(n2, "/remove");
          return "/v1/push/sub-key/".concat(i2.subscribeKey, "/devices/").concat(n2, "/remove");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.pushGateway, r2 = t2.environment, i2 = void 0 === r2 ? "development" : r2, o = t2.topic, a = { type: n2 };
          "apns2" === n2 && delete (a = Object.assign({}, a, { environment: i2, topic: o })).type;
          return a;
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUnsubscribeOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, a = i2.length > 0 ? i2.join(",") : ",";
          return "/v2/presence/sub-key/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(a), "/leave");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channelGroups, r2 = void 0 === n2 ? [] : n2, i2 = {};
          r2.length > 0 && (i2["channel-group"] = r2.join(","));
          return i2;
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNWhereNowOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.uuid, i2 = void 0 === r2 ? n2.UUID : r2;
          return "/v2/presence/sub-key/".concat(n2.subscribeKey, "/uuid/").concat(o.default.encodeString(i2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          if (!t2.payload)
            return { channels: [] };
          return { channels: t2.payload.channels };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNHeartbeatOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, a = i2.length > 0 ? i2.join(",") : ",";
          return "/v2/presence/sub-key/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(a), "/heartbeat");
        }, t.isAuthSupported = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channelGroups, r2 = void 0 === n2 ? [] : n2, i2 = t2.state, o2 = void 0 === i2 ? {} : i2, a = e2.config, s = {};
          r2.length > 0 && (s["channel-group"] = r2.join(","));
          return s.state = JSON.stringify(o2), s.heartbeat = a.getPresenceTimeout(), s;
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetStateOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.uuid, i2 = void 0 === r2 ? n2.UUID : r2, a = t2.channels, s = void 0 === a ? [] : a, u = s.length > 0 ? s.join(",") : ",";
          return "/v2/presence/sub-key/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(u), "/uuid/").concat(i2);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channelGroups, r2 = void 0 === n2 ? [] : n2, i2 = {};
          r2.length > 0 && (i2["channel-group"] = r2.join(","));
          return i2;
        }, t.handleResponse = function(e2, t2, n2) {
          var r2 = n2.channels, i2 = void 0 === r2 ? [] : r2, o2 = n2.channelGroups, a = void 0 === o2 ? [] : o2, s = {};
          1 === i2.length && 0 === a.length ? s[i2[0]] = t2.payload : s = t2.payload;
          return { channels: s };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNSetStateOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.state, i2 = t2.channels, o2 = void 0 === i2 ? [] : i2, a = t2.channelGroups, s = void 0 === a ? [] : a;
          if (!r2)
            return "Missing State";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (0 === o2.length && 0 === s.length)
            return "Please provide a list of channels and/or channel-groups";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, a = i2.length > 0 ? i2.join(",") : ",";
          return "/v2/presence/sub-key/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(a), "/uuid/").concat(o.default.encodeString(n2.UUID), "/data");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.state, r2 = t2.channelGroups, i2 = void 0 === r2 ? [] : r2, o2 = {};
          o2.state = JSON.stringify(n2), i2.length > 0 && (o2["channel-group"] = i2.join(","));
          return o2;
        }, t.handleResponse = function(e2, t2) {
          return { state: t2.payload };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return o.default.PNHereNowOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, o2 = t2.channelGroups, s2 = void 0 === o2 ? [] : o2, u2 = "/v2/presence/sub-key/".concat(n2.subscribeKey);
          if (i2.length > 0 || s2.length > 0) {
            var c = i2.length > 0 ? i2.join(",") : ",";
            u2 += "/channel/".concat(a.default.encodeString(c));
          }
          return u2;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channelGroups, r2 = void 0 === n2 ? [] : n2, i2 = t2.includeUUIDs, o2 = void 0 === i2 || i2, a2 = t2.includeState, s2 = void 0 !== a2 && a2, c = t2.queryParameters, l = void 0 === c ? {} : c, f2 = {};
          o2 || (f2.disable_uuids = 1);
          s2 && (f2.state = 1);
          r2.length > 0 && (f2["channel-group"] = r2.join(","));
          return f2 = u(u({}, f2), l);
        }, t.handleResponse = function(e2, t2, n2) {
          var r2, i2 = n2.channels, o2 = void 0 === i2 ? [] : i2, a2 = n2.channelGroups, s2 = void 0 === a2 ? [] : a2, u2 = n2.includeUUIDs, c = void 0 === u2 || u2, l = n2.includeState, f2 = void 0 !== l && l;
          r2 = o2.length > 1 || s2.length > 0 || 0 === s2.length && 0 === o2.length ? function() {
            var e3 = {};
            return e3.totalChannels = t2.payload.total_channels, e3.totalOccupancy = t2.payload.total_occupancy, e3.channels = {}, Object.keys(t2.payload.channels).forEach(function(n3) {
              var r3 = t2.payload.channels[n3], i3 = [];
              return e3.channels[n3] = { occupants: i3, name: n3, occupancy: r3.occupancy }, c && r3.uuids.forEach(function(e4) {
                f2 ? i3.push({ state: e4.state, uuid: e4.uuid }) : i3.push({ state: null, uuid: e4 });
              }), e3;
            }), e3;
          }() : function() {
            var e3 = {}, n3 = [];
            return e3.totalChannels = 1, e3.totalOccupancy = t2.occupancy, e3.channels = {}, e3.channels[o2[0]] = { occupants: n3, name: o2[0], occupancy: t2.occupancy }, c && t2.uuids && t2.uuids.forEach(function(e4) {
              f2 ? n3.push({ state: e4.state, uuid: e4.uuid }) : n3.push({ state: null, uuid: e4 });
            }), e3;
          }();
          return r2;
        }, t.handleError = function(e2, t2, n2) {
          402 !== n2.statusCode || this.getURL(e2, t2).includes("channel") || (n2.errorData.message = "You have tried to perform a Global Here Now operation, your keyset configuration does not support that. Please provide a channel, or enable the Global Here Now feature from the Portal.");
        };
        var i = r(n(4)), o = (n(2), r(n(1))), a = r(n(3));
        function s(e2, t2) {
          var n2 = Object.keys(e2);
          if (Object.getOwnPropertySymbols) {
            var r2 = Object.getOwnPropertySymbols(e2);
            t2 && (r2 = r2.filter(function(t3) {
              return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
            })), n2.push.apply(n2, r2);
          }
          return n2;
        }
        function u(e2) {
          for (var t2 = 1; t2 < arguments.length; t2++) {
            var n2 = null != arguments[t2] ? arguments[t2] : {};
            t2 % 2 ? s(Object(n2), true).forEach(function(t3) {
              (0, i.default)(e2, t3, n2[t3]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(n2)) : s(Object(n2)).forEach(function(t3) {
              Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(n2, t3));
            });
          }
          return e2;
        }
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNAddMessageActionOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.action, i2 = t2.channel;
          if (!t2.messageTimetoken)
            return "Missing message timetoken";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (!i2)
            return "Missing message channel";
          if (!r2)
            return "Missing Action";
          if (!r2.value)
            return "Missing Action.value";
          if (!r2.type)
            return "Missing Action.type";
          if (r2.type.length > 15)
            return "Action.type value exceed maximum length of 15";
        }, t.usePost = function() {
          return true;
        }, t.postURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel, i2 = t2.messageTimetoken;
          return "/v1/message-actions/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(r2), "/message/").concat(i2);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.getRequestHeaders = function() {
          return { "Content-Type": "application/json" };
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.postPayload = function(e2, t2) {
          return t2.action;
        }, t.handleResponse = function(e2, t2) {
          return { data: t2.data };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNRemoveMessageActionOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel, i2 = t2.actionTimetoken;
          if (!t2.messageTimetoken)
            return "Missing message timetoken";
          if (!i2)
            return "Missing action timetoken";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (!r2)
            return "Missing message channel";
        }, t.useDelete = function() {
          return true;
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel, i2 = t2.actionTimetoken, a = t2.messageTimetoken;
          return "/v1/message-actions/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(r2), "/message/").concat(a, "/action/").concat(i2);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          return { data: t2.data };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetMessageActionsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel;
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (!r2)
            return "Missing message channel";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel;
          return "/v1/message-actions/".concat(n2.subscribeKey, "/channel/").concat(o.default.encodeString(r2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.limit, r2 = t2.start, i2 = t2.end, o2 = {};
          n2 && (o2.limit = n2);
          r2 && (o2.start = r2);
          i2 && (o2.end = i2);
          return o2;
        }, t.handleResponse = function(e2, t2) {
          var n2 = { data: t2.data, start: null, end: null };
          n2.data.length && (n2.end = n2.data[n2.data.length - 1].actionTimetoken, n2.start = n2.data[0].actionTimetoken);
          return n2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNListFilesOperation;
        }, validateParams: function(e2, t2) {
          if (!(null == t2 ? void 0 : t2.channel))
            return "channel can't be empty";
        }, getURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v1/files/".concat(n2.subscribeKey, "/channels/").concat(o.default.encodeString(t2.channel), "/files");
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2 = {};
          return t2.limit && (n2.limit = t2.limit), t2.next && (n2.next = t2.next), n2;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, next: t2.next, count: t2.count };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNGenerateUploadUrlOperation;
        }, validateParams: function(e2, t2) {
          return (null == t2 ? void 0 : t2.channel) ? (null == t2 ? void 0 : t2.name) ? void 0 : "name can't be empty" : "channel can't be empty";
        }, usePost: function() {
          return true;
        }, postURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v1/files/".concat(n2.subscribeKey, "/channels/").concat(o.default.encodeString(t2.channel), "/generate-upload-url");
        }, postPayload: function(e2, t2) {
          return { name: t2.name };
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function() {
          return {};
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, file_upload_request: t2.file_upload_request };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(7)), o = r(n(1)), a = r(n(3)), s = { getOperation: function() {
          return o.default.PNPublishFileOperation;
        }, validateParams: function(e2, t2) {
          return (null == t2 ? void 0 : t2.channel) ? (null == t2 ? void 0 : t2.fileId) ? (null == t2 ? void 0 : t2.fileName) ? void 0 : "file name can't be empty" : "file id can't be empty" : "channel can't be empty";
        }, getURL: function(e2, t2) {
          var n2 = e2.config, r2 = n2.publishKey, i2 = n2.subscribeKey, o2 = function(e3, t3) {
            var n3 = e3.crypto, r3 = e3.config, i3 = JSON.stringify(t3);
            return r3.cipherKey && (i3 = n3.encrypt(i3), i3 = JSON.stringify(i3)), i3 || "";
          }(e2, { message: t2.message, file: { name: t2.fileName, id: t2.fileId } });
          return "/v1/files/publish-file/".concat(r2, "/").concat(i2, "/0/").concat(a.default.encodeString(t2.channel), "/0/").concat(a.default.encodeString(o2));
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2 = {};
          return t2.ttl && (n2.ttl = t2.ttl), void 0 !== t2.storeInHistory && (n2.store = t2.storeInHistory ? "1" : "0"), t2.meta && "object" === (0, i.default)(t2.meta) && (n2.meta = JSON.stringify(t2.meta)), n2;
        }, handleResponse: function(e2, t2) {
          return { timetoken: t2[2] };
        } };
        t.default = s, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(11)), o = r(n(12)), a = n(18), s = function(e2) {
          return new Promise(function(t2) {
            var n2 = "";
            e2.on("data", function(e3) {
              n2 += e3.toString("utf8");
            }), e2.on("end", function() {
              t2(n2);
            });
          });
        };
        t.default = function(e2) {
          var t2, n2, r2, u, c, l, f2, d, p, h = (r2 = (t2 = e2).generateUploadUrl, u = t2.publishFile, c = t2.modules, l = c.PubNubFile, f2 = c.config, d = c.cryptography, p = c.networking, n2 = (0, o.default)(i.default.mark(function e3(t3) {
            var n3, o2, c2, h2, v, g, y, b, m, _, P, w, O, k, S, T, A, M, E, x, R, C;
            return i.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    if (n3 = t3.channel, o2 = t3.file, c2 = t3.message, h2 = t3.cipherKey, v = t3.meta, g = t3.ttl, y = t3.storeInHistory, n3) {
                      e4.next = 3;
                      break;
                    }
                    throw new a.PubNubError("Validation failed, check status for details", (0, a.createValidationError)("channel can't be empty"));
                  case 3:
                    if (o2) {
                      e4.next = 5;
                      break;
                    }
                    throw new a.PubNubError("Validation failed, check status for details", (0, a.createValidationError)("file can't be empty"));
                  case 5:
                    return b = l.create(o2), e4.next = 8, r2({ channel: n3, name: b.name });
                  case 8:
                    if (m = e4.sent, _ = m.file_upload_request, P = _.url, w = _.form_fields, O = m.data, k = O.id, S = O.name, !l.supportsEncryptFile || !(null != h2 ? h2 : f2.cipherKey)) {
                      e4.next = 19;
                      break;
                    }
                    return e4.next = 18, d.encryptFile(null != h2 ? h2 : f2.cipherKey, b, l);
                  case 18:
                    b = e4.sent;
                  case 19:
                    if (T = w, b.mimeType && (T = w.map(function(e5) {
                      return "Content-Type" === e5.key ? { key: e5.key, value: b.mimeType } : e5;
                    })), e4.prev = 21, !l.supportsFileUri || !o2.uri) {
                      e4.next = 34;
                      break;
                    }
                    return e4.t0 = p, e4.t1 = P, e4.t2 = T, e4.next = 28, b.toFileUri();
                  case 28:
                    return e4.t3 = e4.sent, e4.next = 31, e4.t0.POSTFILE.call(e4.t0, e4.t1, e4.t2, e4.t3);
                  case 31:
                    A = e4.sent, e4.next = 71;
                    break;
                  case 34:
                    if (!l.supportsFile) {
                      e4.next = 46;
                      break;
                    }
                    return e4.t4 = p, e4.t5 = P, e4.t6 = T, e4.next = 40, b.toFile();
                  case 40:
                    return e4.t7 = e4.sent, e4.next = 43, e4.t4.POSTFILE.call(e4.t4, e4.t5, e4.t6, e4.t7);
                  case 43:
                    A = e4.sent, e4.next = 71;
                    break;
                  case 46:
                    if (!l.supportsBuffer) {
                      e4.next = 58;
                      break;
                    }
                    return e4.t8 = p, e4.t9 = P, e4.t10 = T, e4.next = 52, b.toBuffer();
                  case 52:
                    return e4.t11 = e4.sent, e4.next = 55, e4.t8.POSTFILE.call(e4.t8, e4.t9, e4.t10, e4.t11);
                  case 55:
                    A = e4.sent, e4.next = 71;
                    break;
                  case 58:
                    if (!l.supportsBlob) {
                      e4.next = 70;
                      break;
                    }
                    return e4.t12 = p, e4.t13 = P, e4.t14 = T, e4.next = 64, b.toBlob();
                  case 64:
                    return e4.t15 = e4.sent, e4.next = 67, e4.t12.POSTFILE.call(e4.t12, e4.t13, e4.t14, e4.t15);
                  case 67:
                    A = e4.sent, e4.next = 71;
                    break;
                  case 70:
                    throw new Error("Unsupported environment");
                  case 71:
                    e4.next = 80;
                    break;
                  case 73:
                    return e4.prev = 73, e4.t16 = e4.catch(21), e4.next = 77, s(e4.t16.response);
                  case 77:
                    throw M = e4.sent, E = /<Message>(.*)<\/Message>/gi.exec(M), new a.PubNubError(E ? "Upload to bucket failed: ".concat(E[1]) : "Upload to bucket failed.", e4.t16);
                  case 80:
                    if (204 === A.status) {
                      e4.next = 82;
                      break;
                    }
                    throw new a.PubNubError("Upload to bucket was unsuccessful", A);
                  case 82:
                    x = f2.fileUploadPublishRetryLimit, R = false, C = { timetoken: "0" };
                  case 85:
                    return e4.prev = 85, e4.next = 88, u({ channel: n3, message: c2, fileId: k, fileName: S, meta: v, storeInHistory: y, ttl: g });
                  case 88:
                    C = e4.sent, R = true, e4.next = 95;
                    break;
                  case 92:
                    e4.prev = 92, e4.t17 = e4.catch(85), x -= 1;
                  case 95:
                    if (!R && x > 0) {
                      e4.next = 85;
                      break;
                    }
                  case 96:
                    if (R) {
                      e4.next = 100;
                      break;
                    }
                    throw new a.PubNubError("Publish failed. You may want to execute that operation manually using pubnub.publishFile", { channel: n3, id: k, name: S });
                  case 100:
                    return e4.abrupt("return", { timetoken: C.timetoken, id: k, name: S });
                  case 101:
                  case "end":
                    return e4.stop();
                }
            }, e3, null, [[21, 73], [85, 92]]);
          })), function(e3) {
            return n2.apply(this, arguments);
          });
          return function(e3, t3) {
            var n3 = h(e3);
            return "function" == typeof t3 ? (n3.then(function(e4) {
              return t3(null, e4);
            }).catch(function(e4) {
              return t3(e4, null);
            }), n3) : n3;
          };
        }, e.exports = t.default;
      }, function(e, t, n) {
        var r = function(e2) {
          "use strict";
          var t2 = Object.prototype, n2 = t2.hasOwnProperty, r2 = "function" == typeof Symbol ? Symbol : {}, i = r2.iterator || "@@iterator", o = r2.asyncIterator || "@@asyncIterator", a = r2.toStringTag || "@@toStringTag";
          function s(e3, t3, n3) {
            return Object.defineProperty(e3, t3, { value: n3, enumerable: true, configurable: true, writable: true }), e3[t3];
          }
          try {
            s({}, "");
          } catch (e3) {
            s = function(e4, t3, n3) {
              return e4[t3] = n3;
            };
          }
          function u(e3, t3, n3, r3) {
            var i2 = t3 && t3.prototype instanceof f2 ? t3 : f2, o2 = Object.create(i2.prototype), a2 = new O(r3 || []);
            return o2._invoke = function(e4, t4, n4) {
              var r4 = "suspendedStart";
              return function(i3, o3) {
                if ("executing" === r4)
                  throw new Error("Generator is already running");
                if ("completed" === r4) {
                  if ("throw" === i3)
                    throw o3;
                  return S();
                }
                for (n4.method = i3, n4.arg = o3; ; ) {
                  var a3 = n4.delegate;
                  if (a3) {
                    var s2 = _(a3, n4);
                    if (s2) {
                      if (s2 === l)
                        continue;
                      return s2;
                    }
                  }
                  if ("next" === n4.method)
                    n4.sent = n4._sent = n4.arg;
                  else if ("throw" === n4.method) {
                    if ("suspendedStart" === r4)
                      throw r4 = "completed", n4.arg;
                    n4.dispatchException(n4.arg);
                  } else
                    "return" === n4.method && n4.abrupt("return", n4.arg);
                  r4 = "executing";
                  var u2 = c(e4, t4, n4);
                  if ("normal" === u2.type) {
                    if (r4 = n4.done ? "completed" : "suspendedYield", u2.arg === l)
                      continue;
                    return { value: u2.arg, done: n4.done };
                  }
                  "throw" === u2.type && (r4 = "completed", n4.method = "throw", n4.arg = u2.arg);
                }
              };
            }(e3, n3, a2), o2;
          }
          function c(e3, t3, n3) {
            try {
              return { type: "normal", arg: e3.call(t3, n3) };
            } catch (e4) {
              return { type: "throw", arg: e4 };
            }
          }
          e2.wrap = u;
          var l = {};
          function f2() {
          }
          function d() {
          }
          function p() {
          }
          var h = {};
          h[i] = function() {
            return this;
          };
          var v = Object.getPrototypeOf, g = v && v(v(k([])));
          g && g !== t2 && n2.call(g, i) && (h = g);
          var y = p.prototype = f2.prototype = Object.create(h);
          function b(e3) {
            ["next", "throw", "return"].forEach(function(t3) {
              s(e3, t3, function(e4) {
                return this._invoke(t3, e4);
              });
            });
          }
          function m(e3, t3) {
            var r3;
            this._invoke = function(i2, o2) {
              function a2() {
                return new t3(function(r4, a3) {
                  !function r5(i3, o3, a4, s2) {
                    var u2 = c(e3[i3], e3, o3);
                    if ("throw" !== u2.type) {
                      var l2 = u2.arg, f3 = l2.value;
                      return f3 && "object" == typeof f3 && n2.call(f3, "__await") ? t3.resolve(f3.__await).then(function(e4) {
                        r5("next", e4, a4, s2);
                      }, function(e4) {
                        r5("throw", e4, a4, s2);
                      }) : t3.resolve(f3).then(function(e4) {
                        l2.value = e4, a4(l2);
                      }, function(e4) {
                        return r5("throw", e4, a4, s2);
                      });
                    }
                    s2(u2.arg);
                  }(i2, o2, r4, a3);
                });
              }
              return r3 = r3 ? r3.then(a2, a2) : a2();
            };
          }
          function _(e3, t3) {
            var n3 = e3.iterator[t3.method];
            if (void 0 === n3) {
              if (t3.delegate = null, "throw" === t3.method) {
                if (e3.iterator.return && (t3.method = "return", t3.arg = void 0, _(e3, t3), "throw" === t3.method))
                  return l;
                t3.method = "throw", t3.arg = new TypeError("The iterator does not provide a 'throw' method");
              }
              return l;
            }
            var r3 = c(n3, e3.iterator, t3.arg);
            if ("throw" === r3.type)
              return t3.method = "throw", t3.arg = r3.arg, t3.delegate = null, l;
            var i2 = r3.arg;
            return i2 ? i2.done ? (t3[e3.resultName] = i2.value, t3.next = e3.nextLoc, "return" !== t3.method && (t3.method = "next", t3.arg = void 0), t3.delegate = null, l) : i2 : (t3.method = "throw", t3.arg = new TypeError("iterator result is not an object"), t3.delegate = null, l);
          }
          function P(e3) {
            var t3 = { tryLoc: e3[0] };
            1 in e3 && (t3.catchLoc = e3[1]), 2 in e3 && (t3.finallyLoc = e3[2], t3.afterLoc = e3[3]), this.tryEntries.push(t3);
          }
          function w(e3) {
            var t3 = e3.completion || {};
            t3.type = "normal", delete t3.arg, e3.completion = t3;
          }
          function O(e3) {
            this.tryEntries = [{ tryLoc: "root" }], e3.forEach(P, this), this.reset(true);
          }
          function k(e3) {
            if (e3) {
              var t3 = e3[i];
              if (t3)
                return t3.call(e3);
              if ("function" == typeof e3.next)
                return e3;
              if (!isNaN(e3.length)) {
                var r3 = -1, o2 = function t4() {
                  for (; ++r3 < e3.length; )
                    if (n2.call(e3, r3))
                      return t4.value = e3[r3], t4.done = false, t4;
                  return t4.value = void 0, t4.done = true, t4;
                };
                return o2.next = o2;
              }
            }
            return { next: S };
          }
          function S() {
            return { value: void 0, done: true };
          }
          return d.prototype = y.constructor = p, p.constructor = d, d.displayName = s(p, a, "GeneratorFunction"), e2.isGeneratorFunction = function(e3) {
            var t3 = "function" == typeof e3 && e3.constructor;
            return !!t3 && (t3 === d || "GeneratorFunction" === (t3.displayName || t3.name));
          }, e2.mark = function(e3) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e3, p) : (e3.__proto__ = p, s(e3, a, "GeneratorFunction")), e3.prototype = Object.create(y), e3;
          }, e2.awrap = function(e3) {
            return { __await: e3 };
          }, b(m.prototype), m.prototype[o] = function() {
            return this;
          }, e2.AsyncIterator = m, e2.async = function(t3, n3, r3, i2, o2) {
            void 0 === o2 && (o2 = Promise);
            var a2 = new m(u(t3, n3, r3, i2), o2);
            return e2.isGeneratorFunction(n3) ? a2 : a2.next().then(function(e3) {
              return e3.done ? e3.value : a2.next();
            });
          }, b(y), s(y, a, "Generator"), y[i] = function() {
            return this;
          }, y.toString = function() {
            return "[object Generator]";
          }, e2.keys = function(e3) {
            var t3 = [];
            for (var n3 in e3)
              t3.push(n3);
            return t3.reverse(), function n4() {
              for (; t3.length; ) {
                var r3 = t3.pop();
                if (r3 in e3)
                  return n4.value = r3, n4.done = false, n4;
              }
              return n4.done = true, n4;
            };
          }, e2.values = k, O.prototype = { constructor: O, reset: function(e3) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(w), !e3)
              for (var t3 in this)
                "t" === t3.charAt(0) && n2.call(this, t3) && !isNaN(+t3.slice(1)) && (this[t3] = void 0);
          }, stop: function() {
            this.done = true;
            var e3 = this.tryEntries[0].completion;
            if ("throw" === e3.type)
              throw e3.arg;
            return this.rval;
          }, dispatchException: function(e3) {
            if (this.done)
              throw e3;
            var t3 = this;
            function r3(n3, r4) {
              return a2.type = "throw", a2.arg = e3, t3.next = n3, r4 && (t3.method = "next", t3.arg = void 0), !!r4;
            }
            for (var i2 = this.tryEntries.length - 1; i2 >= 0; --i2) {
              var o2 = this.tryEntries[i2], a2 = o2.completion;
              if ("root" === o2.tryLoc)
                return r3("end");
              if (o2.tryLoc <= this.prev) {
                var s2 = n2.call(o2, "catchLoc"), u2 = n2.call(o2, "finallyLoc");
                if (s2 && u2) {
                  if (this.prev < o2.catchLoc)
                    return r3(o2.catchLoc, true);
                  if (this.prev < o2.finallyLoc)
                    return r3(o2.finallyLoc);
                } else if (s2) {
                  if (this.prev < o2.catchLoc)
                    return r3(o2.catchLoc, true);
                } else {
                  if (!u2)
                    throw new Error("try statement without catch or finally");
                  if (this.prev < o2.finallyLoc)
                    return r3(o2.finallyLoc);
                }
              }
            }
          }, abrupt: function(e3, t3) {
            for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
              var i2 = this.tryEntries[r3];
              if (i2.tryLoc <= this.prev && n2.call(i2, "finallyLoc") && this.prev < i2.finallyLoc) {
                var o2 = i2;
                break;
              }
            }
            o2 && ("break" === e3 || "continue" === e3) && o2.tryLoc <= t3 && t3 <= o2.finallyLoc && (o2 = null);
            var a2 = o2 ? o2.completion : {};
            return a2.type = e3, a2.arg = t3, o2 ? (this.method = "next", this.next = o2.finallyLoc, l) : this.complete(a2);
          }, complete: function(e3, t3) {
            if ("throw" === e3.type)
              throw e3.arg;
            return "break" === e3.type || "continue" === e3.type ? this.next = e3.arg : "return" === e3.type ? (this.rval = this.arg = e3.arg, this.method = "return", this.next = "end") : "normal" === e3.type && t3 && (this.next = t3), l;
          }, finish: function(e3) {
            for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
              var n3 = this.tryEntries[t3];
              if (n3.finallyLoc === e3)
                return this.complete(n3.completion, n3.afterLoc), w(n3), l;
            }
          }, catch: function(e3) {
            for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
              var n3 = this.tryEntries[t3];
              if (n3.tryLoc === e3) {
                var r3 = n3.completion;
                if ("throw" === r3.type) {
                  var i2 = r3.arg;
                  w(n3);
                }
                return i2;
              }
            }
            throw new Error("illegal catch attempt");
          }, delegateYield: function(e3, t3, n3) {
            return this.delegate = { iterator: k(e3), resultName: t3, nextLoc: n3 }, "next" === this.method && (this.arg = void 0), l;
          } }, e2;
        }(e.exports);
        try {
          regeneratorRuntime = r;
        } catch (e2) {
          Function("r", "regeneratorRuntime = r")(r);
        }
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = n(18), o = r(n(3));
        t.default = function(e2, t2) {
          var n2 = t2.channel, r2 = t2.id, a = t2.name, s = e2.config;
          if (!n2)
            throw new i.PubNubError("Validation failed, check status for details", (0, i.createValidationError)("channel can't be empty"));
          if (!r2)
            throw new i.PubNubError("Validation failed, check status for details", (0, i.createValidationError)("file id can't be empty"));
          if (!a)
            throw new i.PubNubError("Validation failed, check status for details", (0, i.createValidationError)("file name can't be empty"));
          var u = "/v1/files/".concat(s.subscribeKey, "/channels/").concat(o.default.encodeString(n2), "/files/").concat(r2, "/").concat(a), c = {};
          c.uuid = s.getUUID(), c.pnsdk = (0, i.generatePNSDK)(s), s.getAuthKey() && (c.auth = s.getAuthKey()), s.secretKey && (0, i.signRequest)(e2, u, c, {}, { getOperation: function() {
            return "PubNubGetFileUrlOperation";
          } });
          var l = Object.keys(c).map(function(e3) {
            return "".concat(encodeURIComponent(e3), "=").concat(encodeURIComponent(c[e3]));
          }).join("&");
          return "" !== l ? "https://".concat(s.origin).concat(u, "?").concat(l) : "https://".concat(s.origin).concat(u);
        }, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i, o = r(n(11)), a = r(n(12)), s = r(n(1)), u = r(n(3)), c = { getOperation: function() {
          return s.default.PNDownloadFileOperation;
        }, validateParams: function(e2, t2) {
          return (null == t2 ? void 0 : t2.channel) ? (null == t2 ? void 0 : t2.name) ? (null == t2 ? void 0 : t2.id) ? void 0 : "id can't be empty" : "name can't be empty" : "channel can't be empty";
        }, useGetFile: function() {
          return true;
        }, getFileURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v1/files/".concat(n2.subscribeKey, "/channels/").concat(u.default.encodeString(t2.channel), "/files/").concat(t2.id, "/").concat(t2.name);
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, ignoreBody: function() {
          return true;
        }, forceBuffered: function() {
          return true;
        }, prepareParams: function() {
          return {};
        }, handleResponse: (i = (0, a.default)(o.default.mark(function e2(t2, n2, r2) {
          var i2, a2, s2, u2, c2, l, f2;
          return o.default.wrap(function(e3) {
            for (; ; )
              switch (e3.prev = e3.next) {
                case 0:
                  if (s2 = t2.PubNubFile, u2 = t2.config, c2 = t2.cryptography, l = n2.response.body, !s2.supportsEncryptFile || !(null !== (i2 = r2.cipherKey) && void 0 !== i2 ? i2 : u2.cipherKey)) {
                    e3.next = 6;
                    break;
                  }
                  return e3.next = 5, c2.decrypt(null !== (f2 = r2.cipherKey) && void 0 !== f2 ? f2 : u2.cipherKey, l);
                case 5:
                  l = e3.sent;
                case 6:
                  return e3.abrupt("return", s2.create({ data: l, name: null !== (a2 = n2.response.name) && void 0 !== a2 ? a2 : r2.name, mimeType: n2.response.type }));
                case 7:
                case "end":
                  return e3.stop();
              }
          }, e2);
        })), function(e2, t2, n2) {
          return i.apply(this, arguments);
        }) };
        t.default = c, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNListFilesOperation;
        }, validateParams: function(e2, t2) {
          return (null == t2 ? void 0 : t2.channel) ? (null == t2 ? void 0 : t2.id) ? (null == t2 ? void 0 : t2.name) ? void 0 : "file name can't be empty" : "file id can't be empty" : "channel can't be empty";
        }, useDelete: function() {
          return true;
        }, getURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v1/files/".concat(n2.subscribeKey, "/channels/").concat(o.default.encodeString(t2.channel), "/files/").concat(t2.id, "/").concat(t2.name);
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function() {
          return {};
        }, handleResponse: function(e2, t2) {
          return { status: t2.status };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(9)), o = r(n(1)), a = { getOperation: function() {
          return o.default.PNGetAllUUIDMetadataOperation;
        }, validateParams: function() {
        }, getURL: function(e2) {
          var t2 = e2.config;
          return "/v2/objects/".concat(t2.subscribeKey, "/uuids");
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, o2, a2, s, u, c, l, f2, d = {};
          ((null == t2 || null === (n2 = t2.include) || void 0 === n2 ? void 0 : n2.customFields) && (d.include = "custom"), null == t2 || null === (r2 = t2.include) || void 0 === r2 ? void 0 : r2.totalCount) && (d.count = null === (u = t2.include) || void 0 === u ? void 0 : u.totalCount);
          (null == t2 || null === (o2 = t2.page) || void 0 === o2 ? void 0 : o2.next) && (d.start = null === (c = t2.page) || void 0 === c ? void 0 : c.next);
          (null == t2 || null === (a2 = t2.page) || void 0 === a2 ? void 0 : a2.prev) && (d.end = null === (l = t2.page) || void 0 === l ? void 0 : l.prev);
          ((null == t2 ? void 0 : t2.filter) && (d.filter = t2.filter), d.limit = null !== (s = null == t2 ? void 0 : t2.limit) && void 0 !== s ? s : 100, null == t2 ? void 0 : t2.sort) && (d.sort = Object.entries(null !== (f2 = t2.sort) && void 0 !== f2 ? f2 : {}).map(function(e3) {
            var t3 = (0, i.default)(e3, 2), n3 = t3[0], r3 = t3[1];
            return "asc" === r3 || "desc" === r3 ? "".concat(n3, ":").concat(r3) : n3;
          }));
          return d;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, totalCount: t2.totalCount, next: t2.next, prev: t2.prev };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t) {
        e.exports = function(e2) {
          if (Array.isArray(e2))
            return e2;
        };
      }, function(e, t) {
        e.exports = function(e2, t2) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e2)) {
            var n = [], r = true, i = false, o = void 0;
            try {
              for (var a, s = e2[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), !t2 || n.length !== t2); r = true)
                ;
            } catch (e3) {
              i = true, o = e3;
            } finally {
              try {
                r || null == s.return || s.return();
              } finally {
                if (i)
                  throw o;
              }
            }
            return n;
          }
        };
      }, function(e, t, n) {
        var r = n(80);
        e.exports = function(e2, t2) {
          if (e2) {
            if ("string" == typeof e2)
              return r(e2, t2);
            var n2 = Object.prototype.toString.call(e2).slice(8, -1);
            return "Object" === n2 && e2.constructor && (n2 = e2.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(e2) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? r(e2, t2) : void 0;
          }
        };
      }, function(e, t) {
        e.exports = function(e2, t2) {
          (null == t2 || t2 > e2.length) && (t2 = e2.length);
          for (var n = 0, r = new Array(t2); n < t2; n++)
            r[n] = e2[n];
          return r;
        };
      }, function(e, t) {
        e.exports = function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNGetUUIDMetadataOperation;
        }, validateParams: function() {
        }, getURL: function(e2, t2) {
          var n2, r2 = e2.config;
          return "/v2/objects/".concat(r2.subscribeKey, "/uuids/").concat(o.default.encodeString(null !== (n2 = null == t2 ? void 0 : t2.uuid) && void 0 !== n2 ? n2 : r2.getUUID()));
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, i2, o2 = e2.config;
          return { uuid: null !== (n2 = null == t2 ? void 0 : t2.uuid) && void 0 !== n2 ? n2 : o2.getUUID(), include: (null === (r2 = null == t2 || null === (i2 = t2.include) || void 0 === i2 ? void 0 : i2.customFields) || void 0 === r2 || r2) && "custom" };
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNSetUUIDMetadataOperation;
        }, validateParams: function(e2, t2) {
          if (!(null == t2 ? void 0 : t2.data))
            return "Data cannot be empty";
        }, usePatch: function() {
          return true;
        }, patchURL: function(e2, t2) {
          var n2, r2 = e2.config;
          return "/v2/objects/".concat(r2.subscribeKey, "/uuids/").concat(o.default.encodeString(null !== (n2 = t2.uuid) && void 0 !== n2 ? n2 : r2.getUUID()));
        }, patchPayload: function(e2, t2) {
          return t2.data;
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, i2, o2 = e2.config;
          return { uuid: null !== (n2 = null == t2 ? void 0 : t2.uuid) && void 0 !== n2 ? n2 : o2.getUUID(), include: (null === (r2 = null == t2 || null === (i2 = t2.include) || void 0 === i2 ? void 0 : i2.customFields) || void 0 === r2 || r2) && "custom" };
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNRemoveUUIDMetadataOperation;
        }, validateParams: function() {
        }, getURL: function(e2, t2) {
          var n2, r2 = e2.config;
          return "/v2/objects/".concat(r2.subscribeKey, "/uuids/").concat(o.default.encodeString(null !== (n2 = null == t2 ? void 0 : t2.uuid) && void 0 !== n2 ? n2 : r2.getUUID()));
        }, useDelete: function() {
          return true;
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2 = e2.config;
          return { uuid: null !== (n2 = null == t2 ? void 0 : t2.uuid) && void 0 !== n2 ? n2 : r2.getUUID() };
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(9)), o = r(n(1)), a = { getOperation: function() {
          return o.default.PNGetAllChannelMetadataOperation;
        }, validateParams: function() {
        }, getURL: function(e2) {
          var t2 = e2.config;
          return "/v2/objects/".concat(t2.subscribeKey, "/channels");
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, o2, a2, s, u, c, l, f2, d = {};
          ((null == t2 || null === (n2 = t2.include) || void 0 === n2 ? void 0 : n2.customFields) && (d.include = "custom"), null == t2 || null === (r2 = t2.include) || void 0 === r2 ? void 0 : r2.totalCount) && (d.count = null === (u = t2.include) || void 0 === u ? void 0 : u.totalCount);
          (null == t2 || null === (o2 = t2.page) || void 0 === o2 ? void 0 : o2.next) && (d.start = null === (c = t2.page) || void 0 === c ? void 0 : c.next);
          (null == t2 || null === (a2 = t2.page) || void 0 === a2 ? void 0 : a2.prev) && (d.end = null === (l = t2.page) || void 0 === l ? void 0 : l.prev);
          ((null == t2 ? void 0 : t2.filter) && (d.filter = t2.filter), d.limit = null !== (s = null == t2 ? void 0 : t2.limit) && void 0 !== s ? s : 100, null == t2 ? void 0 : t2.sort) && (d.sort = Object.entries(null !== (f2 = t2.sort) && void 0 !== f2 ? f2 : {}).map(function(e3) {
            var t3 = (0, i.default)(e3, 2), n3 = t3[0], r3 = t3[1];
            return "asc" === r3 || "desc" === r3 ? "".concat(n3, ":").concat(r3) : n3;
          }));
          return d;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, totalCount: t2.totalCount, prev: t2.prev, next: t2.next };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNGetChannelMetadataOperation;
        }, validateParams: function(e2, t2) {
          if (!(null == t2 ? void 0 : t2.channel))
            return "Channel cannot be empty";
        }, getURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v2/objects/".concat(n2.subscribeKey, "/channels/").concat(o.default.encodeString(t2.channel));
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2;
          return { include: (null === (n2 = null == t2 || null === (r2 = t2.include) || void 0 === r2 ? void 0 : r2.customFields) || void 0 === n2 || n2) && "custom" };
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNSetChannelMetadataOperation;
        }, validateParams: function(e2, t2) {
          return (null == t2 ? void 0 : t2.channel) ? (null == t2 ? void 0 : t2.data) ? void 0 : "Data cannot be empty" : "Channel cannot be empty";
        }, usePatch: function() {
          return true;
        }, patchURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v2/objects/".concat(n2.subscribeKey, "/channels/").concat(o.default.encodeString(t2.channel));
        }, patchPayload: function(e2, t2) {
          return t2.data;
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2;
          return { include: (null === (n2 = null == t2 || null === (r2 = t2.include) || void 0 === r2 ? void 0 : r2.customFields) || void 0 === n2 || n2) && "custom" };
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(1)), o = r(n(3)), a = { getOperation: function() {
          return i.default.PNRemoveChannelMetadataOperation;
        }, validateParams: function(e2, t2) {
          if (!(null == t2 ? void 0 : t2.channel))
            return "Channel cannot be empty";
        }, getURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v2/objects/".concat(n2.subscribeKey, "/channels/").concat(o.default.encodeString(t2.channel));
        }, useDelete: function() {
          return true;
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function() {
          return {};
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data };
        } };
        t.default = a, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(9)), o = r(n(1)), a = r(n(3)), s = { getOperation: function() {
          return o.default.PNGetMembersOperation;
        }, validateParams: function(e2, t2) {
          if (!(null == t2 ? void 0 : t2.channel))
            return "UUID cannot be empty";
        }, getURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v2/objects/".concat(n2.subscribeKey, "/channels/").concat(a.default.encodeString(t2.channel), "/uuids");
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, o2, a2, s2, u, c, l, f2, d, p, h, v = {};
          (null == t2 ? void 0 : t2.include) && (v.include = [], (null === (s2 = t2.include) || void 0 === s2 ? void 0 : s2.customFields) && v.include.push("custom"), (null === (u = t2.include) || void 0 === u ? void 0 : u.customUUIDFields) && v.include.push("uuid.custom"), (null === (c = null === (l = t2.include) || void 0 === l ? void 0 : l.UUIDFields) || void 0 === c || c) && v.include.push("uuid"), v.include = v.include.join(","));
          (null == t2 || null === (n2 = t2.include) || void 0 === n2 ? void 0 : n2.totalCount) && (v.count = null === (f2 = t2.include) || void 0 === f2 ? void 0 : f2.totalCount);
          (null == t2 || null === (r2 = t2.page) || void 0 === r2 ? void 0 : r2.next) && (v.start = null === (d = t2.page) || void 0 === d ? void 0 : d.next);
          (null == t2 || null === (o2 = t2.page) || void 0 === o2 ? void 0 : o2.prev) && (v.end = null === (p = t2.page) || void 0 === p ? void 0 : p.prev);
          ((null == t2 ? void 0 : t2.filter) && (v.filter = t2.filter), v.limit = null !== (a2 = null == t2 ? void 0 : t2.limit) && void 0 !== a2 ? a2 : 100, null == t2 ? void 0 : t2.sort) && (v.sort = Object.entries(null !== (h = t2.sort) && void 0 !== h ? h : {}).map(function(e3) {
            var t3 = (0, i.default)(e3, 2), n3 = t3[0], r3 = t3[1];
            return "asc" === r3 || "desc" === r3 ? "".concat(n3, ":").concat(r3) : n3;
          }));
          return v;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, totalCount: t2.totalCount, prev: t2.prev, next: t2.next };
        } };
        t.default = s, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(9)), o = r(n(4)), a = r(n(1)), s = r(n(3)), u = { getOperation: function() {
          return a.default.PNSetMembersOperation;
        }, validateParams: function(e2, t2) {
          return (null == t2 ? void 0 : t2.channel) ? (null == t2 ? void 0 : t2.uuids) && 0 !== (null == t2 ? void 0 : t2.uuids.length) ? void 0 : "UUIDs cannot be empty" : "Channel cannot be empty";
        }, usePatch: function() {
          return true;
        }, patchURL: function(e2, t2) {
          var n2 = e2.config;
          return "/v2/objects/".concat(n2.subscribeKey, "/channels/").concat(s.default.encodeString(t2.channel), "/uuids");
        }, patchPayload: function(e2, t2) {
          return (0, o.default)({ set: [], remove: [] }, t2.type, t2.uuids.map(function(e3) {
            return "string" == typeof e3 ? { uuid: { id: e3 } } : { uuid: { id: e3.id }, custom: e3.custom };
          }));
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, o2, a2, s2, u2, c, l, f2, d = {};
          (null == t2 ? void 0 : t2.include) && (d.include = [], (null === (a2 = t2.include) || void 0 === a2 ? void 0 : a2.customFields) && d.include.push("custom"), (null === (s2 = t2.include) || void 0 === s2 ? void 0 : s2.customUUIDFields) && d.include.push("uuid.custom"), (null === (u2 = t2.include) || void 0 === u2 ? void 0 : u2.UUIDFields) && d.include.push("uuid"), d.include = d.include.join(","));
          ((null == t2 || null === (n2 = t2.include) || void 0 === n2 ? void 0 : n2.totalCount) && (d.count = true), null == t2 || null === (r2 = t2.page) || void 0 === r2 ? void 0 : r2.next) && (d.start = null === (c = t2.page) || void 0 === c ? void 0 : c.next);
          (null == t2 || null === (o2 = t2.page) || void 0 === o2 ? void 0 : o2.prev) && (d.end = null === (l = t2.page) || void 0 === l ? void 0 : l.prev);
          ((null == t2 ? void 0 : t2.filter) && (d.filter = t2.filter), (null == t2 ? void 0 : t2.limit) && (d.limit = t2.limit), null == t2 ? void 0 : t2.sort) && (d.sort = Object.entries(null !== (f2 = t2.sort) && void 0 !== f2 ? f2 : {}).map(function(e3) {
            var t3 = (0, i.default)(e3, 2), n3 = t3[0], r3 = t3[1];
            return "asc" === r3 || "desc" === r3 ? "".concat(n3, ":").concat(r3) : n3;
          }));
          return d;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, totalCount: t2.totalCount, prev: t2.prev, next: t2.next };
        } };
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(9)), o = r(n(1)), a = r(n(3)), s = { getOperation: function() {
          return o.default.PNGetMembershipsOperation;
        }, validateParams: function() {
        }, getURL: function(e2, t2) {
          var n2, r2 = e2.config;
          return "/v2/objects/".concat(r2.subscribeKey, "/uuids/").concat(a.default.encodeString(null !== (n2 = null == t2 ? void 0 : t2.uuid) && void 0 !== n2 ? n2 : r2.getUUID()), "/channels");
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, o2, a2, s2, u, c, l, f2, d, p, h = {};
          (null == t2 ? void 0 : t2.include) && (h.include = [], (null === (s2 = t2.include) || void 0 === s2 ? void 0 : s2.customFields) && h.include.push("custom"), (null === (u = t2.include) || void 0 === u ? void 0 : u.customChannelFields) && h.include.push("channel.custom"), (null === (c = t2.include) || void 0 === c ? void 0 : c.channelFields) && h.include.push("channel"), h.include = h.include.join(","));
          (null == t2 || null === (n2 = t2.include) || void 0 === n2 ? void 0 : n2.totalCount) && (h.count = null === (l = t2.include) || void 0 === l ? void 0 : l.totalCount);
          (null == t2 || null === (r2 = t2.page) || void 0 === r2 ? void 0 : r2.next) && (h.start = null === (f2 = t2.page) || void 0 === f2 ? void 0 : f2.next);
          (null == t2 || null === (o2 = t2.page) || void 0 === o2 ? void 0 : o2.prev) && (h.end = null === (d = t2.page) || void 0 === d ? void 0 : d.prev);
          ((null == t2 ? void 0 : t2.filter) && (h.filter = t2.filter), h.limit = null !== (a2 = null == t2 ? void 0 : t2.limit) && void 0 !== a2 ? a2 : 100, null == t2 ? void 0 : t2.sort) && (h.sort = Object.entries(null !== (p = t2.sort) && void 0 !== p ? p : {}).map(function(e3) {
            var t3 = (0, i.default)(e3, 2), n3 = t3[0], r3 = t3[1];
            return "asc" === r3 || "desc" === r3 ? "".concat(n3, ":").concat(r3) : n3;
          }));
          return h;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, totalCount: t2.totalCount, prev: t2.prev, next: t2.next };
        } };
        t.default = s, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(9)), o = r(n(4)), a = r(n(1)), s = r(n(3)), u = { getOperation: function() {
          return a.default.PNSetMembershipsOperation;
        }, validateParams: function(e2, t2) {
          if (!(null == t2 ? void 0 : t2.channels) || 0 === (null == t2 ? void 0 : t2.channels.length))
            return "Channels cannot be empty";
        }, usePatch: function() {
          return true;
        }, patchURL: function(e2, t2) {
          var n2, r2 = e2.config;
          return "/v2/objects/".concat(r2.subscribeKey, "/uuids/").concat(s.default.encodeString(null !== (n2 = t2.uuid) && void 0 !== n2 ? n2 : r2.getUUID()), "/channels");
        }, patchPayload: function(e2, t2) {
          return (0, o.default)({ set: [], remove: [] }, t2.type, t2.channels.map(function(e3) {
            return "string" == typeof e3 ? { channel: { id: e3 } } : { channel: { id: e3.id }, custom: e3.custom };
          }));
        }, getRequestTimeout: function(e2) {
          return e2.config.getTransactionTimeout();
        }, isAuthSupported: function() {
          return true;
        }, prepareParams: function(e2, t2) {
          var n2, r2, o2, a2, s2, u2, c, l, f2, d = {};
          (null == t2 ? void 0 : t2.include) && (d.include = [], (null === (a2 = t2.include) || void 0 === a2 ? void 0 : a2.customFields) && d.include.push("custom"), (null === (s2 = t2.include) || void 0 === s2 ? void 0 : s2.customChannelFields) && d.include.push("channel.custom"), (null === (u2 = t2.include) || void 0 === u2 ? void 0 : u2.channelFields) && d.include.push("channel"), d.include = d.include.join(","));
          ((null == t2 || null === (n2 = t2.include) || void 0 === n2 ? void 0 : n2.totalCount) && (d.count = true), null == t2 || null === (r2 = t2.page) || void 0 === r2 ? void 0 : r2.next) && (d.start = null === (c = t2.page) || void 0 === c ? void 0 : c.next);
          (null == t2 || null === (o2 = t2.page) || void 0 === o2 ? void 0 : o2.prev) && (d.end = null === (l = t2.page) || void 0 === l ? void 0 : l.prev);
          ((null == t2 ? void 0 : t2.filter) && (d.filter = t2.filter), (null == t2 ? void 0 : t2.limit) && (d.limit = t2.limit), null == t2 ? void 0 : t2.sort) && (d.sort = Object.entries(null !== (f2 = t2.sort) && void 0 !== f2 ? f2 : {}).map(function(e3) {
            var t3 = (0, i.default)(e3, 2), n3 = t3[0], r3 = t3[1];
            return "asc" === r3 || "desc" === r3 ? "".concat(n3, ":").concat(r3) : n3;
          }));
          return d;
        }, handleResponse: function(e2, t2) {
          return { status: t2.status, data: t2.data, totalCount: t2.totalCount, prev: t2.prev, next: t2.next };
        } };
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNCreateUserOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id, i2 = t2.name, o = t2.custom;
          if (!r2)
            return "Missing User.id";
          if (!i2)
            return "Missing User.name";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (o && !Object.values(o).every(function(e3) {
            return "string" == typeof e3 || "number" == typeof e3 || "boolean" == typeof e3;
          }))
            return "Invalid custom type, only string, number and boolean values are allowed.";
        }, t.usePost = function() {
          return true;
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v1/objects/".concat(t2.subscribeKey, "/users");
        }, t.postURL = function(e2) {
          var t2 = e2.config;
          return "/v1/objects/".concat(t2.subscribeKey, "/users");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = {};
          n2 ? void 0 === n2.customFields && (n2.customFields = true) : n2 = { customFields: true };
          if (n2) {
            var i2 = [];
            n2.customFields && i2.push("custom");
            var o = i2.join(",");
            o.length > 0 && (r2.include = o);
          }
          return r2;
        }, t.postPayload = function(e2, t2) {
          return function(e3, t3) {
            return t3;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateUserOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id, i2 = t2.name, o2 = t2.custom;
          if (!r2)
            return "Missing User.id";
          if (!i2)
            return "Missing User.name";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (o2 && !Object.values(o2).every(function(e3) {
            return "string" == typeof e3 || "number" == typeof e3 || "boolean" == typeof e3;
          }))
            return "Invalid custom type, only string, number and boolean values are allowed.";
        }, t.usePatch = function() {
          return true;
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(r2));
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(r2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = {};
          n2 ? void 0 === n2.customFields && (n2.customFields = true) : n2 = { customFields: true };
          if (n2) {
            var i2 = [];
            n2.customFields && i2.push("custom");
            var o2 = i2.join(",");
            o2.length > 0 && (r2.include = o2);
          }
          return r2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            return t3;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNDeleteUserOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config;
          if (!t2)
            return "Missing UserId";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.useDelete = function() {
          return true;
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetUserOperation;
        }, t.validateParams = function(e2, t2) {
          if (!t2.userId)
            return "Missing userId";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = {};
          n2 ? void 0 === n2.customFields && (n2.customFields = true) : n2 = { customFields: true };
          if (n2) {
            var i2 = [];
            n2.customFields && i2.push("custom");
            var o2 = i2.join(",");
            o2.length > 0 && (r2.include = o2);
          }
          return r2;
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetUsersOperation;
        }, t.validateParams = function() {
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v1/objects/".concat(t2.subscribeKey, "/users");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o = t2.filter, a = {};
          r2 && (a.limit = r2);
          if (n2) {
            var s = [];
            n2.totalCount && (a.count = true), n2.customFields && s.push("custom");
            var u = s.join(",");
            u.length > 0 && (a.include = u);
          }
          i2 && (i2.next && (a.start = i2.next), i2.prev && (a.end = i2.prev));
          o && (a.filter = o);
          return a;
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNCreateSpaceOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id, i2 = t2.name, o = t2.custom;
          if (!r2)
            return "Missing Space.id";
          if (!i2)
            return "Missing Space.name";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (o && !Object.values(o).every(function(e3) {
            return "string" == typeof e3 || "number" == typeof e3 || "boolean" == typeof e3;
          }))
            return "Invalid custom type, only string, number and boolean values are allowed.";
        }, t.usePost = function() {
          return true;
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v1/objects/".concat(t2.subscribeKey, "/spaces");
        }, t.postURL = function(e2) {
          var t2 = e2.config;
          return "/v1/objects/".concat(t2.subscribeKey, "/spaces");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = {};
          n2 ? void 0 === n2.customFields && (n2.customFields = true) : n2 = { customFields: true };
          if (n2) {
            var i2 = [];
            n2.customFields && i2.push("custom");
            var o = i2.join(",");
            o.length > 0 && (r2.include = o);
          }
          return r2;
        }, t.postPayload = function(e2, t2) {
          return function(e3, t3) {
            return t3;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateSpaceOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id, i2 = t2.name, o2 = t2.custom;
          if (!r2)
            return "Missing Space.id";
          if (!i2)
            return "Missing Space.name";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (o2 && !Object.values(o2).every(function(e3) {
            return "string" == typeof e3 || "number" == typeof e3 || "boolean" == typeof e3;
          }))
            return "Invalid custom type, only string, number and boolean values are allowed.";
        }, t.usePatch = function() {
          return true;
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(r2));
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.id;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(r2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = {};
          n2 ? void 0 === n2.customFields && (n2.customFields = true) : n2 = { customFields: true };
          if (n2) {
            var i2 = [];
            n2.customFields && i2.push("custom");
            var o2 = i2.join(",");
            o2.length > 0 && (r2.include = o2);
          }
          return r2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            return t3;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNDeleteSpaceOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config;
          if (!t2)
            return "Missing SpaceId";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.useDelete = function() {
          return true;
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetSpacesOperation;
        }, t.validateParams = function() {
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v1/objects/".concat(t2.subscribeKey, "/spaces");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o = t2.filter, a = {};
          r2 && (a.limit = r2);
          if (n2) {
            var s = [];
            n2.totalCount && (a.count = true), n2.customFields && s.push("custom");
            var u = s.join(",");
            u.length > 0 && (a.include = u);
          }
          i2 && (i2.next && (a.start = i2.next), i2.prev && (a.end = i2.prev));
          o && (a.filter = o);
          return a;
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetSpaceOperation;
        }, t.validateParams = function(e2, t2) {
          if (!t2.spaceId)
            return "Missing spaceId";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = {};
          n2 ? void 0 === n2.customFields && (n2.customFields = true) : n2 = { customFields: true };
          if (n2) {
            var i2 = [];
            n2.customFields && i2.push("custom");
            var o2 = i2.join(",");
            o2.length > 0 && (r2.include = o2);
          }
          return r2;
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetMembersOperation;
        }, t.validateParams = function(e2, t2) {
          if (!t2.spaceId)
            return "Missing spaceId";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = t2.filter, a = {};
          r2 && (a.limit = r2);
          if (n2) {
            var s = [];
            n2.totalCount && (a.count = true), n2.customFields && s.push("custom"), n2.userFields && s.push("user"), n2.customUserFields && s.push("user.custom");
            var u = s.join(",");
            u.length > 0 && (a.include = u);
          }
          i2 && (i2.next && (a.start = i2.next), i2.prev && (a.end = i2.prev));
          o2 && (a.filter = o2);
          return a;
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateMembersOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.spaceId, r2 = t2.users;
          if (!n2)
            return "Missing spaceId";
          if (!r2)
            return "Missing users";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.usePatch = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = {};
          r2 && (o2.limit = r2);
          if (n2) {
            var a = [];
            n2.totalCount && (o2.count = true), n2.customFields && a.push("custom"), n2.spaceFields && a.push("space"), n2.customSpaceFields && a.push("space.custom");
            var s = a.join(",");
            s.length > 0 && (o2.include = s);
          }
          i2 && (i2.next && (o2.start = i2.next), i2.prev && (o2.end = i2.prev));
          return o2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.users, r2 = {};
            n2 && n2.length > 0 && (r2.add = [], n2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), r2.add.push(t4);
            }));
            return r2;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateMembersOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.spaceId, r2 = t2.users;
          if (!n2)
            return "Missing spaceId";
          if (!r2)
            return "Missing users";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.usePatch = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = {};
          r2 && (o2.limit = r2);
          if (n2) {
            var a = [];
            n2.totalCount && (o2.count = true), n2.customFields && a.push("custom"), n2.spaceFields && a.push("space"), n2.customSpaceFields && a.push("space.custom");
            var s = a.join(",");
            s.length > 0 && (o2.include = s);
          }
          i2 && (i2.next && (o2.start = i2.next), i2.prev && (o2.end = i2.prev));
          return o2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.addMembers, r2 = t3.updateMembers, i2 = t3.removeMembers, o2 = t3.users, a = {};
            n2 && n2.length > 0 && (a.add = [], n2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), a.add.push(t4);
            }));
            r2 && r2.length > 0 && (a.update = [], r2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), a.update.push(t4);
            }));
            o2 && o2.length > 0 && (a.update = a.update || [], o2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), a.update.push(t4);
            }));
            i2 && i2.length > 0 && (a.remove = [], i2.forEach(function(e4) {
              a.remove.push({ id: e4 });
            }));
            return a;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateMembersOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.spaceId, r2 = t2.users;
          if (!n2)
            return "Missing spaceId";
          if (!r2)
            return "Missing users";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/spaces/").concat(o.default.encodeString(t2.spaceId), "/users");
        }, t.usePatch = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = {};
          r2 && (o2.limit = r2);
          if (n2) {
            var a = [];
            n2.totalCount && (o2.count = true), n2.customFields && a.push("custom"), n2.spaceFields && a.push("space"), n2.customSpaceFields && a.push("space.custom");
            var s = a.join(",");
            s.length > 0 && (o2.include = s);
          }
          i2 && (i2.next && (o2.start = i2.next), i2.prev && (o2.end = i2.prev));
          return o2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.users, r2 = {};
            n2 && n2.length > 0 && (r2.remove = [], n2.forEach(function(e4) {
              r2.remove.push({ id: e4 });
            }));
            return r2;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNGetMembershipsOperation;
        }, t.validateParams = function(e2, t2) {
          if (!t2.userId)
            return "Missing userId";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = t2.filter, a = {};
          r2 && (a.limit = r2);
          if (n2) {
            var s = [];
            n2.totalCount && (a.count = true), n2.customFields && s.push("custom"), n2.spaceFields && s.push("space"), n2.customSpaceFields && s.push("space.custom");
            var u = s.join(",");
            u.length > 0 && (a.include = u);
          }
          i2 && (i2.next && (a.start = i2.next), i2.prev && (a.end = i2.prev));
          o2 && (a.filter = o2);
          return a;
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateMembershipsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.userId, r2 = t2.spaces;
          if (!n2)
            return "Missing userId";
          if (!r2)
            return "Missing spaces";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.usePatch = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = {};
          r2 && (o2.limit = r2);
          if (n2) {
            var a = [];
            n2.totalCount && (o2.count = true), n2.customFields && a.push("custom"), n2.spaceFields && a.push("space"), n2.customSpaceFields && a.push("space.custom");
            var s = a.join(",");
            s.length > 0 && (o2.include = s);
          }
          i2 && (i2.next && (o2.start = i2.next), i2.prev && (o2.end = i2.prev));
          return o2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.addMemberships, r2 = t3.updateMemberships, i2 = t3.removeMemberships, o2 = t3.spaces, a = {};
            n2 && n2.length > 0 && (a.add = [], n2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), a.add.push(t4);
            }));
            r2 && r2.length > 0 && (a.update = [], r2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), a.update.push(t4);
            }));
            o2 && o2.length > 0 && (a.update = a.update || [], o2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), a.update.push(t4);
            }));
            i2 && i2.length > 0 && (a.remove = [], i2.forEach(function(e4) {
              a.remove.push({ id: e4 });
            }));
            return a;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateMembershipsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.userId, r2 = t2.spaces;
          if (!n2)
            return "Missing userId";
          if (!r2)
            return "Missing spaces";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.usePatch = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = {};
          r2 && (o2.limit = r2);
          if (n2) {
            var a = [];
            n2.totalCount && (o2.count = true), n2.customFields && a.push("custom"), n2.spaceFields && a.push("space"), n2.customSpaceFields && a.push("space.custom");
            var s = a.join(",");
            s.length > 0 && (o2.include = s);
          }
          i2 && (i2.next && (o2.start = i2.next), i2.prev && (o2.end = i2.prev));
          return o2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.spaces, r2 = {};
            n2 && n2.length > 0 && (r2.add = [], n2.forEach(function(e4) {
              var t4 = { id: e4.id };
              e4.custom && (t4.custom = e4.custom), r2.add.push(t4);
            }));
            return r2;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNUpdateMembershipsOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.userId, r2 = t2.spaces;
          if (!n2)
            return "Missing userId";
          if (!r2)
            return "Missing spaces";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.patchURL = function(e2, t2) {
          var n2 = e2.config;
          return "/v1/objects/".concat(n2.subscribeKey, "/users/").concat(o.default.encodeString(t2.userId), "/spaces");
        }, t.usePatch = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.include, r2 = t2.limit, i2 = t2.page, o2 = {};
          r2 && (o2.limit = r2);
          if (n2) {
            var a = [];
            n2.totalCount && (o2.count = true), n2.customFields && a.push("custom"), n2.spaceFields && a.push("space"), n2.customSpaceFields && a.push("space.custom");
            var s = a.join(",");
            s.length > 0 && (o2.include = s);
          }
          i2 && (i2.next && (o2.start = i2.next), i2.prev && (o2.end = i2.prev));
          return o2;
        }, t.patchPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.spaces, r2 = {};
            n2 && n2.length > 0 && (r2.remove = [], n2.forEach(function(e4) {
              r2.remove.push({ id: e4 });
            }));
            return r2;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNAccessManagerAudit;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v2/auth/audit/sub-key/".concat(t2.subscribeKey);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return false;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channel, r2 = t2.channelGroup, i2 = t2.authKeys, o = void 0 === i2 ? [] : i2, a = {};
          n2 && (a.channel = n2);
          r2 && (a["channel-group"] = r2);
          o.length > 0 && (a.auth = o.join(","));
          return a;
        }, t.handleResponse = function(e2, t2) {
          return t2.payload;
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNAccessManagerGrant;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config;
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (!n2.publishKey)
            return "Missing Publish Key";
          if (!n2.secretKey)
            return "Missing Secret Key";
          if (null != t2.uuids && !t2.authKeys)
            return "authKeys are required for grant request on uuids";
          if (null != t2.uuids && (null != t2.channels || null != t2.channelGroups))
            return "Both channel/channelgroup and uuid cannot be used in the same request";
        }, t.getURL = function(e2) {
          var t2 = e2.config;
          return "/v2/auth/grant/sub-key/".concat(t2.subscribeKey);
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return false;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channels, r2 = void 0 === n2 ? [] : n2, i2 = t2.channelGroups, o = void 0 === i2 ? [] : i2, a = t2.uuids, s = void 0 === a ? [] : a, u = t2.ttl, c = t2.read, l = void 0 !== c && c, f2 = t2.write, d = void 0 !== f2 && f2, p = t2.manage, h = void 0 !== p && p, v = t2.get, g = void 0 !== v && v, y = t2.join, b = void 0 !== y && y, m = t2.update, _ = void 0 !== m && m, P = t2.authKeys, w = void 0 === P ? [] : P, O = t2.delete, k = {};
          k.r = l ? "1" : "0", k.w = d ? "1" : "0", k.m = h ? "1" : "0", k.d = O ? "1" : "0", k.g = g ? "1" : "0", k.j = b ? "1" : "0", k.u = _ ? "1" : "0", r2.length > 0 && (k.channel = r2.join(","));
          o.length > 0 && (k["channel-group"] = o.join(","));
          w.length > 0 && (k.auth = w.join(","));
          s.length > 0 && (k["target-uuid"] = s.join(","));
          (u || 0 === u) && (k.ttl = u);
          return k;
        }, t.handleResponse = function() {
          return {};
        };
        n(2);
        var i = r(n(1));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNAccessManagerGrantToken;
        }, t.extractPermissions = o, t.validateParams = function(e2, t2) {
          var n2 = e2.config;
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
          if (!n2.publishKey)
            return "Missing Publish Key";
          if (!n2.secretKey)
            return "Missing Secret Key";
          if (!t2.resources && !t2.patterns)
            return "Missing either Resources or Patterns.";
          if (t2.resources && (!t2.resources.uuids || 0 === Object.keys(t2.resources.uuids).length) && (!t2.resources.channels || 0 === Object.keys(t2.resources.channels).length) && (!t2.resources.groups || 0 === Object.keys(t2.resources.groups).length) || t2.patterns && (!t2.patterns.uuids || 0 === Object.keys(t2.patterns.uuids).length) && (!t2.patterns.channels || 0 === Object.keys(t2.patterns.channels).length) && (!t2.patterns.groups || 0 === Object.keys(t2.patterns.groups).length))
            return "Missing values for either Resources or Patterns.";
        }, t.postURL = function(e2) {
          var t2 = e2.config;
          return "/v3/pam/".concat(t2.subscribeKey, "/grant");
        }, t.usePost = function() {
          return true;
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return false;
        }, t.prepareParams = function() {
          return {};
        }, t.postPayload = function(e2, t2) {
          return function(e3, t3) {
            var n2 = t3.ttl, r2 = t3.resources, i2 = t3.patterns, a = t3.meta, s = t3.authorized_uuid, u = { ttl: 0, permissions: { resources: { channels: {}, groups: {}, uuids: {}, users: {}, spaces: {} }, patterns: { channels: {}, groups: {}, uuids: {}, users: {}, spaces: {} }, meta: {} } };
            if (r2) {
              var c = r2.uuids, l = r2.channels, f2 = r2.groups;
              c && Object.keys(c).forEach(function(e4) {
                u.permissions.resources.uuids[e4] = o(c[e4]);
              }), l && Object.keys(l).forEach(function(e4) {
                u.permissions.resources.channels[e4] = o(l[e4]);
              }), f2 && Object.keys(f2).forEach(function(e4) {
                u.permissions.resources.groups[e4] = o(f2[e4]);
              });
            }
            if (i2) {
              var d = i2.uuids, p = i2.channels, h = i2.groups;
              d && Object.keys(d).forEach(function(e4) {
                u.permissions.patterns.uuids[e4] = o(d[e4]);
              }), p && Object.keys(p).forEach(function(e4) {
                u.permissions.patterns.channels[e4] = o(p[e4]);
              }), h && Object.keys(h).forEach(function(e4) {
                u.permissions.patterns.groups[e4] = o(h[e4]);
              });
            }
            (n2 || 0 === n2) && (u.ttl = n2);
            a && (u.permissions.meta = a);
            s && (u.permissions.uuid = "".concat(s));
            return u;
          }(0, t2);
        }, t.handleResponse = function(e2, t2) {
          return t2.data.token;
        };
        n(2);
        var i = r(n(1));
        function o(e2) {
          var t2 = 0;
          return e2.join && (t2 |= 128), e2.update && (t2 |= 64), e2.get && (t2 |= 32), e2.delete && (t2 |= 8), e2.manage && (t2 |= 4), e2.write && (t2 |= 2), e2.read && (t2 |= 1), t2;
        }
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return o.default.PNPublishOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.message;
          if (!t2.channel)
            return "Missing Channel";
          if (!r2)
            return "Missing Message";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.usePost = function(e2, t2) {
          var n2 = t2.sendByPost;
          return void 0 !== n2 && n2;
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel, i2 = t2.message, o2 = s(e2, i2);
          return "/publish/".concat(n2.publishKey, "/").concat(n2.subscribeKey, "/0/").concat(a.default.encodeString(r2), "/0/").concat(a.default.encodeString(o2));
        }, t.postURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel;
          return "/publish/".concat(n2.publishKey, "/").concat(n2.subscribeKey, "/0/").concat(a.default.encodeString(r2), "/0");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.postPayload = function(e2, t2) {
          var n2 = t2.message;
          return s(e2, n2);
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.meta, r2 = t2.replicate, o2 = void 0 === r2 || r2, a2 = t2.storeInHistory, s2 = t2.ttl, u = {};
          null != a2 && (u.store = a2 ? "1" : "0");
          s2 && (u.ttl = s2);
          false === o2 && (u.norep = "true");
          n2 && "object" === (0, i.default)(n2) && (u.meta = JSON.stringify(n2));
          return u;
        }, t.handleResponse = function(e2, t2) {
          return { timetoken: t2[2] };
        };
        var i = r(n(7)), o = (n(2), r(n(1))), a = r(n(3));
        function s(e2, t2) {
          var n2 = e2.crypto, r2 = e2.config, i2 = JSON.stringify(t2);
          return r2.cipherKey && (i2 = n2.encrypt(i2), i2 = JSON.stringify(i2)), i2;
        }
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNSignalOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.message;
          if (!t2.channel)
            return "Missing Channel";
          if (!r2)
            return "Missing Message";
          if (!n2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channel, i2 = t2.message, a = (s = i2, JSON.stringify(s));
          var s;
          return "/signal/".concat(n2.publishKey, "/").concat(n2.subscribeKey, "/0/").concat(o.default.encodeString(r2), "/0/").concat(o.default.encodeString(a));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function() {
          return {};
        }, t.handleResponse = function(e2, t2) {
          return { timetoken: t2[2] };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNHistoryOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channel, r2 = e2.config;
          if (!n2)
            return "Missing channel";
          if (!r2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channel, r2 = e2.config;
          return "/v2/history/sub-key/".concat(r2.subscribeKey, "/channel/").concat(o.default.encodeString(n2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.start, r2 = t2.end, i2 = t2.reverse, o2 = t2.count, a2 = void 0 === o2 ? 100 : o2, s = t2.stringifiedTimeToken, u = void 0 !== s && s, c = t2.includeMeta, l = void 0 !== c && c, f2 = { include_token: "true" };
          f2.count = a2, n2 && (f2.start = n2);
          r2 && (f2.end = r2);
          u && (f2.string_message_token = "true");
          null != i2 && (f2.reverse = i2.toString());
          l && (f2.include_meta = "true");
          return f2;
        }, t.handleResponse = function(e2, t2) {
          var n2 = { messages: [], startTimeToken: t2[1], endTimeToken: t2[2] };
          Array.isArray(t2[0]) && t2[0].forEach(function(t3) {
            var r2 = { timetoken: t3.timetoken, entry: a(e2, t3.message) };
            t3.meta && (r2.meta = t3.meta), n2.messages.push(r2);
          });
          return n2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
        function a(e2, t2) {
          var n2 = e2.config, r2 = e2.crypto;
          if (!n2.cipherKey)
            return t2;
          try {
            return r2.decrypt(t2);
          } catch (e3) {
            return t2;
          }
        }
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNDeleteMessagesOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channel, r2 = e2.config;
          if (!n2)
            return "Missing channel";
          if (!r2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.useDelete = function() {
          return true;
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channel, r2 = e2.config;
          return "/v3/history/sub-key/".concat(r2.subscribeKey, "/channel/").concat(o.default.encodeString(n2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.start, r2 = t2.end, i2 = {};
          n2 && (i2.start = n2);
          r2 && (i2.end = r2);
          return i2;
        }, t.handleResponse = function(e2, t2) {
          return t2.payload;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return o.default.PNMessageCounts;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channels, r2 = t2.timetoken, i2 = t2.channelTimetokens, o2 = e2.config;
          if (!n2)
            return "Missing channel";
          if (r2 && i2)
            return "timetoken and channelTimetokens are incompatible together";
          if (r2 && i2 && i2.length > 1 && n2.length !== i2.length)
            return "Length of channelTimetokens and channels do not match";
          if (!o2.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channels, r2 = e2.config, i2 = n2.join(",");
          return "/v3/history/sub-key/".concat(r2.subscribeKey, "/message-counts/").concat(a.default.encodeString(i2));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.timetoken, r2 = t2.channelTimetokens, o2 = {};
          if (r2 && 1 === r2.length) {
            var a2 = (0, i.default)(r2, 1)[0];
            o2.timetoken = a2;
          } else
            r2 ? o2.channelsTimetoken = r2.join(",") : n2 && (o2.timetoken = n2);
          return o2;
        }, t.handleResponse = function(e2, t2) {
          return { channels: t2.channels };
        };
        var i = r(n(9)), o = r(n(1)), a = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNFetchMessagesOperation;
        }, t.validateParams = function(e2, t2) {
          var n2 = t2.channels, r2 = t2.includeMessageActions, i2 = void 0 !== r2 && r2, o2 = e2.config;
          if (!n2 || 0 === n2.length)
            return "Missing channels";
          if (!o2.subscribeKey)
            return "Missing Subscribe Key";
          if (i2 && n2.length > 1)
            throw new TypeError("History can return actions data for a single channel only. Either pass a single channel or disable the includeMessageActions flag.");
        }, t.getURL = function(e2, t2) {
          var n2 = t2.channels, r2 = void 0 === n2 ? [] : n2, i2 = t2.includeMessageActions, a = void 0 !== i2 && i2, s = e2.config, u = a ? "history-with-actions" : "history", c = r2.length > 0 ? r2.join(",") : ",";
          return "/v3/".concat(u, "/sub-key/").concat(s.subscribeKey, "/channel/").concat(o.default.encodeString(c));
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getTransactionTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = t2.channels, r2 = t2.start, i2 = t2.end, o2 = t2.includeMessageActions, a = t2.count, s = t2.stringifiedTimeToken, u = void 0 !== s && s, c = t2.includeMeta, l = void 0 !== c && c, f2 = t2.includeUuid, d = t2.includeUUID, p = void 0 === d || d, h = t2.includeMessageType, v = void 0 === h || h, g = {};
          g.max = a || (n2.length > 1 || true === o2 ? 25 : 100);
          r2 && (g.start = r2);
          i2 && (g.end = i2);
          u && (g.string_message_token = "true");
          l && (g.include_meta = "true");
          p && false !== f2 && (g.include_uuid = "true");
          v && (g.include_message_type = "true");
          return g;
        }, t.handleResponse = function(e2, t2) {
          var n2 = { channels: {} };
          Object.keys(t2.channels || {}).forEach(function(r2) {
            n2.channels[r2] = [], (t2.channels[r2] || []).forEach(function(t3) {
              var i2 = {};
              i2.channel = r2, i2.timetoken = t3.timetoken, i2.message = function(e3, t4) {
                var n3 = e3.config, r3 = e3.crypto;
                if (!n3.cipherKey)
                  return t4;
                try {
                  return r3.decrypt(t4);
                } catch (e4) {
                  return t4;
                }
              }(e2, t3.message), i2.messageType = t3.message_type, i2.uuid = t3.uuid, t3.actions && (i2.actions = t3.actions, i2.data = t3.actions), t3.meta && (i2.meta = t3.meta), n2.channels[r2].push(i2);
            });
          }), t2.more && (n2.more = t2.more);
          return n2;
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.getOperation = function() {
          return i.default.PNSubscribeOperation;
        }, t.validateParams = function(e2) {
          if (!e2.config.subscribeKey)
            return "Missing Subscribe Key";
        }, t.getURL = function(e2, t2) {
          var n2 = e2.config, r2 = t2.channels, i2 = void 0 === r2 ? [] : r2, a = i2.length > 0 ? i2.join(",") : ",";
          return "/v2/subscribe/".concat(n2.subscribeKey, "/").concat(o.default.encodeString(a), "/0");
        }, t.getRequestTimeout = function(e2) {
          return e2.config.getSubscribeTimeout();
        }, t.isAuthSupported = function() {
          return true;
        }, t.prepareParams = function(e2, t2) {
          var n2 = e2.config, r2 = t2.state, i2 = t2.channelGroups, o2 = void 0 === i2 ? [] : i2, a = t2.timetoken, s = t2.filterExpression, u = t2.region, c = { heartbeat: n2.getPresenceTimeout() };
          o2.length > 0 && (c["channel-group"] = o2.join(","));
          s && s.length > 0 && (c["filter-expr"] = s);
          Object.keys(r2).length && (c.state = JSON.stringify(r2));
          a && (c.tt = a);
          u && (c.tr = u);
          return c;
        }, t.handleResponse = function(e2, t2) {
          var n2 = [];
          t2.m.forEach(function(e3) {
            var t3 = { publishTimetoken: e3.p.t, region: e3.p.r }, r3 = { shard: parseInt(e3.a, 10), subscriptionMatch: e3.b, channel: e3.c, messageType: e3.e, payload: e3.d, flags: e3.f, issuingClientId: e3.i, subscribeKey: e3.k, originationTimetoken: e3.o, userMetadata: e3.u, publishMetaData: t3 };
            n2.push(r3);
          });
          var r2 = { timetoken: t2.t.t, region: t2.t.r };
          return { messages: n2, metadata: r2 };
        };
        n(2);
        var i = r(n(1)), o = r(n(3));
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(5)), o = r(n(6)), a = r(n(4)), s = (r(n(8)), r(n(10))), u = (n(2), function() {
          function e2(t2) {
            var n2 = this;
            (0, i.default)(this, e2), (0, a.default)(this, "_modules", void 0), (0, a.default)(this, "_config", void 0), (0, a.default)(this, "_maxSubDomain", void 0), (0, a.default)(this, "_currentSubDomain", void 0), (0, a.default)(this, "_standardOrigin", void 0), (0, a.default)(this, "_subscribeOrigin", void 0), (0, a.default)(this, "_providedFQDN", void 0), (0, a.default)(this, "_requestTimeout", void 0), (0, a.default)(this, "_coreParams", void 0), this._modules = {}, Object.keys(t2).forEach(function(e3) {
              n2._modules[e3] = t2[e3].bind(n2);
            });
          }
          return (0, o.default)(e2, [{ key: "init", value: function(e3) {
            this._config = e3, this._maxSubDomain = 20, this._currentSubDomain = Math.floor(Math.random() * this._maxSubDomain), this._providedFQDN = (this._config.secure ? "https://" : "http://") + this._config.origin, this._coreParams = {}, this.shiftStandardOrigin();
          } }, { key: "nextOrigin", value: function() {
            return this._providedFQDN.match(/ps\.pndsn\.com$/i) ? (this._currentSubDomain += 1, this._currentSubDomain >= this._maxSubDomain && (this._currentSubDomain = 1), e3 = this._currentSubDomain.toString(), this._providedFQDN.replace("ps.pndsn.com", "ps".concat(e3, ".pndsn.com"))) : this._providedFQDN;
            var e3;
          } }, { key: "hasModule", value: function(e3) {
            return e3 in this._modules;
          } }, { key: "shiftStandardOrigin", value: function() {
            return this._standardOrigin = this.nextOrigin(), this._standardOrigin;
          } }, { key: "getStandardOrigin", value: function() {
            return this._standardOrigin;
          } }, { key: "POSTFILE", value: function(e3, t2, n2) {
            return this._modules.postfile(e3, t2, n2);
          } }, { key: "GETFILE", value: function(e3, t2, n2) {
            return this._modules.getfile(e3, t2, n2);
          } }, { key: "POST", value: function(e3, t2, n2, r2) {
            return this._modules.post(e3, t2, n2, r2);
          } }, { key: "PATCH", value: function(e3, t2, n2, r2) {
            return this._modules.patch(e3, t2, n2, r2);
          } }, { key: "GET", value: function(e3, t2, n2) {
            return this._modules.get(e3, t2, n2);
          } }, { key: "DELETE", value: function(e3, t2, n2) {
            return this._modules.del(e3, t2, n2);
          } }, { key: "_detectErrorCategory", value: function(e3) {
            if ("ENOTFOUND" === e3.code)
              return s.default.PNNetworkIssuesCategory;
            if ("ECONNREFUSED" === e3.code)
              return s.default.PNNetworkIssuesCategory;
            if ("ECONNRESET" === e3.code)
              return s.default.PNNetworkIssuesCategory;
            if ("EAI_AGAIN" === e3.code)
              return s.default.PNNetworkIssuesCategory;
            if (0 === e3.status || e3.hasOwnProperty("status") && void 0 === e3.status)
              return s.default.PNNetworkIssuesCategory;
            if (e3.timeout)
              return s.default.PNTimeoutCategory;
            if ("ETIMEDOUT" === e3.code)
              return s.default.PNNetworkIssuesCategory;
            if (e3.response) {
              if (e3.response.badRequest)
                return s.default.PNBadRequestCategory;
              if (e3.response.forbidden)
                return s.default.PNAccessDeniedCategory;
            }
            return s.default.PNUnknownCategory;
          } }]), e2;
        }());
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var r = { get: function(e2) {
          try {
            return localStorage.getItem(e2);
          } catch (e3) {
            return null;
          }
        }, set: function(e2, t2) {
          try {
            return localStorage.setItem(e2, t2);
          } catch (e3) {
            return null;
          }
        } };
        t.default = r, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i = r(n(7)), o = r(n(5)), a = r(n(6)), s = r(n(4)), u = function() {
          function e2(t2, n2) {
            (0, o.default)(this, e2), (0, s.default)(this, "_base64ToBinary", void 0), (0, s.default)(this, "_cborReader", void 0), this._base64ToBinary = n2, this._decode = t2;
          }
          return (0, a.default)(e2, [{ key: "decodeToken", value: function(e3) {
            var t2 = "";
            e3.length % 4 == 3 ? t2 = "=" : e3.length % 4 == 2 && (t2 = "==");
            var n2 = e3.replace(/-/gi, "+").replace(/_/gi, "/") + t2, r2 = this._decode(this._base64ToBinary(n2));
            if ("object" === (0, i.default)(r2))
              return r2;
          } }]), e2;
        }();
        t.default = u, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.postfile = function(e2, t2, n2) {
          return c.apply(this, arguments);
        }, t.getfile = function(e2, t2, n2) {
          var r2 = a.default.get(this.getStandardOrigin() + t2.url).set(t2.headers).query(e2);
          return u.call(this, r2, t2, n2);
        }, t.get = function(e2, t2, n2) {
          var r2 = a.default.get(this.getStandardOrigin() + t2.url).set(t2.headers).query(e2);
          return u.call(this, r2, t2, n2);
        }, t.post = function(e2, t2, n2, r2) {
          var i2 = a.default.post(this.getStandardOrigin() + n2.url).query(e2).set(n2.headers).send(t2);
          return u.call(this, i2, n2, r2);
        }, t.patch = function(e2, t2, n2, r2) {
          var i2 = a.default.patch(this.getStandardOrigin() + n2.url).query(e2).set(n2.headers).send(t2);
          return u.call(this, i2, n2, r2);
        }, t.del = function(e2, t2, n2) {
          var r2 = a.default.delete(this.getStandardOrigin() + t2.url).set(t2.headers).query(e2);
          return u.call(this, r2, t2, n2);
        };
        var i = r(n(11)), o = r(n(12)), a = r(n(125));
        n(2);
        function s(e2) {
          var t2 = (/* @__PURE__ */ new Date()).getTime(), n2 = (/* @__PURE__ */ new Date()).toISOString(), r2 = console && console.log ? console : window && window.console && window.console.log ? window.console : console;
          r2.log("<<<<<"), r2.log("[".concat(n2, "]"), "\n", e2.url, "\n", e2.qs), r2.log("-----"), e2.on("response", function(n3) {
            var i2 = (/* @__PURE__ */ new Date()).getTime() - t2, o2 = (/* @__PURE__ */ new Date()).toISOString();
            r2.log(">>>>>>"), r2.log("[".concat(o2, " / ").concat(i2, "]"), "\n", e2.url, "\n", e2.qs, "\n", n3.text), r2.log("-----");
          });
        }
        function u(e2, t2, n2) {
          var r2 = this;
          this._config.logVerbosity && (e2 = e2.use(s)), this._config.proxy && this._modules.proxy && (e2 = this._modules.proxy.call(this, e2)), this._config.keepAlive && this._modules.keepAlive && (e2 = this._modules.keepAlive(e2));
          var i2 = e2;
          return true === t2.forceBuffered ? i2 = "undefined" == typeof Blob ? i2.buffer().responseType("arraybuffer") : i2.responseType("arraybuffer") : false === t2.forceBuffered && (i2 = i2.buffer(false)), i2.timeout(t2.timeout).end(function(e3, i3) {
            var o2, a2 = {};
            if (a2.error = null !== e3, a2.operation = t2.operation, i3 && i3.status && (a2.statusCode = i3.status), e3) {
              if (e3.response && e3.response.text && !r2._config.logVerbosity)
                try {
                  a2.errorData = JSON.parse(e3.response.text);
                } catch (t3) {
                  a2.errorData = e3;
                }
              else
                a2.errorData = e3;
              return a2.category = r2._detectErrorCategory(e3), n2(a2, null);
            }
            if (t2.ignoreBody)
              o2 = { headers: i3.headers, redirects: i3.redirects, response: i3 };
            else
              try {
                o2 = JSON.parse(i3.text);
              } catch (e4) {
                return a2.errorData = i3, a2.error = true, n2(a2, null);
              }
            return o2.error && 1 === o2.error && o2.status && o2.message && o2.service ? (a2.errorData = o2, a2.statusCode = o2.status, a2.error = true, a2.category = r2._detectErrorCategory(a2), n2(a2, null)) : (o2.error && o2.error.message && (a2.errorData = o2.error), n2(a2, o2));
          });
        }
        function c() {
          return (c = (0, o.default)(i.default.mark(function e2(t2, n2, r2) {
            var o2, s2;
            return i.default.wrap(function(e3) {
              for (; ; )
                switch (e3.prev = e3.next) {
                  case 0:
                    return o2 = a.default.post(t2), n2.forEach(function(e4) {
                      var t3 = e4.key, n3 = e4.value;
                      o2 = o2.field(t3, n3);
                    }), o2.attach("file", r2, { contentType: "application/octet-stream" }), e3.next = 5, o2;
                  case 5:
                    return s2 = e3.sent, e3.abrupt("return", s2);
                  case 7:
                  case "end":
                    return e3.stop();
                }
            }, e2);
          }))).apply(this, arguments);
        }
      }, function(e, t, n) {
        var r;
        "undefined" != typeof window ? r = window : "undefined" != typeof self ? r = self : (console.warn("Using browser-only version of superagent in non-browser environment"), r = this);
        var i = n(126), o = n(127), a = n(26), s = n(128), u = n(130);
        function c() {
        }
        var l = t = e.exports = function(e2, n2) {
          return "function" == typeof n2 ? new t.Request("GET", e2).end(n2) : 1 == arguments.length ? new t.Request("GET", e2) : new t.Request(e2, n2);
        };
        t.Request = y, l.getXHR = function() {
          if (!(!r.XMLHttpRequest || r.location && "file:" == r.location.protocol && r.ActiveXObject))
            return new XMLHttpRequest();
          try {
            return new ActiveXObject("Microsoft.XMLHTTP");
          } catch (e2) {
          }
          try {
            return new ActiveXObject("Msxml2.XMLHTTP.6.0");
          } catch (e2) {
          }
          try {
            return new ActiveXObject("Msxml2.XMLHTTP.3.0");
          } catch (e2) {
          }
          try {
            return new ActiveXObject("Msxml2.XMLHTTP");
          } catch (e2) {
          }
          throw Error("Browser-only version of superagent could not find XHR");
        };
        var f2 = "".trim ? function(e2) {
          return e2.trim();
        } : function(e2) {
          return e2.replace(/(^\s*|\s*$)/g, "");
        };
        function d(e2) {
          if (!a(e2))
            return e2;
          var t2 = [];
          for (var n2 in e2)
            p(t2, n2, e2[n2]);
          return t2.join("&");
        }
        function p(e2, t2, n2) {
          if (null != n2)
            if (Array.isArray(n2))
              n2.forEach(function(n3) {
                p(e2, t2, n3);
              });
            else if (a(n2))
              for (var r2 in n2)
                p(e2, t2 + "[" + r2 + "]", n2[r2]);
            else
              e2.push(encodeURIComponent(t2) + "=" + encodeURIComponent(n2));
          else
            null === n2 && e2.push(encodeURIComponent(t2));
        }
        function h(e2) {
          for (var t2, n2, r2 = {}, i2 = e2.split("&"), o2 = 0, a2 = i2.length; o2 < a2; ++o2)
            -1 == (n2 = (t2 = i2[o2]).indexOf("=")) ? r2[decodeURIComponent(t2)] = "" : r2[decodeURIComponent(t2.slice(0, n2))] = decodeURIComponent(t2.slice(n2 + 1));
          return r2;
        }
        function v(e2) {
          return /[\/+]json($|[^-\w])/.test(e2);
        }
        function g(e2) {
          this.req = e2, this.xhr = this.req.xhr, this.text = "HEAD" != this.req.method && ("" === this.xhr.responseType || "text" === this.xhr.responseType) || void 0 === this.xhr.responseType ? this.xhr.responseText : null, this.statusText = this.req.xhr.statusText;
          var t2 = this.xhr.status;
          1223 === t2 && (t2 = 204), this._setStatusProperties(t2), this.header = this.headers = function(e3) {
            for (var t3, n2, r2, i2, o2 = e3.split(/\r?\n/), a2 = {}, s2 = 0, u2 = o2.length; s2 < u2; ++s2)
              -1 !== (t3 = (n2 = o2[s2]).indexOf(":")) && (r2 = n2.slice(0, t3).toLowerCase(), i2 = f2(n2.slice(t3 + 1)), a2[r2] = i2);
            return a2;
          }(this.xhr.getAllResponseHeaders()), this.header["content-type"] = this.xhr.getResponseHeader("content-type"), this._setHeaderProperties(this.header), null === this.text && e2._responseType ? this.body = this.xhr.response : this.body = "HEAD" != this.req.method ? this._parseBody(this.text ? this.text : this.xhr.response) : null;
        }
        function y(e2, t2) {
          var n2 = this;
          this._query = this._query || [], this.method = e2, this.url = t2, this.header = {}, this._header = {}, this.on("end", function() {
            var e3, t3 = null, r2 = null;
            try {
              r2 = new g(n2);
            } catch (e4) {
              return (t3 = new Error("Parser is unable to parse the response")).parse = true, t3.original = e4, n2.xhr ? (t3.rawResponse = void 0 === n2.xhr.responseType ? n2.xhr.responseText : n2.xhr.response, t3.status = n2.xhr.status ? n2.xhr.status : null, t3.statusCode = t3.status) : (t3.rawResponse = null, t3.status = null), n2.callback(t3);
            }
            n2.emit("response", r2);
            try {
              n2._isResponseOK(r2) || (e3 = new Error(r2.statusText || "Unsuccessful HTTP response"));
            } catch (t4) {
              e3 = t4;
            }
            e3 ? (e3.original = t3, e3.response = r2, e3.status = r2.status, n2.callback(e3, r2)) : n2.callback(null, r2);
          });
        }
        function b(e2, t2, n2) {
          var r2 = l("DELETE", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.send(t2), n2 && r2.end(n2), r2;
        }
        l.serializeObject = d, l.parseString = h, l.types = { html: "text/html", json: "application/json", xml: "text/xml", urlencoded: "application/x-www-form-urlencoded", form: "application/x-www-form-urlencoded", "form-data": "application/x-www-form-urlencoded" }, l.serialize = { "application/x-www-form-urlencoded": d, "application/json": JSON.stringify }, l.parse = { "application/x-www-form-urlencoded": h, "application/json": JSON.parse }, s(g.prototype), g.prototype._parseBody = function(e2) {
          var t2 = l.parse[this.type];
          return this.req._parser ? this.req._parser(this, e2) : (!t2 && v(this.type) && (t2 = l.parse["application/json"]), t2 && e2 && (e2.length || e2 instanceof Object) ? t2(e2) : null);
        }, g.prototype.toError = function() {
          var e2 = this.req, t2 = e2.method, n2 = e2.url, r2 = "cannot " + t2 + " " + n2 + " (" + this.status + ")", i2 = new Error(r2);
          return i2.status = this.status, i2.method = t2, i2.url = n2, i2;
        }, l.Response = g, i(y.prototype), o(y.prototype), y.prototype.type = function(e2) {
          return this.set("Content-Type", l.types[e2] || e2), this;
        }, y.prototype.accept = function(e2) {
          return this.set("Accept", l.types[e2] || e2), this;
        }, y.prototype.auth = function(e2, t2, n2) {
          1 === arguments.length && (t2 = ""), "object" == typeof t2 && null !== t2 && (n2 = t2, t2 = ""), n2 || (n2 = { type: "function" == typeof btoa ? "basic" : "auto" });
          var r2 = function(e3) {
            if ("function" == typeof btoa)
              return btoa(e3);
            throw new Error("Cannot use basic auth, btoa is not a function");
          };
          return this._auth(e2, t2, n2, r2);
        }, y.prototype.query = function(e2) {
          return "string" != typeof e2 && (e2 = d(e2)), e2 && this._query.push(e2), this;
        }, y.prototype.attach = function(e2, t2, n2) {
          if (t2) {
            if (this._data)
              throw Error("superagent can't mix .send() and .attach()");
            this._getFormData().append(e2, t2, n2 || t2.name);
          }
          return this;
        }, y.prototype._getFormData = function() {
          return this._formData || (this._formData = new r.FormData()), this._formData;
        }, y.prototype.callback = function(e2, t2) {
          if (this._shouldRetry(e2, t2))
            return this._retry();
          var n2 = this._callback;
          this.clearTimeout(), e2 && (this._maxRetries && (e2.retries = this._retries - 1), this.emit("error", e2)), n2(e2, t2);
        }, y.prototype.crossDomainError = function() {
          var e2 = new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");
          e2.crossDomain = true, e2.status = this.status, e2.method = this.method, e2.url = this.url, this.callback(e2);
        }, y.prototype.buffer = y.prototype.ca = y.prototype.agent = function() {
          return console.warn("This is not supported in browser version of superagent"), this;
        }, y.prototype.pipe = y.prototype.write = function() {
          throw Error("Streaming is not supported in browser version of superagent");
        }, y.prototype._isHost = function(e2) {
          return e2 && "object" == typeof e2 && !Array.isArray(e2) && "[object Object]" !== Object.prototype.toString.call(e2);
        }, y.prototype.end = function(e2) {
          return this._endCalled && console.warn("Warning: .end() was called twice. This is not supported in superagent"), this._endCalled = true, this._callback = e2 || c, this._finalizeQueryString(), this._end();
        }, y.prototype._end = function() {
          var e2 = this, t2 = this.xhr = l.getXHR(), n2 = this._formData || this._data;
          this._setTimeouts(), t2.onreadystatechange = function() {
            var n3 = t2.readyState;
            if (n3 >= 2 && e2._responseTimeoutTimer && clearTimeout(e2._responseTimeoutTimer), 4 == n3) {
              var r3;
              try {
                r3 = t2.status;
              } catch (e3) {
                r3 = 0;
              }
              if (!r3) {
                if (e2.timedout || e2._aborted)
                  return;
                return e2.crossDomainError();
              }
              e2.emit("end");
            }
          };
          var r2 = function(t3, n3) {
            n3.total > 0 && (n3.percent = n3.loaded / n3.total * 100), n3.direction = t3, e2.emit("progress", n3);
          };
          if (this.hasListeners("progress"))
            try {
              t2.onprogress = r2.bind(null, "download"), t2.upload && (t2.upload.onprogress = r2.bind(null, "upload"));
            } catch (e3) {
            }
          try {
            this.username && this.password ? t2.open(this.method, this.url, true, this.username, this.password) : t2.open(this.method, this.url, true);
          } catch (e3) {
            return this.callback(e3);
          }
          if (this._withCredentials && (t2.withCredentials = true), !this._formData && "GET" != this.method && "HEAD" != this.method && "string" != typeof n2 && !this._isHost(n2)) {
            var i2 = this._header["content-type"], o2 = this._serializer || l.serialize[i2 ? i2.split(";")[0] : ""];
            !o2 && v(i2) && (o2 = l.serialize["application/json"]), o2 && (n2 = o2(n2));
          }
          for (var a2 in this.header)
            null != this.header[a2] && this.header.hasOwnProperty(a2) && t2.setRequestHeader(a2, this.header[a2]);
          return this._responseType && (t2.responseType = this._responseType), this.emit("request", this), t2.send(void 0 !== n2 ? n2 : null), this;
        }, l.agent = function() {
          return new u();
        }, ["GET", "POST", "OPTIONS", "PATCH", "PUT", "DELETE"].forEach(function(e2) {
          u.prototype[e2.toLowerCase()] = function(t2, n2) {
            var r2 = new l.Request(e2, t2);
            return this._setDefaults(r2), n2 && r2.end(n2), r2;
          };
        }), u.prototype.del = u.prototype.delete, l.get = function(e2, t2, n2) {
          var r2 = l("GET", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.query(t2), n2 && r2.end(n2), r2;
        }, l.head = function(e2, t2, n2) {
          var r2 = l("HEAD", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.query(t2), n2 && r2.end(n2), r2;
        }, l.options = function(e2, t2, n2) {
          var r2 = l("OPTIONS", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.send(t2), n2 && r2.end(n2), r2;
        }, l.del = b, l.delete = b, l.patch = function(e2, t2, n2) {
          var r2 = l("PATCH", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.send(t2), n2 && r2.end(n2), r2;
        }, l.post = function(e2, t2, n2) {
          var r2 = l("POST", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.send(t2), n2 && r2.end(n2), r2;
        }, l.put = function(e2, t2, n2) {
          var r2 = l("PUT", e2);
          return "function" == typeof t2 && (n2 = t2, t2 = null), t2 && r2.send(t2), n2 && r2.end(n2), r2;
        };
      }, function(e, t, n) {
        function r(e2) {
          if (e2)
            return function(e3) {
              for (var t2 in r.prototype)
                e3[t2] = r.prototype[t2];
              return e3;
            }(e2);
        }
        e.exports = r, r.prototype.on = r.prototype.addEventListener = function(e2, t2) {
          return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e2] = this._callbacks["$" + e2] || []).push(t2), this;
        }, r.prototype.once = function(e2, t2) {
          function n2() {
            this.off(e2, n2), t2.apply(this, arguments);
          }
          return n2.fn = t2, this.on(e2, n2), this;
        }, r.prototype.off = r.prototype.removeListener = r.prototype.removeAllListeners = r.prototype.removeEventListener = function(e2, t2) {
          if (this._callbacks = this._callbacks || {}, 0 == arguments.length)
            return this._callbacks = {}, this;
          var n2, r2 = this._callbacks["$" + e2];
          if (!r2)
            return this;
          if (1 == arguments.length)
            return delete this._callbacks["$" + e2], this;
          for (var i = 0; i < r2.length; i++)
            if ((n2 = r2[i]) === t2 || n2.fn === t2) {
              r2.splice(i, 1);
              break;
            }
          return 0 === r2.length && delete this._callbacks["$" + e2], this;
        }, r.prototype.emit = function(e2) {
          this._callbacks = this._callbacks || {};
          for (var t2 = new Array(arguments.length - 1), n2 = this._callbacks["$" + e2], r2 = 1; r2 < arguments.length; r2++)
            t2[r2 - 1] = arguments[r2];
          if (n2) {
            r2 = 0;
            for (var i = (n2 = n2.slice(0)).length; r2 < i; ++r2)
              n2[r2].apply(this, t2);
          }
          return this;
        }, r.prototype.listeners = function(e2) {
          return this._callbacks = this._callbacks || {}, this._callbacks["$" + e2] || [];
        }, r.prototype.hasListeners = function(e2) {
          return !!this.listeners(e2).length;
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(26);
        function i(e2) {
          if (e2)
            return function(e3) {
              for (var t2 in i.prototype)
                e3[t2] = i.prototype[t2];
              return e3;
            }(e2);
        }
        e.exports = i, i.prototype.clearTimeout = function() {
          return clearTimeout(this._timer), clearTimeout(this._responseTimeoutTimer), delete this._timer, delete this._responseTimeoutTimer, this;
        }, i.prototype.parse = function(e2) {
          return this._parser = e2, this;
        }, i.prototype.responseType = function(e2) {
          return this._responseType = e2, this;
        }, i.prototype.serialize = function(e2) {
          return this._serializer = e2, this;
        }, i.prototype.timeout = function(e2) {
          if (!e2 || "object" != typeof e2)
            return this._timeout = e2, this._responseTimeout = 0, this;
          for (var t2 in e2)
            switch (t2) {
              case "deadline":
                this._timeout = e2.deadline;
                break;
              case "response":
                this._responseTimeout = e2.response;
                break;
              default:
                console.warn("Unknown timeout option", t2);
            }
          return this;
        }, i.prototype.retry = function(e2, t2) {
          return 0 !== arguments.length && true !== e2 || (e2 = 1), e2 <= 0 && (e2 = 0), this._maxRetries = e2, this._retries = 0, this._retryCallback = t2, this;
        };
        var o = ["ECONNRESET", "ETIMEDOUT", "EADDRINFO", "ESOCKETTIMEDOUT"];
        i.prototype._shouldRetry = function(e2, t2) {
          if (!this._maxRetries || this._retries++ >= this._maxRetries)
            return false;
          if (this._retryCallback)
            try {
              var n2 = this._retryCallback(e2, t2);
              if (true === n2)
                return true;
              if (false === n2)
                return false;
            } catch (e3) {
              console.error(e3);
            }
          if (t2 && t2.status && t2.status >= 500 && 501 != t2.status)
            return true;
          if (e2) {
            if (e2.code && ~o.indexOf(e2.code))
              return true;
            if (e2.timeout && "ECONNABORTED" == e2.code)
              return true;
            if (e2.crossDomain)
              return true;
          }
          return false;
        }, i.prototype._retry = function() {
          return this.clearTimeout(), this.req && (this.req = null, this.req = this.request()), this._aborted = false, this.timedout = false, this._end();
        }, i.prototype.then = function(e2, t2) {
          if (!this._fullfilledPromise) {
            var n2 = this;
            this._endCalled && console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"), this._fullfilledPromise = new Promise(function(e3, t3) {
              n2.end(function(n3, r2) {
                n3 ? t3(n3) : e3(r2);
              });
            });
          }
          return this._fullfilledPromise.then(e2, t2);
        }, i.prototype.catch = function(e2) {
          return this.then(void 0, e2);
        }, i.prototype.use = function(e2) {
          return e2(this), this;
        }, i.prototype.ok = function(e2) {
          if ("function" != typeof e2)
            throw Error("Callback required");
          return this._okCallback = e2, this;
        }, i.prototype._isResponseOK = function(e2) {
          return !!e2 && (this._okCallback ? this._okCallback(e2) : e2.status >= 200 && e2.status < 300);
        }, i.prototype.get = function(e2) {
          return this._header[e2.toLowerCase()];
        }, i.prototype.getHeader = i.prototype.get, i.prototype.set = function(e2, t2) {
          if (r(e2)) {
            for (var n2 in e2)
              this.set(n2, e2[n2]);
            return this;
          }
          return this._header[e2.toLowerCase()] = t2, this.header[e2] = t2, this;
        }, i.prototype.unset = function(e2) {
          return delete this._header[e2.toLowerCase()], delete this.header[e2], this;
        }, i.prototype.field = function(e2, t2) {
          if (null == e2)
            throw new Error(".field(name, val) name can not be empty");
          if (this._data && console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"), r(e2)) {
            for (var n2 in e2)
              this.field(n2, e2[n2]);
            return this;
          }
          if (Array.isArray(t2)) {
            for (var i2 in t2)
              this.field(e2, t2[i2]);
            return this;
          }
          if (null == t2)
            throw new Error(".field(name, val) val can not be empty");
          return "boolean" == typeof t2 && (t2 = "" + t2), this._getFormData().append(e2, t2), this;
        }, i.prototype.abort = function() {
          return this._aborted || (this._aborted = true, this.xhr && this.xhr.abort(), this.req && this.req.abort(), this.clearTimeout(), this.emit("abort")), this;
        }, i.prototype._auth = function(e2, t2, n2, r2) {
          switch (n2.type) {
            case "basic":
              this.set("Authorization", "Basic " + r2(e2 + ":" + t2));
              break;
            case "auto":
              this.username = e2, this.password = t2;
              break;
            case "bearer":
              this.set("Authorization", "Bearer " + e2);
          }
          return this;
        }, i.prototype.withCredentials = function(e2) {
          return null == e2 && (e2 = true), this._withCredentials = e2, this;
        }, i.prototype.redirects = function(e2) {
          return this._maxRedirects = e2, this;
        }, i.prototype.maxResponseSize = function(e2) {
          if ("number" != typeof e2)
            throw TypeError("Invalid argument");
          return this._maxResponseSize = e2, this;
        }, i.prototype.toJSON = function() {
          return { method: this.method, url: this.url, data: this._data, headers: this._header };
        }, i.prototype.send = function(e2) {
          var t2 = r(e2), n2 = this._header["content-type"];
          if (this._formData && console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"), t2 && !this._data)
            Array.isArray(e2) ? this._data = [] : this._isHost(e2) || (this._data = {});
          else if (e2 && this._data && this._isHost(this._data))
            throw Error("Can't merge these send calls");
          if (t2 && r(this._data))
            for (var i2 in e2)
              this._data[i2] = e2[i2];
          else
            "string" == typeof e2 ? (n2 || this.type("form"), n2 = this._header["content-type"], this._data = "application/x-www-form-urlencoded" == n2 ? this._data ? this._data + "&" + e2 : e2 : (this._data || "") + e2) : this._data = e2;
          return !t2 || this._isHost(e2) || n2 || this.type("json"), this;
        }, i.prototype.sortQuery = function(e2) {
          return this._sort = void 0 === e2 || e2, this;
        }, i.prototype._finalizeQueryString = function() {
          var e2 = this._query.join("&");
          if (e2 && (this.url += (this.url.indexOf("?") >= 0 ? "&" : "?") + e2), this._query.length = 0, this._sort) {
            var t2 = this.url.indexOf("?");
            if (t2 >= 0) {
              var n2 = this.url.substring(t2 + 1).split("&");
              "function" == typeof this._sort ? n2.sort(this._sort) : n2.sort(), this.url = this.url.substring(0, t2) + "?" + n2.join("&");
            }
          }
        }, i.prototype._appendQueryString = function() {
          console.trace("Unsupported");
        }, i.prototype._timeoutError = function(e2, t2, n2) {
          if (!this._aborted) {
            var r2 = new Error(e2 + t2 + "ms exceeded");
            r2.timeout = t2, r2.code = "ECONNABORTED", r2.errno = n2, this.timedout = true, this.abort(), this.callback(r2);
          }
        }, i.prototype._setTimeouts = function() {
          var e2 = this;
          this._timeout && !this._timer && (this._timer = setTimeout(function() {
            e2._timeoutError("Timeout of ", e2._timeout, "ETIME");
          }, this._timeout)), this._responseTimeout && !this._responseTimeoutTimer && (this._responseTimeoutTimer = setTimeout(function() {
            e2._timeoutError("Response timeout of ", e2._responseTimeout, "ETIMEDOUT");
          }, this._responseTimeout));
        };
      }, function(e, t, n) {
        "use strict";
        var r = n(129);
        function i(e2) {
          if (e2)
            return function(e3) {
              for (var t2 in i.prototype)
                e3[t2] = i.prototype[t2];
              return e3;
            }(e2);
        }
        e.exports = i, i.prototype.get = function(e2) {
          return this.header[e2.toLowerCase()];
        }, i.prototype._setHeaderProperties = function(e2) {
          var t2 = e2["content-type"] || "";
          this.type = r.type(t2);
          var n2 = r.params(t2);
          for (var i2 in n2)
            this[i2] = n2[i2];
          this.links = {};
          try {
            e2.link && (this.links = r.parseLinks(e2.link));
          } catch (e3) {
          }
        }, i.prototype._setStatusProperties = function(e2) {
          var t2 = e2 / 100 | 0;
          this.status = this.statusCode = e2, this.statusType = t2, this.info = 1 == t2, this.ok = 2 == t2, this.redirect = 3 == t2, this.clientError = 4 == t2, this.serverError = 5 == t2, this.error = (4 == t2 || 5 == t2) && this.toError(), this.created = 201 == e2, this.accepted = 202 == e2, this.noContent = 204 == e2, this.badRequest = 400 == e2, this.unauthorized = 401 == e2, this.notAcceptable = 406 == e2, this.forbidden = 403 == e2, this.notFound = 404 == e2, this.unprocessableEntity = 422 == e2;
        };
      }, function(e, t, n) {
        "use strict";
        t.type = function(e2) {
          return e2.split(/ *; */).shift();
        }, t.params = function(e2) {
          return e2.split(/ *; */).reduce(function(e3, t2) {
            var n2 = t2.split(/ *= */), r = n2.shift(), i = n2.shift();
            return r && i && (e3[r] = i), e3;
          }, {});
        }, t.parseLinks = function(e2) {
          return e2.split(/ *, */).reduce(function(e3, t2) {
            var n2 = t2.split(/ *; */), r = n2[0].slice(1, -1);
            return e3[n2[1].split(/ *= */)[1].slice(1, -1)] = r, e3;
          }, {});
        }, t.cleanHeader = function(e2, t2) {
          return delete e2["content-type"], delete e2["content-length"], delete e2["transfer-encoding"], delete e2.host, t2 && (delete e2.authorization, delete e2.cookie), e2;
        };
      }, function(e, t) {
        function n() {
          this._defaults = [];
        }
        ["use", "on", "once", "set", "query", "type", "accept", "auth", "withCredentials", "sortQuery", "retry", "ok", "redirects", "timeout", "buffer", "serialize", "parse", "ca", "key", "pfx", "cert"].forEach(function(e2) {
          n.prototype[e2] = function() {
            return this._defaults.push({ fn: e2, arguments }), this;
          };
        }), n.prototype._setDefaults = function(e2) {
          this._defaults.forEach(function(t2) {
            e2[t2.fn].apply(e2, t2.arguments);
          });
        }, e.exports = n;
      }, function(e, t, n) {
        "use strict";
        (function(r) {
          var i = n(0);
          Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
          var o = i(n(11)), a = i(n(12)), s = i(n(5)), u = i(n(6)), c = i(n(4)), l = i(n(133));
          function f2(e2, t2) {
            var n2 = new Uint8Array(e2.byteLength + t2.byteLength);
            return n2.set(new Uint8Array(e2), 0), n2.set(new Uint8Array(t2), e2.byteLength), n2.buffer;
          }
          var d = function() {
            function e2() {
              (0, s.default)(this, e2);
            }
            var t2, n2, i2, c2, d2, p, h, v, g;
            return (0, u.default)(e2, [{ key: "encrypt", value: (g = (0, a.default)(o.default.mark(function e3(t3, n3) {
              var r2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return e4.next = 2, this.getKey(t3);
                    case 2:
                      if (r2 = e4.sent, !(n3 instanceof ArrayBuffer)) {
                        e4.next = 7;
                        break;
                      }
                      return e4.abrupt("return", this.encryptArrayBuffer(r2, n3));
                    case 7:
                      if ("string" != typeof n3) {
                        e4.next = 11;
                        break;
                      }
                      return e4.abrupt("return", this.encryptString(r2, n3));
                    case 11:
                      throw new Error("Cannot encrypt this file. In browsers file encryption supports only string or ArrayBuffer");
                    case 12:
                    case "end":
                      return e4.stop();
                  }
              }, e3, this);
            })), function(e3, t3) {
              return g.apply(this, arguments);
            }) }, { key: "decrypt", value: (v = (0, a.default)(o.default.mark(function e3(t3, n3) {
              var r2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return e4.next = 2, this.getKey(t3);
                    case 2:
                      if (r2 = e4.sent, !(n3 instanceof ArrayBuffer)) {
                        e4.next = 7;
                        break;
                      }
                      return e4.abrupt("return", this.decryptArrayBuffer(r2, n3));
                    case 7:
                      if ("string" != typeof n3) {
                        e4.next = 11;
                        break;
                      }
                      return e4.abrupt("return", this.decryptString(r2, n3));
                    case 11:
                      throw new Error("Cannot decrypt this file. In browsers file decryption supports only string or ArrayBuffer");
                    case 12:
                    case "end":
                      return e4.stop();
                  }
              }, e3, this);
            })), function(e3, t3) {
              return v.apply(this, arguments);
            }) }, { key: "encryptFile", value: (h = (0, a.default)(o.default.mark(function e3(t3, n3, r2) {
              var i3, a2, s2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return e4.next = 2, this.getKey(t3);
                    case 2:
                      return i3 = e4.sent, e4.next = 5, n3.toArrayBuffer();
                    case 5:
                      return a2 = e4.sent, e4.next = 8, this.encryptArrayBuffer(i3, a2);
                    case 8:
                      return s2 = e4.sent, e4.abrupt("return", r2.create({ name: n3.name, mimeType: "application/octet-stream", data: s2 }));
                    case 10:
                    case "end":
                      return e4.stop();
                  }
              }, e3, this);
            })), function(e3, t3, n3) {
              return h.apply(this, arguments);
            }) }, { key: "decryptFile", value: (p = (0, a.default)(o.default.mark(function e3(t3, n3, r2) {
              var i3, a2, s2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return e4.next = 2, this.getKey(t3);
                    case 2:
                      return i3 = e4.sent, e4.next = 5, n3.toArrayBuffer();
                    case 5:
                      return a2 = e4.sent, e4.next = 8, this.decryptArrayBuffer(i3, a2);
                    case 8:
                      return s2 = e4.sent, e4.abrupt("return", r2.create({ name: n3.name, data: s2 }));
                    case 10:
                    case "end":
                      return e4.stop();
                  }
              }, e3, this);
            })), function(e3, t3, n3) {
              return p.apply(this, arguments);
            }) }, { key: "getKey", value: (d2 = (0, a.default)(o.default.mark(function e3(t3) {
              var n3, i3, a2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return n3 = r.from(t3), e4.next = 3, l.default.subtle.digest("SHA-256", n3.buffer);
                    case 3:
                      return i3 = e4.sent, a2 = r.from(r.from(i3).toString("hex").slice(0, 32), "utf8").buffer, e4.abrupt("return", l.default.subtle.importKey("raw", a2, "AES-CBC", true, ["encrypt", "decrypt"]));
                    case 6:
                    case "end":
                      return e4.stop();
                  }
              }, e3);
            })), function(e3) {
              return d2.apply(this, arguments);
            }) }, { key: "encryptArrayBuffer", value: (c2 = (0, a.default)(o.default.mark(function e3(t3, n3) {
              var r2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return r2 = l.default.getRandomValues(new Uint8Array(16)), e4.t0 = f2, e4.t1 = r2.buffer, e4.next = 5, l.default.subtle.encrypt({ name: "AES-CBC", iv: r2 }, t3, n3);
                    case 5:
                      return e4.t2 = e4.sent, e4.abrupt("return", (0, e4.t0)(e4.t1, e4.t2));
                    case 7:
                    case "end":
                      return e4.stop();
                  }
              }, e3);
            })), function(e3, t3) {
              return c2.apply(this, arguments);
            }) }, { key: "decryptArrayBuffer", value: (i2 = (0, a.default)(o.default.mark(function e3(t3, n3) {
              var r2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return r2 = n3.slice(0, 16), e4.abrupt("return", l.default.subtle.decrypt({ name: "AES-CBC", iv: r2 }, t3, n3.slice(16)));
                    case 2:
                    case "end":
                      return e4.stop();
                  }
              }, e3);
            })), function(e3, t3) {
              return i2.apply(this, arguments);
            }) }, { key: "encryptString", value: (n2 = (0, a.default)(o.default.mark(function e3(t3, n3) {
              var i3, a2, s2, u2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return i3 = l.default.getRandomValues(new Uint8Array(16)), a2 = r.from(n3).buffer, e4.next = 4, l.default.subtle.encrypt({ name: "AES-CBC", iv: i3 }, t3, a2);
                    case 4:
                      return s2 = e4.sent, u2 = f2(i3.buffer, s2), e4.abrupt("return", r.from(u2).toString("utf8"));
                    case 7:
                    case "end":
                      return e4.stop();
                  }
              }, e3);
            })), function(e3, t3) {
              return n2.apply(this, arguments);
            }) }, { key: "decryptString", value: (t2 = (0, a.default)(o.default.mark(function e3(t3, n3) {
              var i3, a2, s2, u2;
              return o.default.wrap(function(e4) {
                for (; ; )
                  switch (e4.prev = e4.next) {
                    case 0:
                      return i3 = r.from(n3), a2 = i3.slice(0, 16), s2 = i3.slice(16), e4.next = 5, l.default.subtle.decrypt({ name: "AES-CBC", iv: a2 }, t3, s2);
                    case 5:
                      return u2 = e4.sent, e4.abrupt("return", r.from(u2).toString("utf8"));
                    case 7:
                    case "end":
                      return e4.stop();
                  }
              }, e3);
            })), function(e3, n3) {
              return t2.apply(this, arguments);
            }) }, { key: "algo", get: function() {
              return "aes-256-cbc";
            } }]), e2;
          }();
          t.default = d, (0, c.default)(d, "IV_LENGTH", 16), e.exports = t.default;
        }).call(this, n(21).Buffer);
      }, function(e, t, n) {
        "use strict";
        var r = n(0);
        Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
        var i, o, a = r(n(11)), s = r(n(12)), u = r(n(5)), c = r(n(6)), l = r(n(4)), f2 = (n(25), o = i = function() {
          function e2(t3) {
            if ((0, u.default)(this, e2), (0, l.default)(this, "data", void 0), (0, l.default)(this, "name", void 0), (0, l.default)(this, "mimeType", void 0), t3 instanceof File)
              this.data = t3, this.name = this.data.name, this.mimeType = this.data.type;
            else if (t3.data) {
              var n3 = t3.data;
              this.data = new File([n3], t3.name, { type: t3.mimeType }), this.name = t3.name, t3.mimeType && (this.mimeType = t3.mimeType);
            }
            if (void 0 === this.data)
              throw new Error("Couldn't construct a file out of supplied options.");
            if (void 0 === this.name)
              throw new Error("Couldn't guess filename out of the options. Please provide one.");
          }
          var t2, n2, r2, i2, o2, f3, d;
          return (0, c.default)(e2, null, [{ key: "create", value: function(e3) {
            return new this(e3);
          } }]), (0, c.default)(e2, [{ key: "toBuffer", value: (d = (0, s.default)(a.default.mark(function e3() {
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    throw new Error("This feature is only supported in Node.js environments.");
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3);
          })), function() {
            return d.apply(this, arguments);
          }) }, { key: "toStream", value: (f3 = (0, s.default)(a.default.mark(function e3() {
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    throw new Error("This feature is only supported in Node.js environments.");
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3);
          })), function() {
            return f3.apply(this, arguments);
          }) }, { key: "toFileUri", value: (o2 = (0, s.default)(a.default.mark(function e3() {
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    throw new Error("This feature is only supported in react native environments.");
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3);
          })), function() {
            return o2.apply(this, arguments);
          }) }, { key: "toBlob", value: (i2 = (0, s.default)(a.default.mark(function e3() {
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    return e4.abrupt("return", this.data);
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3, this);
          })), function() {
            return i2.apply(this, arguments);
          }) }, { key: "toArrayBuffer", value: (r2 = (0, s.default)(a.default.mark(function e3() {
            var t3 = this;
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    return e4.abrupt("return", new Promise(function(e5, n3) {
                      var r3 = new FileReader();
                      r3.addEventListener("load", function() {
                        if (r3.result instanceof ArrayBuffer)
                          return e5(r3.result);
                      }), r3.addEventListener("error", function() {
                        n3(r3.error);
                      }), r3.readAsArrayBuffer(t3.data);
                    }));
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3);
          })), function() {
            return r2.apply(this, arguments);
          }) }, { key: "toString", value: (n2 = (0, s.default)(a.default.mark(function e3() {
            var t3 = this;
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    return e4.abrupt("return", new Promise(function(e5, n3) {
                      var r3 = new FileReader();
                      r3.addEventListener("load", function() {
                        if ("string" == typeof r3.result)
                          return e5(r3.result);
                      }), r3.addEventListener("error", function() {
                        n3(r3.error);
                      }), r3.readAsBinaryString(t3.data);
                    }));
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3);
          })), function() {
            return n2.apply(this, arguments);
          }) }, { key: "toFile", value: (t2 = (0, s.default)(a.default.mark(function e3() {
            return a.default.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    return e4.abrupt("return", this.data);
                  case 1:
                  case "end":
                    return e4.stop();
                }
            }, e3, this);
          })), function() {
            return t2.apply(this, arguments);
          }) }]), e2;
        }(), (0, l.default)(i, "supportsFile", "undefined" != typeof File), (0, l.default)(i, "supportsBlob", "undefined" != typeof Blob), (0, l.default)(i, "supportsArrayBuffer", "undefined" != typeof ArrayBuffer), (0, l.default)(i, "supportsBuffer", false), (0, l.default)(i, "supportsStream", false), (0, l.default)(i, "supportsString", true), (0, l.default)(i, "supportsEncryptFile", true), (0, l.default)(i, "supportsFileUri", false), o);
        t.default = f2, e.exports = t.default;
      }, function(e, t, n) {
        "use strict";
        n.r(t), /**
         * @file Web Cryptography API shim
         * @author Artem S Vybornov <vybornov@gmail.com>
         * @license MIT
         */
        function(e2, t2) {
          "function" == typeof define && define.amd ? define([], function() {
            return t2(e2);
          }) : "object" == typeof module && module.exports ? module.exports = t2(e2) : t2(e2);
        }("undefined" != typeof self ? self : void 0, function(e2) {
          if ("function" != typeof Promise)
            throw "Promise support required";
          var t2 = e2.crypto || e2.msCrypto;
          if (t2) {
            var n2 = t2.subtle || t2.webkitSubtle;
            if (n2) {
              var r = e2.Crypto || t2.constructor || Object, i = e2.SubtleCrypto || n2.constructor || Object, o = (e2.CryptoKey || e2.Key, e2.navigator.userAgent.indexOf("Edge/") > -1), a = !!e2.msCrypto && !o, s = !t2.subtle && !!t2.webkitSubtle;
              if (a || s) {
                var u = { KoZIhvcNAQEB: "1.2.840.113549.1.1.1" }, c = { "1.2.840.113549.1.1.1": "KoZIhvcNAQEB" };
                if (["generateKey", "importKey", "unwrapKey"].forEach(function(e3) {
                  var r2 = n2[e3];
                  n2[e3] = function(i2, o2, u2) {
                    var c2, l2, f3, h2, _2 = [].slice.call(arguments);
                    switch (e3) {
                      case "generateKey":
                        c2 = v(i2), l2 = o2, f3 = u2;
                        break;
                      case "importKey":
                        c2 = v(u2), l2 = _2[3], f3 = _2[4], "jwk" === i2 && ((o2 = y(o2)).alg || (o2.alg = g(c2)), o2.key_ops || (o2.key_ops = "oct" !== o2.kty ? "d" in o2 ? f3.filter(S) : f3.filter(k) : f3.slice()), _2[1] = b(o2));
                        break;
                      case "unwrapKey":
                        c2 = _2[4], l2 = _2[5], f3 = _2[6], _2[2] = u2._key;
                    }
                    if ("generateKey" === e3 && "HMAC" === c2.name && c2.hash)
                      return c2.length = c2.length || { "SHA-1": 512, "SHA-256": 512, "SHA-384": 1024, "SHA-512": 1024 }[c2.hash.name], n2.importKey("raw", t2.getRandomValues(new Uint8Array(c2.length + 7 >> 3)), c2, l2, f3);
                    if (s && "generateKey" === e3 && "RSASSA-PKCS1-v1_5" === c2.name && (!c2.modulusLength || c2.modulusLength >= 2048))
                      return (i2 = v(i2)).name = "RSAES-PKCS1-v1_5", delete i2.hash, n2.generateKey(i2, true, ["encrypt", "decrypt"]).then(function(e4) {
                        return Promise.all([n2.exportKey("jwk", e4.publicKey), n2.exportKey("jwk", e4.privateKey)]);
                      }).then(function(e4) {
                        return e4[0].alg = e4[1].alg = g(c2), e4[0].key_ops = f3.filter(k), e4[1].key_ops = f3.filter(S), Promise.all([n2.importKey("jwk", e4[0], c2, true, e4[0].key_ops), n2.importKey("jwk", e4[1], c2, l2, e4[1].key_ops)]);
                      }).then(function(e4) {
                        return { publicKey: e4[0], privateKey: e4[1] };
                      });
                    if ((s || a && "SHA-1" === (c2.hash || {}).name) && "importKey" === e3 && "jwk" === i2 && "HMAC" === c2.name && "oct" === o2.kty)
                      return n2.importKey("raw", p(d(o2.k)), u2, _2[3], _2[4]);
                    if (s && "importKey" === e3 && ("spki" === i2 || "pkcs8" === i2))
                      return n2.importKey("jwk", m(o2), u2, _2[3], _2[4]);
                    if (a && "unwrapKey" === e3)
                      return n2.decrypt(_2[3], u2, o2).then(function(e4) {
                        return n2.importKey(i2, e4, _2[4], _2[5], _2[6]);
                      });
                    try {
                      h2 = r2.apply(n2, _2);
                    } catch (e4) {
                      return Promise.reject(e4);
                    }
                    return a && (h2 = new Promise(function(e4, t3) {
                      h2.onabort = h2.onerror = function(e5) {
                        t3(e5);
                      }, h2.oncomplete = function(t4) {
                        e4(t4.target.result);
                      };
                    })), h2 = h2.then(function(e4) {
                      return "HMAC" === c2.name && (c2.length || (c2.length = 8 * e4.algorithm.length)), 0 == c2.name.search("RSA") && (c2.modulusLength || (c2.modulusLength = (e4.publicKey || e4).algorithm.modulusLength), c2.publicExponent || (c2.publicExponent = (e4.publicKey || e4).algorithm.publicExponent)), e4 = e4.publicKey && e4.privateKey ? { publicKey: new O(e4.publicKey, c2, l2, f3.filter(k)), privateKey: new O(e4.privateKey, c2, l2, f3.filter(S)) } : new O(e4, c2, l2, f3);
                    });
                  };
                }), ["exportKey", "wrapKey"].forEach(function(e3) {
                  var t3 = n2[e3];
                  n2[e3] = function(r2, i2, o2) {
                    var u2, c2 = [].slice.call(arguments);
                    switch (e3) {
                      case "exportKey":
                        c2[1] = i2._key;
                        break;
                      case "wrapKey":
                        c2[1] = i2._key, c2[2] = o2._key;
                    }
                    if ((s || a && "SHA-1" === (i2.algorithm.hash || {}).name) && "exportKey" === e3 && "jwk" === r2 && "HMAC" === i2.algorithm.name && (c2[0] = "raw"), !s || "exportKey" !== e3 || "spki" !== r2 && "pkcs8" !== r2 || (c2[0] = "jwk"), a && "wrapKey" === e3)
                      return n2.exportKey(r2, i2).then(function(e4) {
                        return "jwk" === r2 && (e4 = p(unescape(encodeURIComponent(JSON.stringify(y(e4)))))), n2.encrypt(c2[3], o2, e4);
                      });
                    try {
                      u2 = t3.apply(n2, c2);
                    } catch (e4) {
                      return Promise.reject(e4);
                    }
                    return a && (u2 = new Promise(function(e4, t4) {
                      u2.onabort = u2.onerror = function(e5) {
                        t4(e5);
                      }, u2.oncomplete = function(t5) {
                        e4(t5.target.result);
                      };
                    })), "exportKey" === e3 && "jwk" === r2 && (u2 = u2.then(function(e4) {
                      return (s || a && "SHA-1" === (i2.algorithm.hash || {}).name) && "HMAC" === i2.algorithm.name ? { kty: "oct", alg: g(i2.algorithm), key_ops: i2.usages.slice(), ext: true, k: f2(h(e4)) } : ((e4 = y(e4)).alg || (e4.alg = g(i2.algorithm)), e4.key_ops || (e4.key_ops = "public" === i2.type ? i2.usages.filter(k) : "private" === i2.type ? i2.usages.filter(S) : i2.usages.slice()), e4);
                    })), !s || "exportKey" !== e3 || "spki" !== r2 && "pkcs8" !== r2 || (u2 = u2.then(function(e4) {
                      return e4 = _(y(e4));
                    })), u2;
                  };
                }), ["encrypt", "decrypt", "sign", "verify"].forEach(function(e3) {
                  var t3 = n2[e3];
                  n2[e3] = function(r2, i2, o2, s2) {
                    if (a && (!o2.byteLength || s2 && !s2.byteLength))
                      throw new Error("Empy input is not allowed");
                    var u2, c2 = [].slice.call(arguments), l2 = v(r2);
                    if (a && "decrypt" === e3 && "AES-GCM" === l2.name) {
                      var f3 = r2.tagLength >> 3;
                      c2[2] = (o2.buffer || o2).slice(0, o2.byteLength - f3), r2.tag = (o2.buffer || o2).slice(o2.byteLength - f3);
                    }
                    c2[1] = i2._key;
                    try {
                      u2 = t3.apply(n2, c2);
                    } catch (e4) {
                      return Promise.reject(e4);
                    }
                    return a && (u2 = new Promise(function(t4, n3) {
                      u2.onabort = u2.onerror = function(e4) {
                        n3(e4);
                      }, u2.oncomplete = function(n4) {
                        n4 = n4.target.result;
                        if ("encrypt" === e3 && n4 instanceof AesGcmEncryptResult) {
                          var r3 = n4.ciphertext, i3 = n4.tag;
                          (n4 = new Uint8Array(r3.byteLength + i3.byteLength)).set(new Uint8Array(r3), 0), n4.set(new Uint8Array(i3), r3.byteLength), n4 = n4.buffer;
                        }
                        t4(n4);
                      };
                    })), u2;
                  };
                }), a) {
                  var l = n2.digest;
                  n2.digest = function(e3, t3) {
                    if (!t3.byteLength)
                      throw new Error("Empy input is not allowed");
                    var r2;
                    try {
                      r2 = l.call(n2, e3, t3);
                    } catch (e4) {
                      return Promise.reject(e4);
                    }
                    return r2 = new Promise(function(e4, t4) {
                      r2.onabort = r2.onerror = function(e5) {
                        t4(e5);
                      }, r2.oncomplete = function(t5) {
                        e4(t5.target.result);
                      };
                    });
                  }, e2.crypto = Object.create(t2, { getRandomValues: { value: function(e3) {
                    return t2.getRandomValues(e3);
                  } }, subtle: { value: n2 } }), e2.CryptoKey = O;
                }
                s && (t2.subtle = n2, e2.Crypto = r, e2.SubtleCrypto = i, e2.CryptoKey = O);
              }
            }
          }
          function f2(e3) {
            return btoa(e3).replace(/\=+$/, "").replace(/\+/g, "-").replace(/\//g, "_");
          }
          function d(e3) {
            return e3 = (e3 += "===").slice(0, -e3.length % 4), atob(e3.replace(/-/g, "+").replace(/_/g, "/"));
          }
          function p(e3) {
            for (var t3 = new Uint8Array(e3.length), n3 = 0; n3 < e3.length; n3++)
              t3[n3] = e3.charCodeAt(n3);
            return t3;
          }
          function h(e3) {
            return e3 instanceof ArrayBuffer && (e3 = new Uint8Array(e3)), String.fromCharCode.apply(String, e3);
          }
          function v(e3) {
            var t3 = { name: (e3.name || e3 || "").toUpperCase().replace("V", "v") };
            switch (t3.name) {
              case "SHA-1":
              case "SHA-256":
              case "SHA-384":
              case "SHA-512":
                break;
              case "AES-CBC":
              case "AES-GCM":
              case "AES-KW":
                e3.length && (t3.length = e3.length);
                break;
              case "HMAC":
                e3.hash && (t3.hash = v(e3.hash)), e3.length && (t3.length = e3.length);
                break;
              case "RSAES-PKCS1-v1_5":
                e3.publicExponent && (t3.publicExponent = new Uint8Array(e3.publicExponent)), e3.modulusLength && (t3.modulusLength = e3.modulusLength);
                break;
              case "RSASSA-PKCS1-v1_5":
              case "RSA-OAEP":
                e3.hash && (t3.hash = v(e3.hash)), e3.publicExponent && (t3.publicExponent = new Uint8Array(e3.publicExponent)), e3.modulusLength && (t3.modulusLength = e3.modulusLength);
                break;
              default:
                throw new SyntaxError("Bad algorithm name");
            }
            return t3;
          }
          function g(e3) {
            return { HMAC: { "SHA-1": "HS1", "SHA-256": "HS256", "SHA-384": "HS384", "SHA-512": "HS512" }, "RSASSA-PKCS1-v1_5": { "SHA-1": "RS1", "SHA-256": "RS256", "SHA-384": "RS384", "SHA-512": "RS512" }, "RSAES-PKCS1-v1_5": { "": "RSA1_5" }, "RSA-OAEP": { "SHA-1": "RSA-OAEP", "SHA-256": "RSA-OAEP-256" }, "AES-KW": { 128: "A128KW", 192: "A192KW", 256: "A256KW" }, "AES-GCM": { 128: "A128GCM", 192: "A192GCM", 256: "A256GCM" }, "AES-CBC": { 128: "A128CBC", 192: "A192CBC", 256: "A256CBC" } }[e3.name][(e3.hash || {}).name || e3.length || ""];
          }
          function y(e3) {
            (e3 instanceof ArrayBuffer || e3 instanceof Uint8Array) && (e3 = JSON.parse(decodeURIComponent(escape(h(e3)))));
            var t3 = { kty: e3.kty, alg: e3.alg, ext: e3.ext || e3.extractable };
            switch (t3.kty) {
              case "oct":
                t3.k = e3.k;
              case "RSA":
                ["n", "e", "d", "p", "q", "dp", "dq", "qi", "oth"].forEach(function(n3) {
                  n3 in e3 && (t3[n3] = e3[n3]);
                });
                break;
              default:
                throw new TypeError("Unsupported key type");
            }
            return t3;
          }
          function b(e3) {
            var t3 = y(e3);
            return a && (t3.extractable = t3.ext, delete t3.ext), p(unescape(encodeURIComponent(JSON.stringify(t3)))).buffer;
          }
          function m(e3) {
            var t3 = P(e3), n3 = false;
            t3.length > 2 && (n3 = true, t3.shift());
            var r2 = { ext: true };
            switch (t3[0][0]) {
              case "1.2.840.113549.1.1.1":
                var i2 = ["n", "e", "d", "p", "q", "dp", "dq", "qi"], o2 = P(t3[1]);
                n3 && o2.shift();
                for (var a2 = 0; a2 < o2.length; a2++)
                  o2[a2][0] || (o2[a2] = o2[a2].subarray(1)), r2[i2[a2]] = f2(h(o2[a2]));
                r2.kty = "RSA";
                break;
              default:
                throw new TypeError("Unsupported key type");
            }
            return r2;
          }
          function _(e3) {
            var t3, n3 = [["", null]], r2 = false;
            switch (e3.kty) {
              case "RSA":
                for (var i2 = ["n", "e", "d", "p", "q", "dp", "dq", "qi"], o2 = [], a2 = 0; a2 < i2.length && i2[a2] in e3; a2++) {
                  var s2 = o2[a2] = p(d(e3[i2[a2]]));
                  128 & s2[0] && (o2[a2] = new Uint8Array(s2.length + 1), o2[a2].set(s2, 1));
                }
                o2.length > 2 && (r2 = true, o2.unshift(new Uint8Array([0]))), n3[0][0] = "1.2.840.113549.1.1.1", t3 = o2;
                break;
              default:
                throw new TypeError("Unsupported key type");
            }
            return n3.push(new Uint8Array(w(t3)).buffer), r2 ? n3.unshift(new Uint8Array([0])) : n3[1] = { tag: 3, value: n3[1] }, new Uint8Array(w(n3)).buffer;
          }
          function P(e3, t3) {
            if (e3 instanceof ArrayBuffer && (e3 = new Uint8Array(e3)), t3 || (t3 = { pos: 0, end: e3.length }), t3.end - t3.pos < 2 || t3.end > e3.length)
              throw new RangeError("Malformed DER");
            var n3, r2 = e3[t3.pos++], i2 = e3[t3.pos++];
            if (i2 >= 128) {
              if (i2 &= 127, t3.end - t3.pos < i2)
                throw new RangeError("Malformed DER");
              for (var o2 = 0; i2--; )
                o2 <<= 8, o2 |= e3[t3.pos++];
              i2 = o2;
            }
            if (t3.end - t3.pos < i2)
              throw new RangeError("Malformed DER");
            switch (r2) {
              case 2:
                n3 = e3.subarray(t3.pos, t3.pos += i2);
                break;
              case 3:
                if (e3[t3.pos++])
                  throw new Error("Unsupported bit string");
                i2--;
              case 4:
                n3 = new Uint8Array(e3.subarray(t3.pos, t3.pos += i2)).buffer;
                break;
              case 5:
                n3 = null;
                break;
              case 6:
                var a2 = btoa(h(e3.subarray(t3.pos, t3.pos += i2)));
                if (!(a2 in u))
                  throw new Error("Unsupported OBJECT ID " + a2);
                n3 = u[a2];
                break;
              case 48:
                n3 = [];
                for (var s2 = t3.pos + i2; t3.pos < s2; )
                  n3.push(P(e3, t3));
                break;
              default:
                throw new Error("Unsupported DER tag 0x" + r2.toString(16));
            }
            return n3;
          }
          function w(e3, t3) {
            t3 || (t3 = []);
            var n3 = 0, r2 = 0, i2 = t3.length + 2;
            if (t3.push(0, 0), e3 instanceof Uint8Array) {
              n3 = 2, r2 = e3.length;
              for (var o2 = 0; o2 < r2; o2++)
                t3.push(e3[o2]);
            } else if (e3 instanceof ArrayBuffer) {
              n3 = 4, r2 = e3.byteLength, e3 = new Uint8Array(e3);
              for (o2 = 0; o2 < r2; o2++)
                t3.push(e3[o2]);
            } else if (null === e3)
              n3 = 5, r2 = 0;
            else if ("string" == typeof e3 && e3 in c) {
              var a2 = p(atob(c[e3]));
              n3 = 6, r2 = a2.length;
              for (o2 = 0; o2 < r2; o2++)
                t3.push(a2[o2]);
            } else if (e3 instanceof Array) {
              for (o2 = 0; o2 < e3.length; o2++)
                w(e3[o2], t3);
              n3 = 48, r2 = t3.length - i2;
            } else {
              if (!("object" == typeof e3 && 3 === e3.tag && e3.value instanceof ArrayBuffer))
                throw new Error("Unsupported DER value " + e3);
              n3 = 3, r2 = (e3 = new Uint8Array(e3.value)).byteLength, t3.push(0);
              for (o2 = 0; o2 < r2; o2++)
                t3.push(e3[o2]);
              r2++;
            }
            if (r2 >= 128) {
              var s2 = r2;
              r2 = 4;
              for (t3.splice(i2, 0, s2 >> 24 & 255, s2 >> 16 & 255, s2 >> 8 & 255, 255 & s2); r2 > 1 && !(s2 >> 24); )
                s2 <<= 8, r2--;
              r2 < 4 && t3.splice(i2, 4 - r2), r2 |= 128;
            }
            return t3.splice(i2 - 2, 2, n3, r2), t3;
          }
          function O(e3, t3, n3, r2) {
            Object.defineProperties(this, { _key: { value: e3 }, type: { value: e3.type, enumerable: true }, extractable: { value: void 0 === n3 ? e3.extractable : n3, enumerable: true }, algorithm: { value: void 0 === t3 ? e3.algorithm : t3, enumerable: true }, usages: { value: void 0 === r2 ? e3.usages : r2, enumerable: true } });
          }
          function k(e3) {
            return "verify" === e3 || "encrypt" === e3 || "wrapKey" === e3;
          }
          function S(e3) {
            return "sign" === e3 || "decrypt" === e3 || "unwrapKey" === e3;
          }
        });
        t.default = window.crypto;
      }]);
    });
  }
});

// node_modules/@leapdev/auth-agent/src/index.umd.js
var require_index_umd = __commonJS({
  "node_modules/@leapdev/auth-agent/src/index.umd.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require_lodash(), (init_esm_browser(), __toCommonJS(esm_browser_exports)), require_pubnub_min()) : typeof define === "function" && define.amd ? define(["exports", "lodash", "uuid", "pubnub"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.AuthAgent = {}, global2.lodash, global2.uuid, global2.Pubnub));
    })(exports, function(exports2, lodash, uuid, Pubnub) {
      "use strict";
      function _interopDefaultLegacy(e) {
        return e && typeof e === "object" && "default" in e ? e : { "default": e };
      }
      var Pubnub__default = _interopDefaultLegacy(Pubnub);
      function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }
      function __classPrivateFieldGet(receiver, state, kind, f2) {
        if (kind === "a" && !f2)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f2 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f2 : kind === "a" ? f2.call(receiver) : f2 ? f2.value : state.get(receiver);
      }
      function __classPrivateFieldSet(receiver, state, value, kind, f2) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f2)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f2 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f2.call(receiver, value) : f2 ? f2.value = value : state.set(receiver, value), value;
      }
      var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      var check = function(it) {
        return it && it.Math == Math && it;
      };
      var global$V = (
        // eslint-disable-next-line es-x/no-global-this -- safe
        check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
        check(typeof self == "object" && self) || check(typeof commonjsGlobal == "object" && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
        function() {
          return this;
        }() || Function("return this")()
      );
      var objectGetOwnPropertyDescriptor = {};
      var fails$q = function(exec2) {
        try {
          return !!exec2();
        } catch (error) {
          return true;
        }
      };
      var fails$p = fails$q;
      var descriptors = !fails$p(function() {
        return Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1] != 7;
      });
      var fails$o = fails$q;
      var functionBindNative = !fails$o(function() {
        var test2 = function() {
        }.bind();
        return typeof test2 != "function" || test2.hasOwnProperty("prototype");
      });
      var NATIVE_BIND$3 = functionBindNative;
      var call$n = Function.prototype.call;
      var functionCall = NATIVE_BIND$3 ? call$n.bind(call$n) : function() {
        return call$n.apply(call$n, arguments);
      };
      var objectPropertyIsEnumerable = {};
      var $propertyIsEnumerable = {}.propertyIsEnumerable;
      var getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;
      var NASHORN_BUG = getOwnPropertyDescriptor$5 && !$propertyIsEnumerable.call({ 1: 2 }, 1);
      objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
        var descriptor = getOwnPropertyDescriptor$5(this, V);
        return !!descriptor && descriptor.enumerable;
      } : $propertyIsEnumerable;
      var createPropertyDescriptor$6 = function(bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value
        };
      };
      var NATIVE_BIND$2 = functionBindNative;
      var FunctionPrototype$2 = Function.prototype;
      var bind$8 = FunctionPrototype$2.bind;
      var call$m = FunctionPrototype$2.call;
      var uncurryThis$r = NATIVE_BIND$2 && bind$8.bind(call$m, call$m);
      var functionUncurryThis = NATIVE_BIND$2 ? function(fn) {
        return fn && uncurryThis$r(fn);
      } : function(fn) {
        return fn && function() {
          return call$m.apply(fn, arguments);
        };
      };
      var uncurryThis$q = functionUncurryThis;
      var toString$9 = uncurryThis$q({}.toString);
      var stringSlice$7 = uncurryThis$q("".slice);
      var classofRaw$1 = function(it) {
        return stringSlice$7(toString$9(it), 8, -1);
      };
      var global$U = global$V;
      var uncurryThis$p = functionUncurryThis;
      var fails$n = fails$q;
      var classof$b = classofRaw$1;
      var Object$5 = global$U.Object;
      var split$1 = uncurryThis$p("".split);
      var indexedObject = fails$n(function() {
        return !Object$5("z").propertyIsEnumerable(0);
      }) ? function(it) {
        return classof$b(it) == "String" ? split$1(it, "") : Object$5(it);
      } : Object$5;
      var global$T = global$V;
      var TypeError$i = global$T.TypeError;
      var requireObjectCoercible$8 = function(it) {
        if (it == void 0)
          throw TypeError$i("Can't call method on " + it);
        return it;
      };
      var IndexedObject$2 = indexedObject;
      var requireObjectCoercible$7 = requireObjectCoercible$8;
      var toIndexedObject$6 = function(it) {
        return IndexedObject$2(requireObjectCoercible$7(it));
      };
      var isCallable$p = function(argument) {
        return typeof argument == "function";
      };
      var isCallable$o = isCallable$p;
      var isObject$e = function(it) {
        return typeof it == "object" ? it !== null : isCallable$o(it);
      };
      var global$S = global$V;
      var isCallable$n = isCallable$p;
      var aFunction = function(argument) {
        return isCallable$n(argument) ? argument : void 0;
      };
      var getBuiltIn$8 = function(namespace, method2) {
        return arguments.length < 2 ? aFunction(global$S[namespace]) : global$S[namespace] && global$S[namespace][method2];
      };
      var uncurryThis$o = functionUncurryThis;
      var objectIsPrototypeOf = uncurryThis$o({}.isPrototypeOf);
      var getBuiltIn$7 = getBuiltIn$8;
      var engineUserAgent = getBuiltIn$7("navigator", "userAgent") || "";
      var global$R = global$V;
      var userAgent$5 = engineUserAgent;
      var process$3 = global$R.process;
      var Deno$1 = global$R.Deno;
      var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;
      var v8 = versions && versions.v8;
      var match, version3;
      if (v8) {
        match = v8.split(".");
        version3 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
      }
      if (!version3 && userAgent$5) {
        match = userAgent$5.match(/Edge\/(\d+)/);
        if (!match || match[1] >= 74) {
          match = userAgent$5.match(/Chrome\/(\d+)/);
          if (match)
            version3 = +match[1];
        }
      }
      var engineV8Version = version3;
      var V8_VERSION$1 = engineV8Version;
      var fails$m = fails$q;
      var nativeSymbol = !!Object.getOwnPropertySymbols && !fails$m(function() {
        var symbol = Symbol();
        return !String(symbol) || !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
        !Symbol.sham && V8_VERSION$1 && V8_VERSION$1 < 41;
      });
      var NATIVE_SYMBOL$1 = nativeSymbol;
      var useSymbolAsUid = NATIVE_SYMBOL$1 && !Symbol.sham && typeof Symbol.iterator == "symbol";
      var global$Q = global$V;
      var getBuiltIn$6 = getBuiltIn$8;
      var isCallable$m = isCallable$p;
      var isPrototypeOf$4 = objectIsPrototypeOf;
      var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
      var Object$4 = global$Q.Object;
      var isSymbol$3 = USE_SYMBOL_AS_UID$1 ? function(it) {
        return typeof it == "symbol";
      } : function(it) {
        var $Symbol = getBuiltIn$6("Symbol");
        return isCallable$m($Symbol) && isPrototypeOf$4($Symbol.prototype, Object$4(it));
      };
      var global$P = global$V;
      var String$5 = global$P.String;
      var tryToString$5 = function(argument) {
        try {
          return String$5(argument);
        } catch (error) {
          return "Object";
        }
      };
      var global$O = global$V;
      var isCallable$l = isCallable$p;
      var tryToString$4 = tryToString$5;
      var TypeError$h = global$O.TypeError;
      var aCallable$8 = function(argument) {
        if (isCallable$l(argument))
          return argument;
        throw TypeError$h(tryToString$4(argument) + " is not a function");
      };
      var aCallable$7 = aCallable$8;
      var getMethod$6 = function(V, P) {
        var func = V[P];
        return func == null ? void 0 : aCallable$7(func);
      };
      var global$N = global$V;
      var call$l = functionCall;
      var isCallable$k = isCallable$p;
      var isObject$d = isObject$e;
      var TypeError$g = global$N.TypeError;
      var ordinaryToPrimitive$1 = function(input, pref) {
        var fn, val;
        if (pref === "string" && isCallable$k(fn = input.toString) && !isObject$d(val = call$l(fn, input)))
          return val;
        if (isCallable$k(fn = input.valueOf) && !isObject$d(val = call$l(fn, input)))
          return val;
        if (pref !== "string" && isCallable$k(fn = input.toString) && !isObject$d(val = call$l(fn, input)))
          return val;
        throw TypeError$g("Can't convert object to primitive value");
      };
      var shared$4 = { exports: {} };
      var isPure = false;
      var global$M = global$V;
      var defineProperty$7 = Object.defineProperty;
      var defineGlobalProperty$3 = function(key2, value) {
        try {
          defineProperty$7(global$M, key2, { value, configurable: true, writable: true });
        } catch (error) {
          global$M[key2] = value;
        }
        return value;
      };
      var global$L = global$V;
      var defineGlobalProperty$2 = defineGlobalProperty$3;
      var SHARED = "__core-js_shared__";
      var store$3 = global$L[SHARED] || defineGlobalProperty$2(SHARED, {});
      var sharedStore = store$3;
      var store$2 = sharedStore;
      (shared$4.exports = function(key2, value) {
        return store$2[key2] || (store$2[key2] = value !== void 0 ? value : {});
      })("versions", []).push({
        version: "3.22.6",
        mode: "global",
        copyright: "© 2014-2022 Denis Pushkarev (zloirock.ru)",
        license: "https://github.com/zloirock/core-js/blob/v3.22.6/LICENSE",
        source: "https://github.com/zloirock/core-js"
      });
      var global$K = global$V;
      var requireObjectCoercible$6 = requireObjectCoercible$8;
      var Object$3 = global$K.Object;
      var toObject$7 = function(argument) {
        return Object$3(requireObjectCoercible$6(argument));
      };
      var uncurryThis$n = functionUncurryThis;
      var toObject$6 = toObject$7;
      var hasOwnProperty = uncurryThis$n({}.hasOwnProperty);
      var hasOwnProperty_1 = Object.hasOwn || function hasOwn2(it, key2) {
        return hasOwnProperty(toObject$6(it), key2);
      };
      var uncurryThis$m = functionUncurryThis;
      var id = 0;
      var postfix = Math.random();
      var toString$8 = uncurryThis$m(1 .toString);
      var uid$3 = function(key2) {
        return "Symbol(" + (key2 === void 0 ? "" : key2) + ")_" + toString$8(++id + postfix, 36);
      };
      var global$J = global$V;
      var shared$3 = shared$4.exports;
      var hasOwn$c = hasOwnProperty_1;
      var uid$2 = uid$3;
      var NATIVE_SYMBOL = nativeSymbol;
      var USE_SYMBOL_AS_UID = useSymbolAsUid;
      var WellKnownSymbolsStore = shared$3("wks");
      var Symbol$1 = global$J.Symbol;
      var symbolFor = Symbol$1 && Symbol$1["for"];
      var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$2;
      var wellKnownSymbol$m = function(name) {
        if (!hasOwn$c(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == "string")) {
          var description = "Symbol." + name;
          if (NATIVE_SYMBOL && hasOwn$c(Symbol$1, name)) {
            WellKnownSymbolsStore[name] = Symbol$1[name];
          } else if (USE_SYMBOL_AS_UID && symbolFor) {
            WellKnownSymbolsStore[name] = symbolFor(description);
          } else {
            WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
          }
        }
        return WellKnownSymbolsStore[name];
      };
      var global$I = global$V;
      var call$k = functionCall;
      var isObject$c = isObject$e;
      var isSymbol$2 = isSymbol$3;
      var getMethod$5 = getMethod$6;
      var ordinaryToPrimitive = ordinaryToPrimitive$1;
      var wellKnownSymbol$l = wellKnownSymbol$m;
      var TypeError$f = global$I.TypeError;
      var TO_PRIMITIVE = wellKnownSymbol$l("toPrimitive");
      var toPrimitive$1 = function(input, pref) {
        if (!isObject$c(input) || isSymbol$2(input))
          return input;
        var exoticToPrim = getMethod$5(input, TO_PRIMITIVE);
        var result;
        if (exoticToPrim) {
          if (pref === void 0)
            pref = "default";
          result = call$k(exoticToPrim, input, pref);
          if (!isObject$c(result) || isSymbol$2(result))
            return result;
          throw TypeError$f("Can't convert object to primitive value");
        }
        if (pref === void 0)
          pref = "number";
        return ordinaryToPrimitive(input, pref);
      };
      var toPrimitive = toPrimitive$1;
      var isSymbol$1 = isSymbol$3;
      var toPropertyKey$4 = function(argument) {
        var key2 = toPrimitive(argument, "string");
        return isSymbol$1(key2) ? key2 : key2 + "";
      };
      var global$H = global$V;
      var isObject$b = isObject$e;
      var document$3 = global$H.document;
      var EXISTS$1 = isObject$b(document$3) && isObject$b(document$3.createElement);
      var documentCreateElement$2 = function(it) {
        return EXISTS$1 ? document$3.createElement(it) : {};
      };
      var DESCRIPTORS$e = descriptors;
      var fails$l = fails$q;
      var createElement$1 = documentCreateElement$2;
      var ie8DomDefine = !DESCRIPTORS$e && !fails$l(function() {
        return Object.defineProperty(createElement$1("div"), "a", {
          get: function() {
            return 7;
          }
        }).a != 7;
      });
      var DESCRIPTORS$d = descriptors;
      var call$j = functionCall;
      var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
      var createPropertyDescriptor$5 = createPropertyDescriptor$6;
      var toIndexedObject$5 = toIndexedObject$6;
      var toPropertyKey$3 = toPropertyKey$4;
      var hasOwn$b = hasOwnProperty_1;
      var IE8_DOM_DEFINE$1 = ie8DomDefine;
      var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
      objectGetOwnPropertyDescriptor.f = DESCRIPTORS$d ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor2(O, P) {
        O = toIndexedObject$5(O);
        P = toPropertyKey$3(P);
        if (IE8_DOM_DEFINE$1)
          try {
            return $getOwnPropertyDescriptor$1(O, P);
          } catch (error) {
          }
        if (hasOwn$b(O, P))
          return createPropertyDescriptor$5(!call$j(propertyIsEnumerableModule$1.f, O, P), O[P]);
      };
      var objectDefineProperty = {};
      var DESCRIPTORS$c = descriptors;
      var fails$k = fails$q;
      var v8PrototypeDefineBug = DESCRIPTORS$c && fails$k(function() {
        return Object.defineProperty(function() {
        }, "prototype", {
          value: 42,
          writable: false
        }).prototype != 42;
      });
      var global$G = global$V;
      var isObject$a = isObject$e;
      var String$4 = global$G.String;
      var TypeError$e = global$G.TypeError;
      var anObject$h = function(argument) {
        if (isObject$a(argument))
          return argument;
        throw TypeError$e(String$4(argument) + " is not an object");
      };
      var global$F = global$V;
      var DESCRIPTORS$b = descriptors;
      var IE8_DOM_DEFINE = ie8DomDefine;
      var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
      var anObject$g = anObject$h;
      var toPropertyKey$2 = toPropertyKey$4;
      var TypeError$d = global$F.TypeError;
      var $defineProperty = Object.defineProperty;
      var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      var ENUMERABLE = "enumerable";
      var CONFIGURABLE$1 = "configurable";
      var WRITABLE = "writable";
      objectDefineProperty.f = DESCRIPTORS$b ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty2(O, P, Attributes) {
        anObject$g(O);
        P = toPropertyKey$2(P);
        anObject$g(Attributes);
        if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
          var current = $getOwnPropertyDescriptor(O, P);
          if (current && current[WRITABLE]) {
            O[P] = Attributes.value;
            Attributes = {
              configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
              enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
              writable: false
            };
          }
        }
        return $defineProperty(O, P, Attributes);
      } : $defineProperty : function defineProperty2(O, P, Attributes) {
        anObject$g(O);
        P = toPropertyKey$2(P);
        anObject$g(Attributes);
        if (IE8_DOM_DEFINE)
          try {
            return $defineProperty(O, P, Attributes);
          } catch (error) {
          }
        if ("get" in Attributes || "set" in Attributes)
          throw TypeError$d("Accessors not supported");
        if ("value" in Attributes)
          O[P] = Attributes.value;
        return O;
      };
      var DESCRIPTORS$a = descriptors;
      var definePropertyModule$5 = objectDefineProperty;
      var createPropertyDescriptor$4 = createPropertyDescriptor$6;
      var createNonEnumerableProperty$9 = DESCRIPTORS$a ? function(object, key2, value) {
        return definePropertyModule$5.f(object, key2, createPropertyDescriptor$4(1, value));
      } : function(object, key2, value) {
        object[key2] = value;
        return object;
      };
      var makeBuiltIn$2 = { exports: {} };
      var DESCRIPTORS$9 = descriptors;
      var hasOwn$a = hasOwnProperty_1;
      var FunctionPrototype$1 = Function.prototype;
      var getDescriptor = DESCRIPTORS$9 && Object.getOwnPropertyDescriptor;
      var EXISTS = hasOwn$a(FunctionPrototype$1, "name");
      var PROPER = EXISTS && function something() {
      }.name === "something";
      var CONFIGURABLE = EXISTS && (!DESCRIPTORS$9 || DESCRIPTORS$9 && getDescriptor(FunctionPrototype$1, "name").configurable);
      var functionName = {
        EXISTS,
        PROPER,
        CONFIGURABLE
      };
      var uncurryThis$l = functionUncurryThis;
      var isCallable$j = isCallable$p;
      var store$1 = sharedStore;
      var functionToString = uncurryThis$l(Function.toString);
      if (!isCallable$j(store$1.inspectSource)) {
        store$1.inspectSource = function(it) {
          return functionToString(it);
        };
      }
      var inspectSource$4 = store$1.inspectSource;
      var global$E = global$V;
      var isCallable$i = isCallable$p;
      var inspectSource$3 = inspectSource$4;
      var WeakMap$2 = global$E.WeakMap;
      var nativeWeakMap = isCallable$i(WeakMap$2) && /native code/.test(inspectSource$3(WeakMap$2));
      var shared$2 = shared$4.exports;
      var uid$1 = uid$3;
      var keys$1 = shared$2("keys");
      var sharedKey$3 = function(key2) {
        return keys$1[key2] || (keys$1[key2] = uid$1(key2));
      };
      var hiddenKeys$4 = {};
      var NATIVE_WEAK_MAP = nativeWeakMap;
      var global$D = global$V;
      var uncurryThis$k = functionUncurryThis;
      var isObject$9 = isObject$e;
      var createNonEnumerableProperty$8 = createNonEnumerableProperty$9;
      var hasOwn$9 = hasOwnProperty_1;
      var shared$1 = sharedStore;
      var sharedKey$2 = sharedKey$3;
      var hiddenKeys$3 = hiddenKeys$4;
      var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
      var TypeError$c = global$D.TypeError;
      var WeakMap$1 = global$D.WeakMap;
      var set$2, get$1, has;
      var enforce = function(it) {
        return has(it) ? get$1(it) : set$2(it, {});
      };
      var getterFor = function(TYPE) {
        return function(it) {
          var state;
          if (!isObject$9(it) || (state = get$1(it)).type !== TYPE) {
            throw TypeError$c("Incompatible receiver, " + TYPE + " required");
          }
          return state;
        };
      };
      if (NATIVE_WEAK_MAP || shared$1.state) {
        var store = shared$1.state || (shared$1.state = new WeakMap$1());
        var wmget = uncurryThis$k(store.get);
        var wmhas = uncurryThis$k(store.has);
        var wmset = uncurryThis$k(store.set);
        set$2 = function(it, metadata) {
          if (wmhas(store, it))
            throw new TypeError$c(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          wmset(store, it, metadata);
          return metadata;
        };
        get$1 = function(it) {
          return wmget(store, it) || {};
        };
        has = function(it) {
          return wmhas(store, it);
        };
      } else {
        var STATE = sharedKey$2("state");
        hiddenKeys$3[STATE] = true;
        set$2 = function(it, metadata) {
          if (hasOwn$9(it, STATE))
            throw new TypeError$c(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          createNonEnumerableProperty$8(it, STATE, metadata);
          return metadata;
        };
        get$1 = function(it) {
          return hasOwn$9(it, STATE) ? it[STATE] : {};
        };
        has = function(it) {
          return hasOwn$9(it, STATE);
        };
      }
      var internalState = {
        set: set$2,
        get: get$1,
        has,
        enforce,
        getterFor
      };
      var fails$j = fails$q;
      var isCallable$h = isCallable$p;
      var hasOwn$8 = hasOwnProperty_1;
      var DESCRIPTORS$8 = descriptors;
      var CONFIGURABLE_FUNCTION_NAME$2 = functionName.CONFIGURABLE;
      var inspectSource$2 = inspectSource$4;
      var InternalStateModule$5 = internalState;
      var enforceInternalState = InternalStateModule$5.enforce;
      var getInternalState$4 = InternalStateModule$5.get;
      var defineProperty$6 = Object.defineProperty;
      var CONFIGURABLE_LENGTH = DESCRIPTORS$8 && !fails$j(function() {
        return defineProperty$6(function() {
        }, "length", { value: 8 }).length !== 8;
      });
      var TEMPLATE = String(String).split("String");
      var makeBuiltIn$1 = makeBuiltIn$2.exports = function(value, name, options) {
        if (String(name).slice(0, 7) === "Symbol(") {
          name = "[" + String(name).replace(/^Symbol\(([^)]*)\)/, "$1") + "]";
        }
        if (options && options.getter)
          name = "get " + name;
        if (options && options.setter)
          name = "set " + name;
        if (!hasOwn$8(value, "name") || CONFIGURABLE_FUNCTION_NAME$2 && value.name !== name) {
          defineProperty$6(value, "name", { value: name, configurable: true });
        }
        if (CONFIGURABLE_LENGTH && options && hasOwn$8(options, "arity") && value.length !== options.arity) {
          defineProperty$6(value, "length", { value: options.arity });
        }
        if (options && hasOwn$8(options, "constructor") && options.constructor) {
          if (DESCRIPTORS$8)
            try {
              defineProperty$6(value, "prototype", { writable: false });
            } catch (error) {
            }
        } else
          value.prototype = void 0;
        var state = enforceInternalState(value);
        if (!hasOwn$8(state, "source")) {
          state.source = TEMPLATE.join(typeof name == "string" ? name : "");
        }
        return value;
      };
      Function.prototype.toString = makeBuiltIn$1(function toString2() {
        return isCallable$h(this) && getInternalState$4(this).source || inspectSource$2(this);
      }, "toString");
      var isCallable$g = isCallable$p;
      var createNonEnumerableProperty$7 = createNonEnumerableProperty$9;
      var makeBuiltIn = makeBuiltIn$2.exports;
      var defineGlobalProperty$1 = defineGlobalProperty$3;
      var defineBuiltIn$9 = function(O, key2, value, options) {
        if (!options)
          options = {};
        var simple = options.enumerable;
        var name = options.name !== void 0 ? options.name : key2;
        if (isCallable$g(value))
          makeBuiltIn(value, name, options);
        if (options.global) {
          if (simple)
            O[key2] = value;
          else
            defineGlobalProperty$1(key2, value);
        } else {
          if (!options.unsafe)
            delete O[key2];
          else if (O[key2])
            simple = true;
          if (simple)
            O[key2] = value;
          else
            createNonEnumerableProperty$7(O, key2, value);
        }
        return O;
      };
      var objectGetOwnPropertyNames = {};
      var ceil = Math.ceil;
      var floor$4 = Math.floor;
      var mathTrunc = Math.trunc || function trunc2(x) {
        var n = +x;
        return (n > 0 ? floor$4 : ceil)(n);
      };
      var trunc = mathTrunc;
      var toIntegerOrInfinity$7 = function(argument) {
        var number = +argument;
        return number !== number || number === 0 ? 0 : trunc(number);
      };
      var toIntegerOrInfinity$6 = toIntegerOrInfinity$7;
      var max$2 = Math.max;
      var min$5 = Math.min;
      var toAbsoluteIndex$4 = function(index, length) {
        var integer = toIntegerOrInfinity$6(index);
        return integer < 0 ? max$2(integer + length, 0) : min$5(integer, length);
      };
      var toIntegerOrInfinity$5 = toIntegerOrInfinity$7;
      var min$4 = Math.min;
      var toLength$9 = function(argument) {
        return argument > 0 ? min$4(toIntegerOrInfinity$5(argument), 9007199254740991) : 0;
      };
      var toLength$8 = toLength$9;
      var lengthOfArrayLike$7 = function(obj) {
        return toLength$8(obj.length);
      };
      var toIndexedObject$4 = toIndexedObject$6;
      var toAbsoluteIndex$3 = toAbsoluteIndex$4;
      var lengthOfArrayLike$6 = lengthOfArrayLike$7;
      var createMethod$2 = function(IS_INCLUDES) {
        return function($this, el, fromIndex) {
          var O = toIndexedObject$4($this);
          var length = lengthOfArrayLike$6(O);
          var index = toAbsoluteIndex$3(fromIndex, length);
          var value;
          if (IS_INCLUDES && el != el)
            while (length > index) {
              value = O[index++];
              if (value != value)
                return true;
            }
          else
            for (; length > index; index++) {
              if ((IS_INCLUDES || index in O) && O[index] === el)
                return IS_INCLUDES || index || 0;
            }
          return !IS_INCLUDES && -1;
        };
      };
      var arrayIncludes = {
        // `Array.prototype.includes` method
        // https://tc39.es/ecma262/#sec-array.prototype.includes
        includes: createMethod$2(true),
        // `Array.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.indexof
        indexOf: createMethod$2(false)
      };
      var uncurryThis$j = functionUncurryThis;
      var hasOwn$7 = hasOwnProperty_1;
      var toIndexedObject$3 = toIndexedObject$6;
      var indexOf$1 = arrayIncludes.indexOf;
      var hiddenKeys$2 = hiddenKeys$4;
      var push$4 = uncurryThis$j([].push);
      var objectKeysInternal = function(object, names) {
        var O = toIndexedObject$3(object);
        var i = 0;
        var result = [];
        var key2;
        for (key2 in O)
          !hasOwn$7(hiddenKeys$2, key2) && hasOwn$7(O, key2) && push$4(result, key2);
        while (names.length > i)
          if (hasOwn$7(O, key2 = names[i++])) {
            ~indexOf$1(result, key2) || push$4(result, key2);
          }
        return result;
      };
      var enumBugKeys$3 = [
        "constructor",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "toLocaleString",
        "toString",
        "valueOf"
      ];
      var internalObjectKeys$1 = objectKeysInternal;
      var enumBugKeys$2 = enumBugKeys$3;
      var hiddenKeys$1 = enumBugKeys$2.concat("length", "prototype");
      objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames2(O) {
        return internalObjectKeys$1(O, hiddenKeys$1);
      };
      var objectGetOwnPropertySymbols = {};
      objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;
      var getBuiltIn$5 = getBuiltIn$8;
      var uncurryThis$i = functionUncurryThis;
      var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
      var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
      var anObject$f = anObject$h;
      var concat$2 = uncurryThis$i([].concat);
      var ownKeys$1 = getBuiltIn$5("Reflect", "ownKeys") || function ownKeys2(it) {
        var keys2 = getOwnPropertyNamesModule.f(anObject$f(it));
        var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
        return getOwnPropertySymbols ? concat$2(keys2, getOwnPropertySymbols(it)) : keys2;
      };
      var hasOwn$6 = hasOwnProperty_1;
      var ownKeys = ownKeys$1;
      var getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;
      var definePropertyModule$4 = objectDefineProperty;
      var copyConstructorProperties$1 = function(target, source, exceptions) {
        var keys2 = ownKeys(source);
        var defineProperty2 = definePropertyModule$4.f;
        var getOwnPropertyDescriptor2 = getOwnPropertyDescriptorModule$1.f;
        for (var i = 0; i < keys2.length; i++) {
          var key2 = keys2[i];
          if (!hasOwn$6(target, key2) && !(exceptions && hasOwn$6(exceptions, key2))) {
            defineProperty2(target, key2, getOwnPropertyDescriptor2(source, key2));
          }
        }
      };
      var fails$i = fails$q;
      var isCallable$f = isCallable$p;
      var replacement = /#|\.prototype\./;
      var isForced$2 = function(feature, detection) {
        var value = data[normalize(feature)];
        return value == POLYFILL ? true : value == NATIVE ? false : isCallable$f(detection) ? fails$i(detection) : !!detection;
      };
      var normalize = isForced$2.normalize = function(string) {
        return String(string).replace(replacement, ".").toLowerCase();
      };
      var data = isForced$2.data = {};
      var NATIVE = isForced$2.NATIVE = "N";
      var POLYFILL = isForced$2.POLYFILL = "P";
      var isForced_1 = isForced$2;
      var global$C = global$V;
      var getOwnPropertyDescriptor$4 = objectGetOwnPropertyDescriptor.f;
      var createNonEnumerableProperty$6 = createNonEnumerableProperty$9;
      var defineBuiltIn$8 = defineBuiltIn$9;
      var defineGlobalProperty = defineGlobalProperty$3;
      var copyConstructorProperties = copyConstructorProperties$1;
      var isForced$1 = isForced_1;
      var _export = function(options, source) {
        var TARGET = options.target;
        var GLOBAL = options.global;
        var STATIC = options.stat;
        var FORCED2, target, key2, targetProperty, sourceProperty, descriptor;
        if (GLOBAL) {
          target = global$C;
        } else if (STATIC) {
          target = global$C[TARGET] || defineGlobalProperty(TARGET, {});
        } else {
          target = (global$C[TARGET] || {}).prototype;
        }
        if (target)
          for (key2 in source) {
            sourceProperty = source[key2];
            if (options.dontCallGetSet) {
              descriptor = getOwnPropertyDescriptor$4(target, key2);
              targetProperty = descriptor && descriptor.value;
            } else
              targetProperty = target[key2];
            FORCED2 = isForced$1(GLOBAL ? key2 : TARGET + (STATIC ? "." : "#") + key2, options.forced);
            if (!FORCED2 && targetProperty !== void 0) {
              if (typeof sourceProperty == typeof targetProperty)
                continue;
              copyConstructorProperties(sourceProperty, targetProperty);
            }
            if (options.sham || targetProperty && targetProperty.sham) {
              createNonEnumerableProperty$6(sourceProperty, "sham", true);
            }
            defineBuiltIn$8(target, key2, sourceProperty, options);
          }
      };
      var internalObjectKeys = objectKeysInternal;
      var enumBugKeys$1 = enumBugKeys$3;
      var objectKeys$2 = Object.keys || function keys2(O) {
        return internalObjectKeys(O, enumBugKeys$1);
      };
      var DESCRIPTORS$7 = descriptors;
      var uncurryThis$h = functionUncurryThis;
      var call$i = functionCall;
      var fails$h = fails$q;
      var objectKeys$1 = objectKeys$2;
      var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
      var propertyIsEnumerableModule = objectPropertyIsEnumerable;
      var toObject$5 = toObject$7;
      var IndexedObject$1 = indexedObject;
      var $assign = Object.assign;
      var defineProperty$5 = Object.defineProperty;
      var concat$1 = uncurryThis$h([].concat);
      var objectAssign = !$assign || fails$h(function() {
        if (DESCRIPTORS$7 && $assign({ b: 1 }, $assign(defineProperty$5({}, "a", {
          enumerable: true,
          get: function() {
            defineProperty$5(this, "b", {
              value: 3,
              enumerable: false
            });
          }
        }), { b: 2 })).b !== 1)
          return true;
        var A = {};
        var B = {};
        var symbol = Symbol();
        var alphabet = "abcdefghijklmnopqrst";
        A[symbol] = 7;
        alphabet.split("").forEach(function(chr) {
          B[chr] = chr;
        });
        return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join("") != alphabet;
      }) ? function assign2(target, source) {
        var T = toObject$5(target);
        var argumentsLength = arguments.length;
        var index = 1;
        var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
        var propertyIsEnumerable = propertyIsEnumerableModule.f;
        while (argumentsLength > index) {
          var S = IndexedObject$1(arguments[index++]);
          var keys2 = getOwnPropertySymbols ? concat$1(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
          var length = keys2.length;
          var j2 = 0;
          var key2;
          while (length > j2) {
            key2 = keys2[j2++];
            if (!DESCRIPTORS$7 || call$i(propertyIsEnumerable, S, key2))
              T[key2] = S[key2];
          }
        }
        return T;
      } : $assign;
      var $$d = _export;
      var assign = objectAssign;
      $$d({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign }, {
        assign
      });
      var wellKnownSymbol$k = wellKnownSymbol$m;
      var TO_STRING_TAG$4 = wellKnownSymbol$k("toStringTag");
      var test = {};
      test[TO_STRING_TAG$4] = "z";
      var toStringTagSupport = String(test) === "[object z]";
      var global$B = global$V;
      var TO_STRING_TAG_SUPPORT = toStringTagSupport;
      var isCallable$e = isCallable$p;
      var classofRaw = classofRaw$1;
      var wellKnownSymbol$j = wellKnownSymbol$m;
      var TO_STRING_TAG$3 = wellKnownSymbol$j("toStringTag");
      var Object$2 = global$B.Object;
      var CORRECT_ARGUMENTS = classofRaw(function() {
        return arguments;
      }()) == "Arguments";
      var tryGet = function(it, key2) {
        try {
          return it[key2];
        } catch (error) {
        }
      };
      var classof$a = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
        var O, tag, result;
        return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = Object$2(it), TO_STRING_TAG$3)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == "Object" && isCallable$e(O.callee) ? "Arguments" : result;
      };
      var global$A = global$V;
      var classof$9 = classof$a;
      var String$3 = global$A.String;
      var toString$7 = function(argument) {
        if (classof$9(argument) === "Symbol")
          throw TypeError("Cannot convert a Symbol value to a string");
        return String$3(argument);
      };
      var anObject$e = anObject$h;
      var regexpFlags$1 = function() {
        var that = anObject$e(this);
        var result = "";
        if (that.hasIndices)
          result += "d";
        if (that.global)
          result += "g";
        if (that.ignoreCase)
          result += "i";
        if (that.multiline)
          result += "m";
        if (that.dotAll)
          result += "s";
        if (that.unicode)
          result += "u";
        if (that.sticky)
          result += "y";
        return result;
      };
      var fails$g = fails$q;
      var global$z = global$V;
      var $RegExp$2 = global$z.RegExp;
      var UNSUPPORTED_Y$2 = fails$g(function() {
        var re = $RegExp$2("a", "y");
        re.lastIndex = 2;
        return re.exec("abcd") != null;
      });
      var MISSED_STICKY = UNSUPPORTED_Y$2 || fails$g(function() {
        return !$RegExp$2("a", "y").sticky;
      });
      var BROKEN_CARET = UNSUPPORTED_Y$2 || fails$g(function() {
        var re = $RegExp$2("^r", "gy");
        re.lastIndex = 2;
        return re.exec("str") != null;
      });
      var regexpStickyHelpers = {
        BROKEN_CARET,
        MISSED_STICKY,
        UNSUPPORTED_Y: UNSUPPORTED_Y$2
      };
      var objectDefineProperties = {};
      var DESCRIPTORS$6 = descriptors;
      var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
      var definePropertyModule$3 = objectDefineProperty;
      var anObject$d = anObject$h;
      var toIndexedObject$2 = toIndexedObject$6;
      var objectKeys = objectKeys$2;
      objectDefineProperties.f = DESCRIPTORS$6 && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
        anObject$d(O);
        var props = toIndexedObject$2(Properties);
        var keys2 = objectKeys(Properties);
        var length = keys2.length;
        var index = 0;
        var key2;
        while (length > index)
          definePropertyModule$3.f(O, key2 = keys2[index++], props[key2]);
        return O;
      };
      var getBuiltIn$4 = getBuiltIn$8;
      var html$2 = getBuiltIn$4("document", "documentElement");
      var anObject$c = anObject$h;
      var definePropertiesModule = objectDefineProperties;
      var enumBugKeys = enumBugKeys$3;
      var hiddenKeys = hiddenKeys$4;
      var html$1 = html$2;
      var documentCreateElement$1 = documentCreateElement$2;
      var sharedKey$1 = sharedKey$3;
      var GT = ">";
      var LT = "<";
      var PROTOTYPE$1 = "prototype";
      var SCRIPT = "script";
      var IE_PROTO$1 = sharedKey$1("IE_PROTO");
      var EmptyConstructor = function() {
      };
      var scriptTag = function(content) {
        return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
      };
      var NullProtoObjectViaActiveX = function(activeXDocument2) {
        activeXDocument2.write(scriptTag(""));
        activeXDocument2.close();
        var temp = activeXDocument2.parentWindow.Object;
        activeXDocument2 = null;
        return temp;
      };
      var NullProtoObjectViaIFrame = function() {
        var iframe = documentCreateElement$1("iframe");
        var JS = "java" + SCRIPT + ":";
        var iframeDocument;
        iframe.style.display = "none";
        html$1.appendChild(iframe);
        iframe.src = String(JS);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(scriptTag("document.F=Object"));
        iframeDocument.close();
        return iframeDocument.F;
      };
      var activeXDocument;
      var NullProtoObject = function() {
        try {
          activeXDocument = new ActiveXObject("htmlfile");
        } catch (error) {
        }
        NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
        var length = enumBugKeys.length;
        while (length--)
          delete NullProtoObject[PROTOTYPE$1][enumBugKeys[length]];
        return NullProtoObject();
      };
      hiddenKeys[IE_PROTO$1] = true;
      var objectCreate = Object.create || function create2(O, Properties) {
        var result;
        if (O !== null) {
          EmptyConstructor[PROTOTYPE$1] = anObject$c(O);
          result = new EmptyConstructor();
          EmptyConstructor[PROTOTYPE$1] = null;
          result[IE_PROTO$1] = O;
        } else
          result = NullProtoObject();
        return Properties === void 0 ? result : definePropertiesModule.f(result, Properties);
      };
      var fails$f = fails$q;
      var global$y = global$V;
      var $RegExp$1 = global$y.RegExp;
      var regexpUnsupportedDotAll = fails$f(function() {
        var re = $RegExp$1(".", "s");
        return !(re.dotAll && re.exec("\n") && re.flags === "s");
      });
      var fails$e = fails$q;
      var global$x = global$V;
      var $RegExp = global$x.RegExp;
      var regexpUnsupportedNcg = fails$e(function() {
        var re = $RegExp("(?<a>b)", "g");
        return re.exec("b").groups.a !== "b" || "b".replace(re, "$<a>c") !== "bc";
      });
      var call$h = functionCall;
      var uncurryThis$g = functionUncurryThis;
      var toString$6 = toString$7;
      var regexpFlags = regexpFlags$1;
      var stickyHelpers$1 = regexpStickyHelpers;
      var shared = shared$4.exports;
      var create$4 = objectCreate;
      var getInternalState$3 = internalState.get;
      var UNSUPPORTED_DOT_ALL = regexpUnsupportedDotAll;
      var UNSUPPORTED_NCG = regexpUnsupportedNcg;
      var nativeReplace = shared("native-string-replace", String.prototype.replace);
      var nativeExec = RegExp.prototype.exec;
      var patchedExec = nativeExec;
      var charAt$4 = uncurryThis$g("".charAt);
      var indexOf = uncurryThis$g("".indexOf);
      var replace$2 = uncurryThis$g("".replace);
      var stringSlice$6 = uncurryThis$g("".slice);
      var UPDATES_LAST_INDEX_WRONG = function() {
        var re1 = /a/;
        var re2 = /b*/g;
        call$h(nativeExec, re1, "a");
        call$h(nativeExec, re2, "a");
        return re1.lastIndex !== 0 || re2.lastIndex !== 0;
      }();
      var UNSUPPORTED_Y$1 = stickyHelpers$1.BROKEN_CARET;
      var NPCG_INCLUDED = /()??/.exec("")[1] !== void 0;
      var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1 || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
      if (PATCH) {
        patchedExec = function exec2(string) {
          var re = this;
          var state = getInternalState$3(re);
          var str = toString$6(string);
          var raw = state.raw;
          var result, reCopy, lastIndex, match2, i, object, group;
          if (raw) {
            raw.lastIndex = re.lastIndex;
            result = call$h(patchedExec, raw, str);
            re.lastIndex = raw.lastIndex;
            return result;
          }
          var groups = state.groups;
          var sticky = UNSUPPORTED_Y$1 && re.sticky;
          var flags = call$h(regexpFlags, re);
          var source = re.source;
          var charsAdded = 0;
          var strCopy = str;
          if (sticky) {
            flags = replace$2(flags, "y", "");
            if (indexOf(flags, "g") === -1) {
              flags += "g";
            }
            strCopy = stringSlice$6(str, re.lastIndex);
            if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$4(str, re.lastIndex - 1) !== "\n")) {
              source = "(?: " + source + ")";
              strCopy = " " + strCopy;
              charsAdded++;
            }
            reCopy = new RegExp("^(?:" + source + ")", flags);
          }
          if (NPCG_INCLUDED) {
            reCopy = new RegExp("^" + source + "$(?!\\s)", flags);
          }
          if (UPDATES_LAST_INDEX_WRONG)
            lastIndex = re.lastIndex;
          match2 = call$h(nativeExec, sticky ? reCopy : re, strCopy);
          if (sticky) {
            if (match2) {
              match2.input = stringSlice$6(match2.input, charsAdded);
              match2[0] = stringSlice$6(match2[0], charsAdded);
              match2.index = re.lastIndex;
              re.lastIndex += match2[0].length;
            } else
              re.lastIndex = 0;
          } else if (UPDATES_LAST_INDEX_WRONG && match2) {
            re.lastIndex = re.global ? match2.index + match2[0].length : lastIndex;
          }
          if (NPCG_INCLUDED && match2 && match2.length > 1) {
            call$h(nativeReplace, match2[0], reCopy, function() {
              for (i = 1; i < arguments.length - 2; i++) {
                if (arguments[i] === void 0)
                  match2[i] = void 0;
              }
            });
          }
          if (match2 && groups) {
            match2.groups = object = create$4(null);
            for (i = 0; i < groups.length; i++) {
              group = groups[i];
              object[group[0]] = match2[group[1]];
            }
          }
          return match2;
        };
      }
      var regexpExec$3 = patchedExec;
      var $$c = _export;
      var exec$2 = regexpExec$3;
      $$c({ target: "RegExp", proto: true, forced: /./.exec !== exec$2 }, {
        exec: exec$2
      });
      var uncurryThis$f = functionUncurryThis;
      var defineBuiltIn$7 = defineBuiltIn$9;
      var regexpExec$2 = regexpExec$3;
      var fails$d = fails$q;
      var wellKnownSymbol$i = wellKnownSymbol$m;
      var createNonEnumerableProperty$5 = createNonEnumerableProperty$9;
      var SPECIES$4 = wellKnownSymbol$i("species");
      var RegExpPrototype = RegExp.prototype;
      var fixRegexpWellKnownSymbolLogic = function(KEY, exec2, FORCED2, SHAM) {
        var SYMBOL = wellKnownSymbol$i(KEY);
        var DELEGATES_TO_SYMBOL = !fails$d(function() {
          var O = {};
          O[SYMBOL] = function() {
            return 7;
          };
          return ""[KEY](O) != 7;
        });
        var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$d(function() {
          var execCalled = false;
          var re = /a/;
          if (KEY === "split") {
            re = {};
            re.constructor = {};
            re.constructor[SPECIES$4] = function() {
              return re;
            };
            re.flags = "";
            re[SYMBOL] = /./[SYMBOL];
          }
          re.exec = function() {
            execCalled = true;
            return null;
          };
          re[SYMBOL]("");
          return !execCalled;
        });
        if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED2) {
          var uncurriedNativeRegExpMethod = uncurryThis$f(/./[SYMBOL]);
          var methods = exec2(SYMBOL, ""[KEY], function(nativeMethod, regexp, str, arg2, forceStringMethod) {
            var uncurriedNativeMethod = uncurryThis$f(nativeMethod);
            var $exec = regexp.exec;
            if ($exec === regexpExec$2 || $exec === RegExpPrototype.exec) {
              if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
              }
              return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
            }
            return { done: false };
          });
          defineBuiltIn$7(String.prototype, KEY, methods[0]);
          defineBuiltIn$7(RegExpPrototype, SYMBOL, methods[1]);
        }
        if (SHAM)
          createNonEnumerableProperty$5(RegExpPrototype[SYMBOL], "sham", true);
      };
      var sameValue$1 = Object.is || function is(x, y) {
        return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
      };
      var global$w = global$V;
      var call$g = functionCall;
      var anObject$b = anObject$h;
      var isCallable$d = isCallable$p;
      var classof$8 = classofRaw$1;
      var regexpExec$1 = regexpExec$3;
      var TypeError$b = global$w.TypeError;
      var regexpExecAbstract = function(R, S) {
        var exec2 = R.exec;
        if (isCallable$d(exec2)) {
          var result = call$g(exec2, R, S);
          if (result !== null)
            anObject$b(result);
          return result;
        }
        if (classof$8(R) === "RegExp")
          return call$g(regexpExec$1, R, S);
        throw TypeError$b("RegExp#exec called on incompatible receiver");
      };
      var call$f = functionCall;
      var fixRegExpWellKnownSymbolLogic$2 = fixRegexpWellKnownSymbolLogic;
      var anObject$a = anObject$h;
      var requireObjectCoercible$5 = requireObjectCoercible$8;
      var sameValue = sameValue$1;
      var toString$5 = toString$7;
      var getMethod$4 = getMethod$6;
      var regExpExec$1 = regexpExecAbstract;
      fixRegExpWellKnownSymbolLogic$2("search", function(SEARCH, nativeSearch, maybeCallNative) {
        return [
          // `String.prototype.search` method
          // https://tc39.es/ecma262/#sec-string.prototype.search
          function search(regexp) {
            var O = requireObjectCoercible$5(this);
            var searcher = regexp == void 0 ? void 0 : getMethod$4(regexp, SEARCH);
            return searcher ? call$f(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString$5(O));
          },
          // `RegExp.prototype[@@search]` method
          // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
          function(string) {
            var rx = anObject$a(this);
            var S = toString$5(string);
            var res = maybeCallNative(nativeSearch, rx, S);
            if (res.done)
              return res.value;
            var previousLastIndex = rx.lastIndex;
            if (!sameValue(previousLastIndex, 0))
              rx.lastIndex = 0;
            var result = regExpExec$1(rx, S);
            if (!sameValue(rx.lastIndex, previousLastIndex))
              rx.lastIndex = previousLastIndex;
            return result === null ? -1 : result.index;
          }
        ];
      });
      var wellKnownSymbol$h = wellKnownSymbol$m;
      var create$3 = objectCreate;
      var defineProperty$4 = objectDefineProperty.f;
      var UNSCOPABLES = wellKnownSymbol$h("unscopables");
      var ArrayPrototype$1 = Array.prototype;
      if (ArrayPrototype$1[UNSCOPABLES] == void 0) {
        defineProperty$4(ArrayPrototype$1, UNSCOPABLES, {
          configurable: true,
          value: create$3(null)
        });
      }
      var addToUnscopables$1 = function(key2) {
        ArrayPrototype$1[UNSCOPABLES][key2] = true;
      };
      var iterators = {};
      var fails$c = fails$q;
      var correctPrototypeGetter = !fails$c(function() {
        function F() {
        }
        F.prototype.constructor = null;
        return Object.getPrototypeOf(new F()) !== F.prototype;
      });
      var global$v = global$V;
      var hasOwn$5 = hasOwnProperty_1;
      var isCallable$c = isCallable$p;
      var toObject$4 = toObject$7;
      var sharedKey = sharedKey$3;
      var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;
      var IE_PROTO = sharedKey("IE_PROTO");
      var Object$1 = global$v.Object;
      var ObjectPrototype$2 = Object$1.prototype;
      var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? Object$1.getPrototypeOf : function(O) {
        var object = toObject$4(O);
        if (hasOwn$5(object, IE_PROTO))
          return object[IE_PROTO];
        var constructor = object.constructor;
        if (isCallable$c(constructor) && object instanceof constructor) {
          return constructor.prototype;
        }
        return object instanceof Object$1 ? ObjectPrototype$2 : null;
      };
      var fails$b = fails$q;
      var isCallable$b = isCallable$p;
      var getPrototypeOf$3 = objectGetPrototypeOf;
      var defineBuiltIn$6 = defineBuiltIn$9;
      var wellKnownSymbol$g = wellKnownSymbol$m;
      var ITERATOR$7 = wellKnownSymbol$g("iterator");
      var BUGGY_SAFARI_ITERATORS$1 = false;
      var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;
      if ([].keys) {
        arrayIterator = [].keys();
        if (!("next" in arrayIterator))
          BUGGY_SAFARI_ITERATORS$1 = true;
        else {
          PrototypeOfArrayIteratorPrototype = getPrototypeOf$3(getPrototypeOf$3(arrayIterator));
          if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
            IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
        }
      }
      var NEW_ITERATOR_PROTOTYPE = IteratorPrototype$2 == void 0 || fails$b(function() {
        var test2 = {};
        return IteratorPrototype$2[ITERATOR$7].call(test2) !== test2;
      });
      if (NEW_ITERATOR_PROTOTYPE)
        IteratorPrototype$2 = {};
      if (!isCallable$b(IteratorPrototype$2[ITERATOR$7])) {
        defineBuiltIn$6(IteratorPrototype$2, ITERATOR$7, function() {
          return this;
        });
      }
      var iteratorsCore = {
        IteratorPrototype: IteratorPrototype$2,
        BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
      };
      var defineProperty$3 = objectDefineProperty.f;
      var hasOwn$4 = hasOwnProperty_1;
      var wellKnownSymbol$f = wellKnownSymbol$m;
      var TO_STRING_TAG$2 = wellKnownSymbol$f("toStringTag");
      var setToStringTag$5 = function(target, TAG, STATIC) {
        if (target && !STATIC)
          target = target.prototype;
        if (target && !hasOwn$4(target, TO_STRING_TAG$2)) {
          defineProperty$3(target, TO_STRING_TAG$2, { configurable: true, value: TAG });
        }
      };
      var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
      var create$2 = objectCreate;
      var createPropertyDescriptor$3 = createPropertyDescriptor$6;
      var setToStringTag$4 = setToStringTag$5;
      var Iterators$4 = iterators;
      var returnThis$1 = function() {
        return this;
      };
      var createIteratorConstructor$2 = function(IteratorConstructor, NAME2, next, ENUMERABLE_NEXT) {
        var TO_STRING_TAG2 = NAME2 + " Iterator";
        IteratorConstructor.prototype = create$2(IteratorPrototype$1, { next: createPropertyDescriptor$3(+!ENUMERABLE_NEXT, next) });
        setToStringTag$4(IteratorConstructor, TO_STRING_TAG2, false);
        Iterators$4[TO_STRING_TAG2] = returnThis$1;
        return IteratorConstructor;
      };
      var global$u = global$V;
      var isCallable$a = isCallable$p;
      var String$2 = global$u.String;
      var TypeError$a = global$u.TypeError;
      var aPossiblePrototype$1 = function(argument) {
        if (typeof argument == "object" || isCallable$a(argument))
          return argument;
        throw TypeError$a("Can't set " + String$2(argument) + " as a prototype");
      };
      var uncurryThis$e = functionUncurryThis;
      var anObject$9 = anObject$h;
      var aPossiblePrototype = aPossiblePrototype$1;
      var objectSetPrototypeOf = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var CORRECT_SETTER = false;
        var test2 = {};
        var setter;
        try {
          setter = uncurryThis$e(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set);
          setter(test2, []);
          CORRECT_SETTER = test2 instanceof Array;
        } catch (error) {
        }
        return function setPrototypeOf2(O, proto) {
          anObject$9(O);
          aPossiblePrototype(proto);
          if (CORRECT_SETTER)
            setter(O, proto);
          else
            O.__proto__ = proto;
          return O;
        };
      }() : void 0);
      var $$b = _export;
      var call$e = functionCall;
      var FunctionName$1 = functionName;
      var isCallable$9 = isCallable$p;
      var createIteratorConstructor$1 = createIteratorConstructor$2;
      var getPrototypeOf$2 = objectGetPrototypeOf;
      var setPrototypeOf$5 = objectSetPrototypeOf;
      var setToStringTag$3 = setToStringTag$5;
      var createNonEnumerableProperty$4 = createNonEnumerableProperty$9;
      var defineBuiltIn$5 = defineBuiltIn$9;
      var wellKnownSymbol$e = wellKnownSymbol$m;
      var Iterators$3 = iterators;
      var IteratorsCore = iteratorsCore;
      var PROPER_FUNCTION_NAME$1 = FunctionName$1.PROPER;
      var CONFIGURABLE_FUNCTION_NAME$1 = FunctionName$1.CONFIGURABLE;
      var IteratorPrototype = IteratorsCore.IteratorPrototype;
      var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
      var ITERATOR$6 = wellKnownSymbol$e("iterator");
      var KEYS = "keys";
      var VALUES = "values";
      var ENTRIES = "entries";
      var returnThis = function() {
        return this;
      };
      var defineIterator$1 = function(Iterable, NAME2, IteratorConstructor, next, DEFAULT, IS_SET, FORCED2) {
        createIteratorConstructor$1(IteratorConstructor, NAME2, next);
        var getIterationMethod = function(KIND) {
          if (KIND === DEFAULT && defaultIterator)
            return defaultIterator;
          if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
            return IterablePrototype[KIND];
          switch (KIND) {
            case KEYS:
              return function keys2() {
                return new IteratorConstructor(this, KIND);
              };
            case VALUES:
              return function values2() {
                return new IteratorConstructor(this, KIND);
              };
            case ENTRIES:
              return function entries() {
                return new IteratorConstructor(this, KIND);
              };
          }
          return function() {
            return new IteratorConstructor(this);
          };
        };
        var TO_STRING_TAG2 = NAME2 + " Iterator";
        var INCORRECT_VALUES_NAME = false;
        var IterablePrototype = Iterable.prototype;
        var nativeIterator = IterablePrototype[ITERATOR$6] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
        var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
        var anyNativeIterator = NAME2 == "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
        var CurrentIteratorPrototype, methods, KEY;
        if (anyNativeIterator) {
          CurrentIteratorPrototype = getPrototypeOf$2(anyNativeIterator.call(new Iterable()));
          if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
            if (getPrototypeOf$2(CurrentIteratorPrototype) !== IteratorPrototype) {
              if (setPrototypeOf$5) {
                setPrototypeOf$5(CurrentIteratorPrototype, IteratorPrototype);
              } else if (!isCallable$9(CurrentIteratorPrototype[ITERATOR$6])) {
                defineBuiltIn$5(CurrentIteratorPrototype, ITERATOR$6, returnThis);
              }
            }
            setToStringTag$3(CurrentIteratorPrototype, TO_STRING_TAG2, true);
          }
        }
        if (PROPER_FUNCTION_NAME$1 && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
          if (CONFIGURABLE_FUNCTION_NAME$1) {
            createNonEnumerableProperty$4(IterablePrototype, "name", VALUES);
          } else {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values2() {
              return call$e(nativeIterator, this);
            };
          }
        }
        if (DEFAULT) {
          methods = {
            values: getIterationMethod(VALUES),
            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
            entries: getIterationMethod(ENTRIES)
          };
          if (FORCED2)
            for (KEY in methods) {
              if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                defineBuiltIn$5(IterablePrototype, KEY, methods[KEY]);
              }
            }
          else
            $$b({ target: NAME2, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
        }
        if (IterablePrototype[ITERATOR$6] !== defaultIterator) {
          defineBuiltIn$5(IterablePrototype, ITERATOR$6, defaultIterator, { name: DEFAULT });
        }
        Iterators$3[NAME2] = defaultIterator;
        return methods;
      };
      var toIndexedObject$1 = toIndexedObject$6;
      var addToUnscopables = addToUnscopables$1;
      var Iterators$2 = iterators;
      var InternalStateModule$4 = internalState;
      var defineProperty$2 = objectDefineProperty.f;
      var defineIterator = defineIterator$1;
      var DESCRIPTORS$5 = descriptors;
      var ARRAY_ITERATOR = "Array Iterator";
      var setInternalState$4 = InternalStateModule$4.set;
      var getInternalState$2 = InternalStateModule$4.getterFor(ARRAY_ITERATOR);
      var es_array_iterator = defineIterator(Array, "Array", function(iterated, kind) {
        setInternalState$4(this, {
          type: ARRAY_ITERATOR,
          target: toIndexedObject$1(iterated),
          // target
          index: 0,
          // next index
          kind
          // kind
        });
      }, function() {
        var state = getInternalState$2(this);
        var target = state.target;
        var kind = state.kind;
        var index = state.index++;
        if (!target || index >= target.length) {
          state.target = void 0;
          return { value: void 0, done: true };
        }
        if (kind == "keys")
          return { value: index, done: false };
        if (kind == "values")
          return { value: target[index], done: false };
        return { value: [index, target[index]], done: false };
      }, "values");
      var values = Iterators$2.Arguments = Iterators$2.Array;
      addToUnscopables("keys");
      addToUnscopables("values");
      addToUnscopables("entries");
      if (DESCRIPTORS$5 && values.name !== "values")
        try {
          defineProperty$2(values, "name", { value: "values" });
        } catch (error) {
        }
      var domIterables = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
      };
      var documentCreateElement = documentCreateElement$2;
      var classList = documentCreateElement("span").classList;
      var DOMTokenListPrototype$1 = classList && classList.constructor && classList.constructor.prototype;
      var domTokenListPrototype = DOMTokenListPrototype$1 === Object.prototype ? void 0 : DOMTokenListPrototype$1;
      var global$t = global$V;
      var DOMIterables = domIterables;
      var DOMTokenListPrototype = domTokenListPrototype;
      var ArrayIteratorMethods = es_array_iterator;
      var createNonEnumerableProperty$3 = createNonEnumerableProperty$9;
      var wellKnownSymbol$d = wellKnownSymbol$m;
      var ITERATOR$5 = wellKnownSymbol$d("iterator");
      var TO_STRING_TAG$1 = wellKnownSymbol$d("toStringTag");
      var ArrayValues = ArrayIteratorMethods.values;
      var handlePrototype = function(CollectionPrototype, COLLECTION_NAME2) {
        if (CollectionPrototype) {
          if (CollectionPrototype[ITERATOR$5] !== ArrayValues)
            try {
              createNonEnumerableProperty$3(CollectionPrototype, ITERATOR$5, ArrayValues);
            } catch (error) {
              CollectionPrototype[ITERATOR$5] = ArrayValues;
            }
          if (!CollectionPrototype[TO_STRING_TAG$1]) {
            createNonEnumerableProperty$3(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME2);
          }
          if (DOMIterables[COLLECTION_NAME2])
            for (var METHOD_NAME in ArrayIteratorMethods) {
              if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])
                try {
                  createNonEnumerableProperty$3(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                } catch (error) {
                  CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                }
            }
        }
      };
      for (var COLLECTION_NAME in DOMIterables) {
        handlePrototype(global$t[COLLECTION_NAME] && global$t[COLLECTION_NAME].prototype, COLLECTION_NAME);
      }
      handlePrototype(DOMTokenListPrototype, "DOMTokenList");
      var fails$a = fails$q;
      var wellKnownSymbol$c = wellKnownSymbol$m;
      var IS_PURE = isPure;
      var ITERATOR$4 = wellKnownSymbol$c("iterator");
      var nativeUrl = !fails$a(function() {
        var url = new URL("b?a=1&b=2&c=3", "http://a");
        var searchParams = url.searchParams;
        var result = "";
        url.pathname = "c%20d";
        searchParams.forEach(function(value, key2) {
          searchParams["delete"]("b");
          result += key2 + value;
        });
        return IS_PURE && !url.toJSON || !searchParams.sort || url.href !== "http://a/c%20d?a=1&c=3" || searchParams.get("c") !== "3" || String(new URLSearchParams("?a=1")) !== "a=1" || !searchParams[ITERATOR$4] || new URL("https://a@b").username !== "a" || new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" || new URL("http://тест").host !== "xn--e1aybc" || new URL("http://a#б").hash !== "#%D0%B1" || result !== "a1c3" || new URL("http://x", void 0).host !== "x";
      });
      var defineBuiltIn$4 = defineBuiltIn$9;
      var defineBuiltIns$2 = function(target, src, options) {
        for (var key2 in src)
          defineBuiltIn$4(target, key2, src[key2], options);
        return target;
      };
      var global$s = global$V;
      var isPrototypeOf$3 = objectIsPrototypeOf;
      var TypeError$9 = global$s.TypeError;
      var anInstance$4 = function(it, Prototype2) {
        if (isPrototypeOf$3(Prototype2, it))
          return it;
        throw TypeError$9("Incorrect invocation");
      };
      var uncurryThis$d = functionUncurryThis;
      var aCallable$6 = aCallable$8;
      var NATIVE_BIND$1 = functionBindNative;
      var bind$7 = uncurryThis$d(uncurryThis$d.bind);
      var functionBindContext = function(fn, that) {
        aCallable$6(fn);
        return that === void 0 ? fn : NATIVE_BIND$1 ? bind$7(fn, that) : function() {
          return fn.apply(that, arguments);
        };
      };
      var classof$7 = classof$a;
      var getMethod$3 = getMethod$6;
      var Iterators$1 = iterators;
      var wellKnownSymbol$b = wellKnownSymbol$m;
      var ITERATOR$3 = wellKnownSymbol$b("iterator");
      var getIteratorMethod$4 = function(it) {
        if (it != void 0)
          return getMethod$3(it, ITERATOR$3) || getMethod$3(it, "@@iterator") || Iterators$1[classof$7(it)];
      };
      var global$r = global$V;
      var call$d = functionCall;
      var aCallable$5 = aCallable$8;
      var anObject$8 = anObject$h;
      var tryToString$3 = tryToString$5;
      var getIteratorMethod$3 = getIteratorMethod$4;
      var TypeError$8 = global$r.TypeError;
      var getIterator$3 = function(argument, usingIterator) {
        var iteratorMethod = arguments.length < 2 ? getIteratorMethod$3(argument) : usingIterator;
        if (aCallable$5(iteratorMethod))
          return anObject$8(call$d(iteratorMethod, argument));
        throw TypeError$8(tryToString$3(argument) + " is not iterable");
      };
      var global$q = global$V;
      var TypeError$7 = global$q.TypeError;
      var validateArgumentsLength$2 = function(passed, required) {
        if (passed < required)
          throw TypeError$7("Not enough arguments");
        return passed;
      };
      var toPropertyKey$1 = toPropertyKey$4;
      var definePropertyModule$2 = objectDefineProperty;
      var createPropertyDescriptor$2 = createPropertyDescriptor$6;
      var createProperty$1 = function(object, key2, value) {
        var propertyKey = toPropertyKey$1(key2);
        if (propertyKey in object)
          definePropertyModule$2.f(object, propertyKey, createPropertyDescriptor$2(0, value));
        else
          object[propertyKey] = value;
      };
      var global$p = global$V;
      var toAbsoluteIndex$2 = toAbsoluteIndex$4;
      var lengthOfArrayLike$5 = lengthOfArrayLike$7;
      var createProperty = createProperty$1;
      var Array$4 = global$p.Array;
      var max$1 = Math.max;
      var arraySliceSimple = function(O, start, end) {
        var length = lengthOfArrayLike$5(O);
        var k = toAbsoluteIndex$2(start, length);
        var fin = toAbsoluteIndex$2(end === void 0 ? length : end, length);
        var result = Array$4(max$1(fin - k, 0));
        for (var n = 0; k < fin; k++, n++)
          createProperty(result, n, O[k]);
        result.length = n;
        return result;
      };
      var arraySlice$5 = arraySliceSimple;
      var floor$3 = Math.floor;
      var mergeSort = function(array, comparefn) {
        var length = array.length;
        var middle = floor$3(length / 2);
        return length < 8 ? insertionSort(array, comparefn) : merge(
          array,
          mergeSort(arraySlice$5(array, 0, middle), comparefn),
          mergeSort(arraySlice$5(array, middle), comparefn),
          comparefn
        );
      };
      var insertionSort = function(array, comparefn) {
        var length = array.length;
        var i = 1;
        var element, j2;
        while (i < length) {
          j2 = i;
          element = array[i];
          while (j2 && comparefn(array[j2 - 1], element) > 0) {
            array[j2] = array[--j2];
          }
          if (j2 !== i++)
            array[j2] = element;
        }
        return array;
      };
      var merge = function(array, left, right, comparefn) {
        var llength = left.length;
        var rlength = right.length;
        var lindex = 0;
        var rindex = 0;
        while (lindex < llength || rindex < rlength) {
          array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
        }
        return array;
      };
      var arraySort$1 = mergeSort;
      var $$a = _export;
      var global$o = global$V;
      var call$c = functionCall;
      var uncurryThis$c = functionUncurryThis;
      var DESCRIPTORS$4 = descriptors;
      var USE_NATIVE_URL = nativeUrl;
      var defineBuiltIn$3 = defineBuiltIn$9;
      var defineBuiltIns$1 = defineBuiltIns$2;
      var setToStringTag$2 = setToStringTag$5;
      var createIteratorConstructor = createIteratorConstructor$2;
      var InternalStateModule$3 = internalState;
      var anInstance$3 = anInstance$4;
      var isCallable$8 = isCallable$p;
      var hasOwn$3 = hasOwnProperty_1;
      var bind$6 = functionBindContext;
      var classof$6 = classof$a;
      var anObject$7 = anObject$h;
      var isObject$8 = isObject$e;
      var $toString = toString$7;
      var create$1 = objectCreate;
      var createPropertyDescriptor$1 = createPropertyDescriptor$6;
      var getIterator$2 = getIterator$3;
      var getIteratorMethod$2 = getIteratorMethod$4;
      var validateArgumentsLength$1 = validateArgumentsLength$2;
      var wellKnownSymbol$a = wellKnownSymbol$m;
      var arraySort = arraySort$1;
      var ITERATOR$2 = wellKnownSymbol$a("iterator");
      var URL_SEARCH_PARAMS = "URLSearchParams";
      var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + "Iterator";
      var setInternalState$3 = InternalStateModule$3.set;
      var getInternalParamsState = InternalStateModule$3.getterFor(URL_SEARCH_PARAMS);
      var getInternalIteratorState = InternalStateModule$3.getterFor(URL_SEARCH_PARAMS_ITERATOR);
      var getOwnPropertyDescriptor$3 = Object.getOwnPropertyDescriptor;
      var safeGetBuiltIn = function(name) {
        if (!DESCRIPTORS$4)
          return global$o[name];
        var descriptor = getOwnPropertyDescriptor$3(global$o, name);
        return descriptor && descriptor.value;
      };
      var nativeFetch = safeGetBuiltIn("fetch");
      var NativeRequest = safeGetBuiltIn("Request");
      var Headers = safeGetBuiltIn("Headers");
      var RequestPrototype = NativeRequest && NativeRequest.prototype;
      var HeadersPrototype = Headers && Headers.prototype;
      var RegExp$1 = global$o.RegExp;
      var TypeError$6 = global$o.TypeError;
      var decodeURIComponent$1 = global$o.decodeURIComponent;
      var encodeURIComponent$1 = global$o.encodeURIComponent;
      var charAt$3 = uncurryThis$c("".charAt);
      var join = uncurryThis$c([].join);
      var push$3 = uncurryThis$c([].push);
      var replace$1 = uncurryThis$c("".replace);
      var shift = uncurryThis$c([].shift);
      var splice = uncurryThis$c([].splice);
      var split = uncurryThis$c("".split);
      var stringSlice$5 = uncurryThis$c("".slice);
      var plus = /\+/g;
      var sequences = Array(4);
      var percentSequence = function(bytes) {
        return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp$1("((?:%[\\da-f]{2}){" + bytes + "})", "gi"));
      };
      var percentDecode = function(sequence) {
        try {
          return decodeURIComponent$1(sequence);
        } catch (error) {
          return sequence;
        }
      };
      var deserialize = function(it) {
        var result = replace$1(it, plus, " ");
        var bytes = 4;
        try {
          return decodeURIComponent$1(result);
        } catch (error) {
          while (bytes) {
            result = replace$1(result, percentSequence(bytes--), percentDecode);
          }
          return result;
        }
      };
      var find = /[!'()~]|%20/g;
      var replacements = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+"
      };
      var replacer = function(match2) {
        return replacements[match2];
      };
      var serialize = function(it) {
        return replace$1(encodeURIComponent$1(it), find, replacer);
      };
      var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
        setInternalState$3(this, {
          type: URL_SEARCH_PARAMS_ITERATOR,
          iterator: getIterator$2(getInternalParamsState(params).entries),
          kind
        });
      }, "Iterator", function next() {
        var state = getInternalIteratorState(this);
        var kind = state.kind;
        var step = state.iterator.next();
        var entry = step.value;
        if (!step.done) {
          step.value = kind === "keys" ? entry.key : kind === "values" ? entry.value : [entry.key, entry.value];
        }
        return step;
      }, true);
      var URLSearchParamsState = function(init2) {
        this.entries = [];
        this.url = null;
        if (init2 !== void 0) {
          if (isObject$8(init2))
            this.parseObject(init2);
          else
            this.parseQuery(typeof init2 == "string" ? charAt$3(init2, 0) === "?" ? stringSlice$5(init2, 1) : init2 : $toString(init2));
        }
      };
      URLSearchParamsState.prototype = {
        type: URL_SEARCH_PARAMS,
        bindURL: function(url) {
          this.url = url;
          this.update();
        },
        parseObject: function(object) {
          var iteratorMethod = getIteratorMethod$2(object);
          var iterator, next, step, entryIterator, entryNext, first, second;
          if (iteratorMethod) {
            iterator = getIterator$2(object, iteratorMethod);
            next = iterator.next;
            while (!(step = call$c(next, iterator)).done) {
              entryIterator = getIterator$2(anObject$7(step.value));
              entryNext = entryIterator.next;
              if ((first = call$c(entryNext, entryIterator)).done || (second = call$c(entryNext, entryIterator)).done || !call$c(entryNext, entryIterator).done)
                throw TypeError$6("Expected sequence with length 2");
              push$3(this.entries, { key: $toString(first.value), value: $toString(second.value) });
            }
          } else
            for (var key2 in object)
              if (hasOwn$3(object, key2)) {
                push$3(this.entries, { key: key2, value: $toString(object[key2]) });
              }
        },
        parseQuery: function(query) {
          if (query) {
            var attributes = split(query, "&");
            var index = 0;
            var attribute, entry;
            while (index < attributes.length) {
              attribute = attributes[index++];
              if (attribute.length) {
                entry = split(attribute, "=");
                push$3(this.entries, {
                  key: deserialize(shift(entry)),
                  value: deserialize(join(entry, "="))
                });
              }
            }
          }
        },
        serialize: function() {
          var entries = this.entries;
          var result = [];
          var index = 0;
          var entry;
          while (index < entries.length) {
            entry = entries[index++];
            push$3(result, serialize(entry.key) + "=" + serialize(entry.value));
          }
          return join(result, "&");
        },
        update: function() {
          this.entries.length = 0;
          this.parseQuery(this.url.query);
        },
        updateURL: function() {
          if (this.url)
            this.url.update();
        }
      };
      var URLSearchParamsConstructor = function URLSearchParams2() {
        anInstance$3(this, URLSearchParamsPrototype);
        var init2 = arguments.length > 0 ? arguments[0] : void 0;
        setInternalState$3(this, new URLSearchParamsState(init2));
      };
      var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;
      defineBuiltIns$1(URLSearchParamsPrototype, {
        // `URLSearchParams.prototype.append` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-append
        append: function append(name, value) {
          validateArgumentsLength$1(arguments.length, 2);
          var state = getInternalParamsState(this);
          push$3(state.entries, { key: $toString(name), value: $toString(value) });
          state.updateURL();
        },
        // `URLSearchParams.prototype.delete` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
        "delete": function(name) {
          validateArgumentsLength$1(arguments.length, 1);
          var state = getInternalParamsState(this);
          var entries = state.entries;
          var key2 = $toString(name);
          var index = 0;
          while (index < entries.length) {
            if (entries[index].key === key2)
              splice(entries, index, 1);
            else
              index++;
          }
          state.updateURL();
        },
        // `URLSearchParams.prototype.get` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-get
        get: function get2(name) {
          validateArgumentsLength$1(arguments.length, 1);
          var entries = getInternalParamsState(this).entries;
          var key2 = $toString(name);
          var index = 0;
          for (; index < entries.length; index++) {
            if (entries[index].key === key2)
              return entries[index].value;
          }
          return null;
        },
        // `URLSearchParams.prototype.getAll` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
        getAll: function getAll(name) {
          validateArgumentsLength$1(arguments.length, 1);
          var entries = getInternalParamsState(this).entries;
          var key2 = $toString(name);
          var result = [];
          var index = 0;
          for (; index < entries.length; index++) {
            if (entries[index].key === key2)
              push$3(result, entries[index].value);
          }
          return result;
        },
        // `URLSearchParams.prototype.has` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-has
        has: function has2(name) {
          validateArgumentsLength$1(arguments.length, 1);
          var entries = getInternalParamsState(this).entries;
          var key2 = $toString(name);
          var index = 0;
          while (index < entries.length) {
            if (entries[index++].key === key2)
              return true;
          }
          return false;
        },
        // `URLSearchParams.prototype.set` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-set
        set: function set2(name, value) {
          validateArgumentsLength$1(arguments.length, 1);
          var state = getInternalParamsState(this);
          var entries = state.entries;
          var found = false;
          var key2 = $toString(name);
          var val = $toString(value);
          var index = 0;
          var entry;
          for (; index < entries.length; index++) {
            entry = entries[index];
            if (entry.key === key2) {
              if (found)
                splice(entries, index--, 1);
              else {
                found = true;
                entry.value = val;
              }
            }
          }
          if (!found)
            push$3(entries, { key: key2, value: val });
          state.updateURL();
        },
        // `URLSearchParams.prototype.sort` method
        // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
        sort: function sort() {
          var state = getInternalParamsState(this);
          arraySort(state.entries, function(a, b) {
            return a.key > b.key ? 1 : -1;
          });
          state.updateURL();
        },
        // `URLSearchParams.prototype.forEach` method
        forEach: function forEach2(callback) {
          var entries = getInternalParamsState(this).entries;
          var boundFunction = bind$6(callback, arguments.length > 1 ? arguments[1] : void 0);
          var index = 0;
          var entry;
          while (index < entries.length) {
            entry = entries[index++];
            boundFunction(entry.value, entry.key, this);
          }
        },
        // `URLSearchParams.prototype.keys` method
        keys: function keys2() {
          return new URLSearchParamsIterator(this, "keys");
        },
        // `URLSearchParams.prototype.values` method
        values: function values2() {
          return new URLSearchParamsIterator(this, "values");
        },
        // `URLSearchParams.prototype.entries` method
        entries: function entries() {
          return new URLSearchParamsIterator(this, "entries");
        }
      }, { enumerable: true });
      defineBuiltIn$3(URLSearchParamsPrototype, ITERATOR$2, URLSearchParamsPrototype.entries, { name: "entries" });
      defineBuiltIn$3(URLSearchParamsPrototype, "toString", function toString2() {
        return getInternalParamsState(this).serialize();
      }, { enumerable: true });
      setToStringTag$2(URLSearchParamsConstructor, URL_SEARCH_PARAMS);
      $$a({ global: true, constructor: true, forced: !USE_NATIVE_URL }, {
        URLSearchParams: URLSearchParamsConstructor
      });
      if (!USE_NATIVE_URL && isCallable$8(Headers)) {
        var headersHas = uncurryThis$c(HeadersPrototype.has);
        var headersSet = uncurryThis$c(HeadersPrototype.set);
        var wrapRequestOptions = function(init2) {
          if (isObject$8(init2)) {
            var body = init2.body;
            var headers;
            if (classof$6(body) === URL_SEARCH_PARAMS) {
              headers = init2.headers ? new Headers(init2.headers) : new Headers();
              if (!headersHas(headers, "content-type")) {
                headersSet(headers, "content-type", "application/x-www-form-urlencoded;charset=UTF-8");
              }
              return create$1(init2, {
                body: createPropertyDescriptor$1(0, $toString(body)),
                headers: createPropertyDescriptor$1(0, headers)
              });
            }
          }
          return init2;
        };
        if (isCallable$8(nativeFetch)) {
          $$a({ global: true, enumerable: true, dontCallGetSet: true, forced: true }, {
            fetch: function fetch(input) {
              return nativeFetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
            }
          });
        }
        if (isCallable$8(NativeRequest)) {
          var RequestConstructor = function Request(input) {
            anInstance$3(this, RequestPrototype);
            return new NativeRequest(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
          };
          RequestPrototype.constructor = RequestConstructor;
          RequestConstructor.prototype = RequestPrototype;
          $$a({ global: true, constructor: true, dontCallGetSet: true, forced: true }, {
            Request: RequestConstructor
          });
        }
      }
      var classof$5 = classofRaw$1;
      var global$n = global$V;
      var engineIsNode = classof$5(global$n.process) == "process";
      var getBuiltIn$3 = getBuiltIn$8;
      var definePropertyModule$1 = objectDefineProperty;
      var wellKnownSymbol$9 = wellKnownSymbol$m;
      var DESCRIPTORS$3 = descriptors;
      var SPECIES$3 = wellKnownSymbol$9("species");
      var setSpecies$2 = function(CONSTRUCTOR_NAME) {
        var Constructor2 = getBuiltIn$3(CONSTRUCTOR_NAME);
        var defineProperty2 = definePropertyModule$1.f;
        if (DESCRIPTORS$3 && Constructor2 && !Constructor2[SPECIES$3]) {
          defineProperty2(Constructor2, SPECIES$3, {
            configurable: true,
            get: function() {
              return this;
            }
          });
        }
      };
      var uncurryThis$b = functionUncurryThis;
      var fails$9 = fails$q;
      var isCallable$7 = isCallable$p;
      var classof$4 = classof$a;
      var getBuiltIn$2 = getBuiltIn$8;
      var inspectSource$1 = inspectSource$4;
      var noop = function() {
      };
      var empty = [];
      var construct = getBuiltIn$2("Reflect", "construct");
      var constructorRegExp = /^\s*(?:class|function)\b/;
      var exec$1 = uncurryThis$b(constructorRegExp.exec);
      var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
      var isConstructorModern = function isConstructor2(argument) {
        if (!isCallable$7(argument))
          return false;
        try {
          construct(noop, empty, argument);
          return true;
        } catch (error) {
          return false;
        }
      };
      var isConstructorLegacy = function isConstructor2(argument) {
        if (!isCallable$7(argument))
          return false;
        switch (classof$4(argument)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        try {
          return INCORRECT_TO_STRING || !!exec$1(constructorRegExp, inspectSource$1(argument));
        } catch (error) {
          return true;
        }
      };
      isConstructorLegacy.sham = true;
      var isConstructor$2 = !construct || fails$9(function() {
        var called2;
        return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
          called2 = true;
        }) || called2;
      }) ? isConstructorLegacy : isConstructorModern;
      var global$m = global$V;
      var isConstructor$1 = isConstructor$2;
      var tryToString$2 = tryToString$5;
      var TypeError$5 = global$m.TypeError;
      var aConstructor$2 = function(argument) {
        if (isConstructor$1(argument))
          return argument;
        throw TypeError$5(tryToString$2(argument) + " is not a constructor");
      };
      var anObject$6 = anObject$h;
      var aConstructor$1 = aConstructor$2;
      var wellKnownSymbol$8 = wellKnownSymbol$m;
      var SPECIES$2 = wellKnownSymbol$8("species");
      var speciesConstructor$3 = function(O, defaultConstructor) {
        var C = anObject$6(O).constructor;
        var S;
        return C === void 0 || (S = anObject$6(C)[SPECIES$2]) == void 0 ? defaultConstructor : aConstructor$1(S);
      };
      var NATIVE_BIND = functionBindNative;
      var FunctionPrototype = Function.prototype;
      var apply$4 = FunctionPrototype.apply;
      var call$b = FunctionPrototype.call;
      var functionApply = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND ? call$b.bind(apply$4) : function() {
        return call$b.apply(apply$4, arguments);
      });
      var uncurryThis$a = functionUncurryThis;
      var arraySlice$4 = uncurryThis$a([].slice);
      var userAgent$4 = engineUserAgent;
      var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);
      var global$l = global$V;
      var apply$3 = functionApply;
      var bind$5 = functionBindContext;
      var isCallable$6 = isCallable$p;
      var hasOwn$2 = hasOwnProperty_1;
      var fails$8 = fails$q;
      var html = html$2;
      var arraySlice$3 = arraySlice$4;
      var createElement = documentCreateElement$2;
      var validateArgumentsLength = validateArgumentsLength$2;
      var IS_IOS$1 = engineIsIos;
      var IS_NODE$2 = engineIsNode;
      var set$1 = global$l.setImmediate;
      var clear = global$l.clearImmediate;
      var process$2 = global$l.process;
      var Dispatch = global$l.Dispatch;
      var Function$1 = global$l.Function;
      var MessageChannel = global$l.MessageChannel;
      var String$1 = global$l.String;
      var counter = 0;
      var queue$1 = {};
      var ONREADYSTATECHANGE = "onreadystatechange";
      var location2, defer, channel, port;
      try {
        location2 = global$l.location;
      } catch (error) {
      }
      var run = function(id2) {
        if (hasOwn$2(queue$1, id2)) {
          var fn = queue$1[id2];
          delete queue$1[id2];
          fn();
        }
      };
      var runner = function(id2) {
        return function() {
          run(id2);
        };
      };
      var listener = function(event) {
        run(event.data);
      };
      var post = function(id2) {
        global$l.postMessage(String$1(id2), location2.protocol + "//" + location2.host);
      };
      if (!set$1 || !clear) {
        set$1 = function setImmediate(handler) {
          validateArgumentsLength(arguments.length, 1);
          var fn = isCallable$6(handler) ? handler : Function$1(handler);
          var args = arraySlice$3(arguments, 1);
          queue$1[++counter] = function() {
            apply$3(fn, void 0, args);
          };
          defer(counter);
          return counter;
        };
        clear = function clearImmediate(id2) {
          delete queue$1[id2];
        };
        if (IS_NODE$2) {
          defer = function(id2) {
            process$2.nextTick(runner(id2));
          };
        } else if (Dispatch && Dispatch.now) {
          defer = function(id2) {
            Dispatch.now(runner(id2));
          };
        } else if (MessageChannel && !IS_IOS$1) {
          channel = new MessageChannel();
          port = channel.port2;
          channel.port1.onmessage = listener;
          defer = bind$5(port.postMessage, port);
        } else if (global$l.addEventListener && isCallable$6(global$l.postMessage) && !global$l.importScripts && location2 && location2.protocol !== "file:" && !fails$8(post)) {
          defer = post;
          global$l.addEventListener("message", listener, false);
        } else if (ONREADYSTATECHANGE in createElement("script")) {
          defer = function(id2) {
            html.appendChild(createElement("script"))[ONREADYSTATECHANGE] = function() {
              html.removeChild(this);
              run(id2);
            };
          };
        } else {
          defer = function(id2) {
            setTimeout(runner(id2), 0);
          };
        }
      }
      var task$1 = {
        set: set$1,
        clear
      };
      var userAgent$3 = engineUserAgent;
      var global$k = global$V;
      var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && global$k.Pebble !== void 0;
      var userAgent$2 = engineUserAgent;
      var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);
      var global$j = global$V;
      var bind$4 = functionBindContext;
      var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;
      var macrotask = task$1.set;
      var IS_IOS = engineIsIos;
      var IS_IOS_PEBBLE = engineIsIosPebble;
      var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
      var IS_NODE$1 = engineIsNode;
      var MutationObserver = global$j.MutationObserver || global$j.WebKitMutationObserver;
      var document$2 = global$j.document;
      var process$1 = global$j.process;
      var Promise$1 = global$j.Promise;
      var queueMicrotaskDescriptor = getOwnPropertyDescriptor$2(global$j, "queueMicrotask");
      var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
      var flush, head, last, notify$1, toggle, node, promise, then;
      if (!queueMicrotask) {
        flush = function() {
          var parent, fn;
          if (IS_NODE$1 && (parent = process$1.domain))
            parent.exit();
          while (head) {
            fn = head.fn;
            head = head.next;
            try {
              fn();
            } catch (error) {
              if (head)
                notify$1();
              else
                last = void 0;
              throw error;
            }
          }
          last = void 0;
          if (parent)
            parent.enter();
        };
        if (!IS_IOS && !IS_NODE$1 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
          toggle = true;
          node = document$2.createTextNode("");
          new MutationObserver(flush).observe(node, { characterData: true });
          notify$1 = function() {
            node.data = toggle = !toggle;
          };
        } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {
          promise = Promise$1.resolve(void 0);
          promise.constructor = Promise$1;
          then = bind$4(promise.then, promise);
          notify$1 = function() {
            then(flush);
          };
        } else if (IS_NODE$1) {
          notify$1 = function() {
            process$1.nextTick(flush);
          };
        } else {
          macrotask = bind$4(macrotask, global$j);
          notify$1 = function() {
            macrotask(flush);
          };
        }
      }
      var microtask$1 = queueMicrotask || function(fn) {
        var task2 = { fn, next: void 0 };
        if (last)
          last.next = task2;
        if (!head) {
          head = task2;
          notify$1();
        }
        last = task2;
      };
      var global$i = global$V;
      var hostReportErrors$1 = function(a, b) {
        var console2 = global$i.console;
        if (console2 && console2.error) {
          arguments.length == 1 ? console2.error(a) : console2.error(a, b);
        }
      };
      var perform$3 = function(exec2) {
        try {
          return { error: false, value: exec2() };
        } catch (error) {
          return { error: true, value: error };
        }
      };
      var Queue$1 = function() {
        this.head = null;
        this.tail = null;
      };
      Queue$1.prototype = {
        add: function(item) {
          var entry = { item, next: null };
          if (this.head)
            this.tail.next = entry;
          else
            this.head = entry;
          this.tail = entry;
        },
        get: function() {
          var entry = this.head;
          if (entry) {
            this.head = entry.next;
            if (this.tail === entry)
              this.tail = null;
            return entry.item;
          }
        }
      };
      var queue = Queue$1;
      var global$h = global$V;
      var promiseNativeConstructor = global$h.Promise;
      var engineIsBrowser = typeof window == "object" && typeof Deno != "object";
      var global$g = global$V;
      var NativePromiseConstructor$3 = promiseNativeConstructor;
      var isCallable$5 = isCallable$p;
      var isForced = isForced_1;
      var inspectSource = inspectSource$4;
      var wellKnownSymbol$7 = wellKnownSymbol$m;
      var IS_BROWSER = engineIsBrowser;
      var V8_VERSION = engineV8Version;
      NativePromiseConstructor$3 && NativePromiseConstructor$3.prototype;
      var SPECIES$1 = wellKnownSymbol$7("species");
      var SUBCLASSING = false;
      var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$5(global$g.PromiseRejectionEvent);
      var FORCED_PROMISE_CONSTRUCTOR$5 = isForced("Promise", function() {
        var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$3);
        var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$3);
        if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66)
          return true;
        if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE))
          return false;
        var promise2 = new NativePromiseConstructor$3(function(resolve) {
          resolve(1);
        });
        var FakePromise = function(exec2) {
          exec2(function() {
          }, function() {
          });
        };
        var constructor = promise2.constructor = {};
        constructor[SPECIES$1] = FakePromise;
        SUBCLASSING = promise2.then(function() {
        }) instanceof FakePromise;
        if (!SUBCLASSING)
          return true;
        return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_PROMISE_REJECTION_EVENT$1;
      });
      var promiseConstructorDetection = {
        CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,
        REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,
        SUBCLASSING
      };
      var newPromiseCapability$2 = {};
      var aCallable$4 = aCallable$8;
      var PromiseCapability = function(C) {
        var resolve, reject;
        this.promise = new C(function($$resolve, $$reject) {
          if (resolve !== void 0 || reject !== void 0)
            throw TypeError("Bad Promise constructor");
          resolve = $$resolve;
          reject = $$reject;
        });
        this.resolve = aCallable$4(resolve);
        this.reject = aCallable$4(reject);
      };
      newPromiseCapability$2.f = function(C) {
        return new PromiseCapability(C);
      };
      var $$9 = _export;
      var IS_NODE = engineIsNode;
      var global$f = global$V;
      var call$a = functionCall;
      var defineBuiltIn$2 = defineBuiltIn$9;
      var setPrototypeOf$4 = objectSetPrototypeOf;
      var setToStringTag$1 = setToStringTag$5;
      var setSpecies$1 = setSpecies$2;
      var aCallable$3 = aCallable$8;
      var isCallable$4 = isCallable$p;
      var isObject$7 = isObject$e;
      var anInstance$2 = anInstance$4;
      var speciesConstructor$2 = speciesConstructor$3;
      var task = task$1.set;
      var microtask = microtask$1;
      var hostReportErrors = hostReportErrors$1;
      var perform$2 = perform$3;
      var Queue = queue;
      var InternalStateModule$2 = internalState;
      var NativePromiseConstructor$2 = promiseNativeConstructor;
      var PromiseConstructorDetection = promiseConstructorDetection;
      var newPromiseCapabilityModule$3 = newPromiseCapability$2;
      var PROMISE = "Promise";
      var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;
      var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
      var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
      var getInternalPromiseState = InternalStateModule$2.getterFor(PROMISE);
      var setInternalState$2 = InternalStateModule$2.set;
      var NativePromisePrototype$1 = NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;
      var PromiseConstructor = NativePromiseConstructor$2;
      var PromisePrototype = NativePromisePrototype$1;
      var TypeError$4 = global$f.TypeError;
      var document$1 = global$f.document;
      var process = global$f.process;
      var newPromiseCapability$1 = newPromiseCapabilityModule$3.f;
      var newGenericPromiseCapability = newPromiseCapability$1;
      var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$f.dispatchEvent);
      var UNHANDLED_REJECTION = "unhandledrejection";
      var REJECTION_HANDLED = "rejectionhandled";
      var PENDING = 0;
      var FULFILLED = 1;
      var REJECTED = 2;
      var HANDLED = 1;
      var UNHANDLED = 2;
      var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;
      var isThenable = function(it) {
        var then2;
        return isObject$7(it) && isCallable$4(then2 = it.then) ? then2 : false;
      };
      var callReaction = function(reaction, state) {
        var value = state.value;
        var ok = state.state == FULFILLED;
        var handler = ok ? reaction.ok : reaction.fail;
        var resolve = reaction.resolve;
        var reject = reaction.reject;
        var domain = reaction.domain;
        var result, then2, exited;
        try {
          if (handler) {
            if (!ok) {
              if (state.rejection === UNHANDLED)
                onHandleUnhandled(state);
              state.rejection = HANDLED;
            }
            if (handler === true)
              result = value;
            else {
              if (domain)
                domain.enter();
              result = handler(value);
              if (domain) {
                domain.exit();
                exited = true;
              }
            }
            if (result === reaction.promise) {
              reject(TypeError$4("Promise-chain cycle"));
            } else if (then2 = isThenable(result)) {
              call$a(then2, result, resolve, reject);
            } else
              resolve(result);
          } else
            reject(value);
        } catch (error) {
          if (domain && !exited)
            domain.exit();
          reject(error);
        }
      };
      var notify = function(state, isReject) {
        if (state.notified)
          return;
        state.notified = true;
        microtask(function() {
          var reactions = state.reactions;
          var reaction;
          while (reaction = reactions.get()) {
            callReaction(reaction, state);
          }
          state.notified = false;
          if (isReject && !state.rejection)
            onUnhandled(state);
        });
      };
      var dispatchEvent = function(name, promise2, reason) {
        var event, handler;
        if (DISPATCH_EVENT) {
          event = document$1.createEvent("Event");
          event.promise = promise2;
          event.reason = reason;
          event.initEvent(name, false, true);
          global$f.dispatchEvent(event);
        } else
          event = { promise: promise2, reason };
        if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$f["on" + name]))
          handler(event);
        else if (name === UNHANDLED_REJECTION)
          hostReportErrors("Unhandled promise rejection", reason);
      };
      var onUnhandled = function(state) {
        call$a(task, global$f, function() {
          var promise2 = state.facade;
          var value = state.value;
          var IS_UNHANDLED = isUnhandled(state);
          var result;
          if (IS_UNHANDLED) {
            result = perform$2(function() {
              if (IS_NODE) {
                process.emit("unhandledRejection", value, promise2);
              } else
                dispatchEvent(UNHANDLED_REJECTION, promise2, value);
            });
            state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
            if (result.error)
              throw result.value;
          }
        });
      };
      var isUnhandled = function(state) {
        return state.rejection !== HANDLED && !state.parent;
      };
      var onHandleUnhandled = function(state) {
        call$a(task, global$f, function() {
          var promise2 = state.facade;
          if (IS_NODE) {
            process.emit("rejectionHandled", promise2);
          } else
            dispatchEvent(REJECTION_HANDLED, promise2, state.value);
        });
      };
      var bind$3 = function(fn, state, unwrap) {
        return function(value) {
          fn(state, value, unwrap);
        };
      };
      var internalReject = function(state, value, unwrap) {
        if (state.done)
          return;
        state.done = true;
        if (unwrap)
          state = unwrap;
        state.value = value;
        state.state = REJECTED;
        notify(state, true);
      };
      var internalResolve = function(state, value, unwrap) {
        if (state.done)
          return;
        state.done = true;
        if (unwrap)
          state = unwrap;
        try {
          if (state.facade === value)
            throw TypeError$4("Promise can't be resolved itself");
          var then2 = isThenable(value);
          if (then2) {
            microtask(function() {
              var wrapper = { done: false };
              try {
                call$a(
                  then2,
                  value,
                  bind$3(internalResolve, wrapper, state),
                  bind$3(internalReject, wrapper, state)
                );
              } catch (error) {
                internalReject(wrapper, error, state);
              }
            });
          } else {
            state.value = value;
            state.state = FULFILLED;
            notify(state, false);
          }
        } catch (error) {
          internalReject({ done: false }, error, state);
        }
      };
      if (FORCED_PROMISE_CONSTRUCTOR$4) {
        PromiseConstructor = function Promise2(executor) {
          anInstance$2(this, PromisePrototype);
          aCallable$3(executor);
          call$a(Internal, this);
          var state = getInternalPromiseState(this);
          try {
            executor(bind$3(internalResolve, state), bind$3(internalReject, state));
          } catch (error) {
            internalReject(state, error);
          }
        };
        PromisePrototype = PromiseConstructor.prototype;
        Internal = function Promise2(executor) {
          setInternalState$2(this, {
            type: PROMISE,
            done: false,
            notified: false,
            parent: false,
            reactions: new Queue(),
            rejection: false,
            state: PENDING,
            value: void 0
          });
        };
        Internal.prototype = defineBuiltIn$2(PromisePrototype, "then", function then2(onFulfilled, onRejected) {
          var state = getInternalPromiseState(this);
          var reaction = newPromiseCapability$1(speciesConstructor$2(this, PromiseConstructor));
          state.parent = true;
          reaction.ok = isCallable$4(onFulfilled) ? onFulfilled : true;
          reaction.fail = isCallable$4(onRejected) && onRejected;
          reaction.domain = IS_NODE ? process.domain : void 0;
          if (state.state == PENDING)
            state.reactions.add(reaction);
          else
            microtask(function() {
              callReaction(reaction, state);
            });
          return reaction.promise;
        });
        OwnPromiseCapability = function() {
          var promise2 = new Internal();
          var state = getInternalPromiseState(promise2);
          this.promise = promise2;
          this.resolve = bind$3(internalResolve, state);
          this.reject = bind$3(internalReject, state);
        };
        newPromiseCapabilityModule$3.f = newPromiseCapability$1 = function(C) {
          return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
        };
        if (isCallable$4(NativePromiseConstructor$2) && NativePromisePrototype$1 !== Object.prototype) {
          nativeThen = NativePromisePrototype$1.then;
          if (!NATIVE_PROMISE_SUBCLASSING) {
            defineBuiltIn$2(NativePromisePrototype$1, "then", function then2(onFulfilled, onRejected) {
              var that = this;
              return new PromiseConstructor(function(resolve, reject) {
                call$a(nativeThen, that, resolve, reject);
              }).then(onFulfilled, onRejected);
            }, { unsafe: true });
          }
          try {
            delete NativePromisePrototype$1.constructor;
          } catch (error) {
          }
          if (setPrototypeOf$4) {
            setPrototypeOf$4(NativePromisePrototype$1, PromisePrototype);
          }
        }
      }
      $$9({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {
        Promise: PromiseConstructor
      });
      setToStringTag$1(PromiseConstructor, PROMISE, false);
      setSpecies$1(PROMISE);
      var wellKnownSymbol$6 = wellKnownSymbol$m;
      var Iterators = iterators;
      var ITERATOR$1 = wellKnownSymbol$6("iterator");
      var ArrayPrototype = Array.prototype;
      var isArrayIteratorMethod$2 = function(it) {
        return it !== void 0 && (Iterators.Array === it || ArrayPrototype[ITERATOR$1] === it);
      };
      var call$9 = functionCall;
      var anObject$5 = anObject$h;
      var getMethod$2 = getMethod$6;
      var iteratorClose$1 = function(iterator, kind, value) {
        var innerResult, innerError;
        anObject$5(iterator);
        try {
          innerResult = getMethod$2(iterator, "return");
          if (!innerResult) {
            if (kind === "throw")
              throw value;
            return value;
          }
          innerResult = call$9(innerResult, iterator);
        } catch (error) {
          innerError = true;
          innerResult = error;
        }
        if (kind === "throw")
          throw value;
        if (innerError)
          throw innerResult;
        anObject$5(innerResult);
        return value;
      };
      var global$e = global$V;
      var bind$2 = functionBindContext;
      var call$8 = functionCall;
      var anObject$4 = anObject$h;
      var tryToString$1 = tryToString$5;
      var isArrayIteratorMethod$1 = isArrayIteratorMethod$2;
      var lengthOfArrayLike$4 = lengthOfArrayLike$7;
      var isPrototypeOf$2 = objectIsPrototypeOf;
      var getIterator$1 = getIterator$3;
      var getIteratorMethod$1 = getIteratorMethod$4;
      var iteratorClose = iteratorClose$1;
      var TypeError$3 = global$e.TypeError;
      var Result = function(stopped, result) {
        this.stopped = stopped;
        this.result = result;
      };
      var ResultPrototype = Result.prototype;
      var iterate$2 = function(iterable, unboundFunction, options) {
        var that = options && options.that;
        var AS_ENTRIES = !!(options && options.AS_ENTRIES);
        var IS_ITERATOR = !!(options && options.IS_ITERATOR);
        var INTERRUPTED = !!(options && options.INTERRUPTED);
        var fn = bind$2(unboundFunction, that);
        var iterator, iterFn, index, length, result, next, step;
        var stop = function(condition) {
          if (iterator)
            iteratorClose(iterator, "normal", condition);
          return new Result(true, condition);
        };
        var callFn = function(value) {
          if (AS_ENTRIES) {
            anObject$4(value);
            return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
          }
          return INTERRUPTED ? fn(value, stop) : fn(value);
        };
        if (IS_ITERATOR) {
          iterator = iterable;
        } else {
          iterFn = getIteratorMethod$1(iterable);
          if (!iterFn)
            throw TypeError$3(tryToString$1(iterable) + " is not iterable");
          if (isArrayIteratorMethod$1(iterFn)) {
            for (index = 0, length = lengthOfArrayLike$4(iterable); length > index; index++) {
              result = callFn(iterable[index]);
              if (result && isPrototypeOf$2(ResultPrototype, result))
                return result;
            }
            return new Result(false);
          }
          iterator = getIterator$1(iterable, iterFn);
        }
        next = iterator.next;
        while (!(step = call$8(next, iterator)).done) {
          try {
            result = callFn(step.value);
          } catch (error) {
            iteratorClose(iterator, "throw", error);
          }
          if (typeof result == "object" && result && isPrototypeOf$2(ResultPrototype, result))
            return result;
        }
        return new Result(false);
      };
      var wellKnownSymbol$5 = wellKnownSymbol$m;
      var ITERATOR = wellKnownSymbol$5("iterator");
      var SAFE_CLOSING = false;
      try {
        var called = 0;
        var iteratorWithReturn = {
          next: function() {
            return { done: !!called++ };
          },
          "return": function() {
            SAFE_CLOSING = true;
          }
        };
        iteratorWithReturn[ITERATOR] = function() {
          return this;
        };
        Array.from(iteratorWithReturn, function() {
          throw 2;
        });
      } catch (error) {
      }
      var checkCorrectnessOfIteration$2 = function(exec2, SKIP_CLOSING) {
        if (!SKIP_CLOSING && !SAFE_CLOSING)
          return false;
        var ITERATION_SUPPORT = false;
        try {
          var object = {};
          object[ITERATOR] = function() {
            return {
              next: function() {
                return { done: ITERATION_SUPPORT = true };
              }
            };
          };
          exec2(object);
        } catch (error) {
        }
        return ITERATION_SUPPORT;
      };
      var NativePromiseConstructor$1 = promiseNativeConstructor;
      var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$2;
      var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;
      var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration$1(function(iterable) {
        NativePromiseConstructor$1.all(iterable).then(void 0, function() {
        });
      });
      var $$8 = _export;
      var call$7 = functionCall;
      var aCallable$2 = aCallable$8;
      var newPromiseCapabilityModule$2 = newPromiseCapability$2;
      var perform$1 = perform$3;
      var iterate$1 = iterate$2;
      var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;
      $$8({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$1 }, {
        all: function all(iterable) {
          var C = this;
          var capability = newPromiseCapabilityModule$2.f(C);
          var resolve = capability.resolve;
          var reject = capability.reject;
          var result = perform$1(function() {
            var $promiseResolve = aCallable$2(C.resolve);
            var values2 = [];
            var counter2 = 0;
            var remaining = 1;
            iterate$1(iterable, function(promise2) {
              var index = counter2++;
              var alreadyCalled = false;
              remaining++;
              call$7($promiseResolve, C, promise2).then(function(value) {
                if (alreadyCalled)
                  return;
                alreadyCalled = true;
                values2[index] = value;
                --remaining || resolve(values2);
              }, reject);
            });
            --remaining || resolve(values2);
          });
          if (result.error)
            reject(result.value);
          return capability.promise;
        }
      });
      var $$7 = _export;
      var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;
      var NativePromiseConstructor = promiseNativeConstructor;
      var getBuiltIn$1 = getBuiltIn$8;
      var isCallable$3 = isCallable$p;
      var defineBuiltIn$1 = defineBuiltIn$9;
      var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
      $$7({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$2, real: true }, {
        "catch": function(onRejected) {
          return this.then(void 0, onRejected);
        }
      });
      if (isCallable$3(NativePromiseConstructor)) {
        var method = getBuiltIn$1("Promise").prototype["catch"];
        if (NativePromisePrototype["catch"] !== method) {
          defineBuiltIn$1(NativePromisePrototype, "catch", method, { unsafe: true });
        }
      }
      var $$6 = _export;
      var call$6 = functionCall;
      var aCallable$1 = aCallable$8;
      var newPromiseCapabilityModule$1 = newPromiseCapability$2;
      var perform = perform$3;
      var iterate = iterate$2;
      var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;
      $$6({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
        race: function race(iterable) {
          var C = this;
          var capability = newPromiseCapabilityModule$1.f(C);
          var reject = capability.reject;
          var result = perform(function() {
            var $promiseResolve = aCallable$1(C.resolve);
            iterate(iterable, function(promise2) {
              call$6($promiseResolve, C, promise2).then(capability.resolve, reject);
            });
          });
          if (result.error)
            reject(result.value);
          return capability.promise;
        }
      });
      var $$5 = _export;
      var call$5 = functionCall;
      var newPromiseCapabilityModule = newPromiseCapability$2;
      var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;
      $$5({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {
        reject: function reject(r) {
          var capability = newPromiseCapabilityModule.f(this);
          call$5(capability.reject, void 0, r);
          return capability.promise;
        }
      });
      var anObject$3 = anObject$h;
      var isObject$6 = isObject$e;
      var newPromiseCapability = newPromiseCapability$2;
      var promiseResolve$1 = function(C, x) {
        anObject$3(C);
        if (isObject$6(x) && x.constructor === C)
          return x;
        var promiseCapability = newPromiseCapability.f(C);
        var resolve = promiseCapability.resolve;
        resolve(x);
        return promiseCapability.promise;
      };
      var $$4 = _export;
      var getBuiltIn = getBuiltIn$8;
      var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;
      var promiseResolve = promiseResolve$1;
      getBuiltIn("Promise");
      $$4({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
        resolve: function resolve(x) {
          return promiseResolve(this, x);
        }
      });
      var isObject$5 = isObject$e;
      var classof$3 = classofRaw$1;
      var wellKnownSymbol$4 = wellKnownSymbol$m;
      var MATCH$1 = wellKnownSymbol$4("match");
      var isRegexp = function(it) {
        var isRegExp2;
        return isObject$5(it) && ((isRegExp2 = it[MATCH$1]) !== void 0 ? !!isRegExp2 : classof$3(it) == "RegExp");
      };
      var uncurryThis$9 = functionUncurryThis;
      var toIntegerOrInfinity$4 = toIntegerOrInfinity$7;
      var toString$4 = toString$7;
      var requireObjectCoercible$4 = requireObjectCoercible$8;
      var charAt$2 = uncurryThis$9("".charAt);
      var charCodeAt = uncurryThis$9("".charCodeAt);
      var stringSlice$4 = uncurryThis$9("".slice);
      var createMethod$1 = function(CONVERT_TO_STRING) {
        return function($this, pos) {
          var S = toString$4(requireObjectCoercible$4($this));
          var position = toIntegerOrInfinity$4(pos);
          var size = S.length;
          var first, second;
          if (position < 0 || position >= size)
            return CONVERT_TO_STRING ? "" : void 0;
          first = charCodeAt(S, position);
          return first < 55296 || first > 56319 || position + 1 === size || (second = charCodeAt(S, position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt$2(S, position) : first : CONVERT_TO_STRING ? stringSlice$4(S, position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
        };
      };
      var stringMultibyte = {
        // `String.prototype.codePointAt` method
        // https://tc39.es/ecma262/#sec-string.prototype.codepointat
        codeAt: createMethod$1(false),
        // `String.prototype.at` method
        // https://github.com/mathiasbynens/String.prototype.at
        charAt: createMethod$1(true)
      };
      var charAt$1 = stringMultibyte.charAt;
      var advanceStringIndex$2 = function(S, index, unicode) {
        return index + (unicode ? charAt$1(S, index).length : 1);
      };
      var apply$2 = functionApply;
      var call$4 = functionCall;
      var uncurryThis$8 = functionUncurryThis;
      var fixRegExpWellKnownSymbolLogic$1 = fixRegexpWellKnownSymbolLogic;
      var isRegExp$1 = isRegexp;
      var anObject$2 = anObject$h;
      var requireObjectCoercible$3 = requireObjectCoercible$8;
      var speciesConstructor$1 = speciesConstructor$3;
      var advanceStringIndex$1 = advanceStringIndex$2;
      var toLength$7 = toLength$9;
      var toString$3 = toString$7;
      var getMethod$1 = getMethod$6;
      var arraySlice$2 = arraySliceSimple;
      var callRegExpExec = regexpExecAbstract;
      var regexpExec = regexpExec$3;
      var stickyHelpers = regexpStickyHelpers;
      var fails$7 = fails$q;
      var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
      var MAX_UINT32 = 4294967295;
      var min$3 = Math.min;
      var $push = [].push;
      var exec = uncurryThis$8(/./.exec);
      var push$2 = uncurryThis$8($push);
      var stringSlice$3 = uncurryThis$8("".slice);
      var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails$7(function() {
        var re = /(?:)/;
        var originalExec = re.exec;
        re.exec = function() {
          return originalExec.apply(this, arguments);
        };
        var result = "ab".split(re);
        return result.length !== 2 || result[0] !== "a" || result[1] !== "b";
      });
      fixRegExpWellKnownSymbolLogic$1("split", function(SPLIT, nativeSplit, maybeCallNative) {
        var internalSplit;
        if ("abbc".split(/(b)*/)[1] == "c" || // eslint-disable-next-line regexp/no-empty-group -- required for testing
        "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
        ".".split(/()()/).length > 1 || "".split(/.?/).length) {
          internalSplit = function(separator, limit) {
            var string = toString$3(requireObjectCoercible$3(this));
            var lim = limit === void 0 ? MAX_UINT32 : limit >>> 0;
            if (lim === 0)
              return [];
            if (separator === void 0)
              return [string];
            if (!isRegExp$1(separator)) {
              return call$4(nativeSplit, string, separator, lim);
            }
            var output = [];
            var flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.unicode ? "u" : "") + (separator.sticky ? "y" : "");
            var lastLastIndex = 0;
            var separatorCopy = new RegExp(separator.source, flags + "g");
            var match2, lastIndex, lastLength;
            while (match2 = call$4(regexpExec, separatorCopy, string)) {
              lastIndex = separatorCopy.lastIndex;
              if (lastIndex > lastLastIndex) {
                push$2(output, stringSlice$3(string, lastLastIndex, match2.index));
                if (match2.length > 1 && match2.index < string.length)
                  apply$2($push, output, arraySlice$2(match2, 1));
                lastLength = match2[0].length;
                lastLastIndex = lastIndex;
                if (output.length >= lim)
                  break;
              }
              if (separatorCopy.lastIndex === match2.index)
                separatorCopy.lastIndex++;
            }
            if (lastLastIndex === string.length) {
              if (lastLength || !exec(separatorCopy, ""))
                push$2(output, "");
            } else
              push$2(output, stringSlice$3(string, lastLastIndex));
            return output.length > lim ? arraySlice$2(output, 0, lim) : output;
          };
        } else if ("0".split(void 0, 0).length) {
          internalSplit = function(separator, limit) {
            return separator === void 0 && limit === 0 ? [] : call$4(nativeSplit, this, separator, limit);
          };
        } else
          internalSplit = nativeSplit;
        return [
          // `String.prototype.split` method
          // https://tc39.es/ecma262/#sec-string.prototype.split
          function split2(separator, limit) {
            var O = requireObjectCoercible$3(this);
            var splitter = separator == void 0 ? void 0 : getMethod$1(separator, SPLIT);
            return splitter ? call$4(splitter, separator, O, limit) : call$4(internalSplit, toString$3(O), separator, limit);
          },
          // `RegExp.prototype[@@split]` method
          // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
          //
          // NOTE: This cannot be properly polyfilled in engines that don't support
          // the 'y' flag.
          function(string, limit) {
            var rx = anObject$2(this);
            var S = toString$3(string);
            var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);
            if (res.done)
              return res.value;
            var C = speciesConstructor$1(rx, RegExp);
            var unicodeMatching = rx.unicode;
            var flags = (rx.ignoreCase ? "i" : "") + (rx.multiline ? "m" : "") + (rx.unicode ? "u" : "") + (UNSUPPORTED_Y ? "g" : "y");
            var splitter = new C(UNSUPPORTED_Y ? "^(?:" + rx.source + ")" : rx, flags);
            var lim = limit === void 0 ? MAX_UINT32 : limit >>> 0;
            if (lim === 0)
              return [];
            if (S.length === 0)
              return callRegExpExec(splitter, S) === null ? [S] : [];
            var p = 0;
            var q = 0;
            var A = [];
            while (q < S.length) {
              splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
              var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice$3(S, q) : S);
              var e;
              if (z === null || (e = min$3(toLength$7(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p) {
                q = advanceStringIndex$1(S, q, unicodeMatching);
              } else {
                push$2(A, stringSlice$3(S, p, q));
                if (A.length === lim)
                  return A;
                for (var i = 1; i <= z.length - 1; i++) {
                  push$2(A, z[i]);
                  if (A.length === lim)
                    return A;
                }
                q = p = e;
              }
            }
            push$2(A, stringSlice$3(S, p));
            return A;
          }
        ];
      }, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);
      const DEFAULT_CONFIG = {
        autoLogin: true,
        autoLogout: true,
        autoRefreshToken: false,
        idleTimeoutInMinutes: 30,
        uniqueSession: true,
        hooks: {}
      };
      const requiredParams = ["authHost", "clientId", "scopes"];
      const init$1 = (options) => {
        lodash.forEach(requiredParams, (p) => {
          if (!lodash.has(options, p)) {
            throw Error("Missing config parameter : " + p);
          }
        });
        if (!lodash.isArray(options.scopes)) {
          throw Error("Scopes must be an array with string values");
        }
        const config2 = Object.assign(Object.assign({}, DEFAULT_CONFIG), options);
        return config2;
      };
      var _LeapAuthService_authHost, _LeapAuthService_clientId, _LeapAuthService_xhr, _LeapAuthService_redirectUrl;
      const LEAP_AUTH_CLOSE_WINDOW_URL = "/oauth/close";
      class LeapAuthService {
        constructor(authHost, clientId) {
          _LeapAuthService_authHost.set(this, void 0);
          _LeapAuthService_clientId.set(this, void 0);
          this.getAccessTokenByJti = (jti) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "POST",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/oauth/token`,
                options: {
                  body: {
                    assertion: jti,
                    grant_type: "urn:ietf:params:oauth:grant-type:jti",
                    client_id: __classPrivateFieldGet(this, _LeapAuthService_clientId, "f")
                  }
                },
                accessToken: void 0
              }, (response, status) => {
                if (status === 200)
                  return resolve(response.access_token);
                else
                  return reject(response);
              });
            });
          };
          this.getRedirections = () => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: "https://cdn.leap.com.au/leap_auth/auth_agent/redirections_v2.json",
                options: null,
                accessToken: void 0
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.exchangeAuthCodeForAccessToken = (params) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "POST",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/oauth/token`,
                options: {
                  body: {
                    grant_type: "authorization_code",
                    code: params.code,
                    code_verifier: params.verifier,
                    client_id: __classPrivateFieldGet(this, _LeapAuthService_clientId, "f"),
                    redirect_uri: params.redirectUri
                  }
                },
                accessToken: void 0
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.renewAccessToken = (params) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "POST",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/oauth/token`,
                options: {
                  body: {
                    grant_type: "refresh_token",
                    refresh_token: params.refreshToken,
                    code_verifier: params.verifier,
                    client_id: __classPrivateFieldGet(this, _LeapAuthService_clientId, "f")
                  }
                },
                accessToken: void 0
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.userInfo = (token) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/api/userinfo`,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.linkUser = (params) => {
            const {
              jti,
              newWindow,
              callback
            } = params;
            const redirectUrl = newWindow ? __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + LEAP_AUTH_CLOSE_WINDOW_URL : params.redirectUrl;
            const requestUrl = `/cloudprovider/link?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}&prompt=none&jti=${jti}&callback=${redirectUrl}`;
            __classPrivateFieldGet(this, _LeapAuthService_redirectUrl, "f").call(this, {
              requestUrl,
              newWindow,
              callback
            });
          };
          this.unlinkUser = (params) => {
            const {
              jti,
              newWindow,
              callback
            } = params;
            const redirectUrl = newWindow ? __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + LEAP_AUTH_CLOSE_WINDOW_URL : params.redirectUrl;
            const requestUrl = `/cloudprovider/unlink?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}&jti=${jti}&callback=${redirectUrl}`;
            __classPrivateFieldGet(this, _LeapAuthService_redirectUrl, "f").call(this, {
              requestUrl,
              newWindow,
              callback
            });
          };
          this.getCloudProviderToken = (token, jti) => {
            const url = `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/accesstoken` + (jti ? "/" + jti : "");
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: url,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.cloudProviderUserInfo = (token) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/userinfo`,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.cloudProviderReauthenticate = (params) => {
            const {
              nonce,
              newWindow,
              callback
            } = params;
            const redirectUrl = newWindow ? __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + LEAP_AUTH_CLOSE_WINDOW_URL : params.redirectUrl;
            const requestUrl = `/cloudprovider/reauthenticate?nonce=${nonce}&redirectUrl=${redirectUrl}`;
            __classPrivateFieldGet(this, _LeapAuthService_redirectUrl, "f").call(this, {
              requestUrl,
              newWindow,
              callback
            });
          };
          this.cloudProviderReauthenticateLink = (token) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/reauthenticate/link`,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.cloudProviderUpdate = (params) => {
            const {
              firmId,
              cloudProviderId,
              token
            } = params;
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "PUT",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/api/firms/${firmId}`,
                options: {
                  body: {
                    id: firmId,
                    cloudProviderId
                  }
                },
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.statusAdminConsent = (token) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/adminconsent/status?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}`,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.getAdminConsent = (params) => {
            const {
              domain,
              newWindow,
              callback
            } = params;
            const redirectUrl = newWindow ? __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + LEAP_AUTH_CLOSE_WINDOW_URL : params.redirectUrl;
            const requestUrl = `/cloudprovider/adminconsent?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}&redirectUrl=${redirectUrl}${domain ? "&domain=" + domain : ""}`;
            __classPrivateFieldGet(this, _LeapAuthService_redirectUrl, "f").call(this, {
              requestUrl,
              newWindow,
              callback
            });
          };
          this.revokeAdminConsent = (token) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "DELETE",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/adminconsent?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}`,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 204)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.getLinkMap = (token, allUsers) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "GET",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/linkmap?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}${allUsers ? "&allUsers=true" : ""}`,
                options: null,
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.setLinkMap = (token, linkMap) => {
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "PUT",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/cloudprovider/linkmap?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}`,
                options: {
                  body: linkMap
                },
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.authoriseSupport = (token, params) => {
            const {
              code,
              duration
            } = params;
            return new Promise((resolve, reject) => {
              __classPrivateFieldGet(this, _LeapAuthService_xhr, "f").call(this, {
                method: "POST",
                endpoint: `${__classPrivateFieldGet(this, _LeapAuthService_authHost, "f")}/support/authorization`,
                options: {
                  body: {
                    requestCode: code,
                    duration,
                    client_id: __classPrivateFieldGet(this, _LeapAuthService_clientId, "f")
                  }
                },
                accessToken: token
              }, (response, status) => {
                if (status === 200)
                  return resolve(response);
                else
                  return reject(response);
              });
            });
          };
          this.changePassword = (params) => {
            const {
              newWindow,
              callback,
              redirectUrl
            } = params;
            let changePasswordUrl = `/oauth/changepassword?client_id=${__classPrivateFieldGet(this, _LeapAuthService_clientId, "f")}`;
            let redirect_uri = "";
            let noListener = false;
            if (newWindow) {
              if (!!callback && typeof callback === "function") {
                redirect_uri = __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + LEAP_AUTH_CLOSE_WINDOW_URL;
              } else {
                redirect_uri = "";
                noListener = true;
              }
            } else {
              redirect_uri = __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + "/oauth/logout?force=true&redirect_uri=" + (redirectUrl || window.location.href);
            }
            if (redirect_uri) {
              changePasswordUrl += `&redirect_uri=${encodeURIComponent(redirect_uri)}`;
            }
            __classPrivateFieldGet(this, _LeapAuthService_redirectUrl, "f").call(this, {
              requestUrl: changePasswordUrl,
              newWindow,
              callback,
              noListener
            });
          };
          _LeapAuthService_xhr.set(this, (params, onload) => {
            const {
              method: method2,
              endpoint,
              accessToken
            } = params;
            let {
              options
            } = params;
            options = lodash.merge({}, {
              contentType: "application/json",
              accessControlAllowOrigin: "*",
              body: void 0
            }, options || {});
            const xhr = new XMLHttpRequest();
            xhr.open(method2, endpoint, true);
            xhr.setRequestHeader("Content-type", options.contentType);
            xhr.setRequestHeader("Access-Control-Allow-Origin", options.accessControlAllowOrigin);
            if (accessToken)
              xhr.setRequestHeader("Authorization", "Bearer " + accessToken);
            xhr.onload = () => {
              try {
                let resp;
                if (xhr.response)
                  resp = JSON.parse(xhr.response);
                onload(resp, xhr.status);
              } catch (e) {
                onload(xhr.response, xhr.status);
              }
            };
            if (options.body)
              options.body = JSON.stringify(options.body);
            xhr.send(options.body);
          });
          _LeapAuthService_redirectUrl.set(this, (params) => {
            const {
              requestUrl,
              newWindow,
              callback,
              noListener
            } = params;
            const fullUrl = __classPrivateFieldGet(this, _LeapAuthService_authHost, "f") + requestUrl;
            if (newWindow) {
              const childWindow = window.open(fullUrl, "_blank");
              const eventHandler = (event) => {
                if (event && event.data === "closeMe" && childWindow) {
                  childWindow.close();
                  if (lodash.isFunction(callback)) {
                    callback();
                    window.removeEventListener("message", eventHandler, false);
                  }
                }
              };
              if (!noListener) {
                window.addEventListener("message", eventHandler, false);
              }
            } else {
              window.location.href = fullUrl;
            }
          });
          __classPrivateFieldSet(this, _LeapAuthService_authHost, authHost, "f");
          __classPrivateFieldSet(this, _LeapAuthService_clientId, clientId, "f");
        }
      }
      _LeapAuthService_authHost = /* @__PURE__ */ new WeakMap(), _LeapAuthService_clientId = /* @__PURE__ */ new WeakMap(), _LeapAuthService_xhr = /* @__PURE__ */ new WeakMap(), _LeapAuthService_redirectUrl = /* @__PURE__ */ new WeakMap();
      var HookName;
      (function(HookName2) {
        HookName2["afterLogin"] = "afterLogin";
        HookName2["beforeLogout"] = "beforeLogout";
        HookName2["uniqueSessionTrigger"] = "uniqueSessionTrigger";
        HookName2["afterRefreshToken"] = "afterRefreshToken";
      })(HookName || (HookName = {}));
      var _Notification_pubnubKeys, _Notification_pubnub, _Notification_eventListeners, _Notification_uniqueSessionTriggerHook, _Notification_initFirmChannel, _Notification_initUserChannel, _Notification_initUniqueSessionChannel;
      const EMPTY_GUID = "00000000-0000-0000-0000-000000000000";
      const USER_ACTION = {
        USERNAME_CHANGED: "1",
        PASSWORD_CHANGED: "2",
        USER_DISABLED: "3"
        //     3 - User has been disabled
      };
      class Notification {
        constructor() {
          _Notification_pubnubKeys.set(this, void 0);
          _Notification_pubnub.set(this, void 0);
          _Notification_eventListeners.set(this, []);
          _Notification_uniqueSessionTriggerHook.set(this, void 0);
          this.init = (params) => __awaiter(this, void 0, void 0, function* () {
            const {
              authHost,
              clientId,
              firmId,
              userId,
              uniqueSession,
              hooks
            } = params;
            if (!!hooks && hooks.uniqueSessionTrigger) {
              __classPrivateFieldSet(this, _Notification_uniqueSessionTriggerHook, hooks.uniqueSessionTrigger, "f");
            }
            __classPrivateFieldGet(this, _Notification_initFirmChannel, "f").call(this, firmId, userId);
            __classPrivateFieldGet(this, _Notification_initUserChannel, "f").call(this, userId);
            if (uniqueSession) {
              yield __classPrivateFieldGet(this, _Notification_initUniqueSessionChannel, "f").call(this, {
                authHost,
                clientId
              });
            }
          });
          this.destroy = () => {
            if (__classPrivateFieldGet(this, _Notification_pubnub, "f")) {
              __classPrivateFieldGet(this, _Notification_pubnub, "f").unsubscribeAll();
              __classPrivateFieldSet(this, _Notification_eventListeners, [], "f");
            }
          };
          this.registerEventListenerForUserChannel = (params) => {
            const {
              topic,
              messageType,
              callback
            } = params;
            if (!lodash.isFunction(callback)) {
              throw Error(`Registering Event Listener ${topic} ${messageType}: callback needs to be a function`);
            }
            __classPrivateFieldGet(this, _Notification_eventListeners, "f").push({
              topic,
              messageType,
              callback
            });
          };
          this.setUniqueSessionTriggerHook = (hook) => {
            __classPrivateFieldSet(this, _Notification_uniqueSessionTriggerHook, hook, "f");
          };
          _Notification_initFirmChannel.set(this, (firmId, userId) => {
            __classPrivateFieldGet(this, _Notification_pubnub, "f").addListener({
              presence: (presenceEvent) => {
                const {
                  action,
                  uuid: uuid2
                } = presenceEvent;
                if (uuid2 === __classPrivateFieldGet(this, _Notification_pubnubKeys, "f").uuid) {
                  return;
                }
                if (action === "leave" || action === "timeout") {
                  const valuesUUID = uuid2.split("~");
                  const userIdFromPresence = valuesUUID[0] || "";
                  const instanceGuidFromPresence = valuesUUID[1] || "";
                  const userActionFromPresence = valuesUUID[2] || "";
                  const isUserActionRequiredLogout = userActionFromPresence === USER_ACTION.USERNAME_CHANGED || userActionFromPresence === USER_ACTION.PASSWORD_CHANGED || userActionFromPresence === USER_ACTION.USER_DISABLED;
                  if (userIdFromPresence === userId && instanceGuidFromPresence === EMPTY_GUID && isUserActionRequiredLogout) {
                    AuthAgent2.logout(true);
                  }
                }
              }
            });
            __classPrivateFieldGet(this, _Notification_pubnub, "f").subscribe({
              channels: [firmId],
              withPresence: true
            });
          });
          _Notification_initUserChannel.set(this, (userId) => {
            __classPrivateFieldGet(this, _Notification_pubnub, "f").addListener({
              message: (data2) => {
                const {
                  content
                } = data2.message;
                if (content && content.topic && content.messageType && content.data) {
                  for (const eventListener of __classPrivateFieldGet(this, _Notification_eventListeners, "f")) {
                    if (eventListener.topic === content.topic && eventListener.messageType === content.messageType && eventListener.callback && lodash.isFunction(eventListener.callback)) {
                      return eventListener.callback(content.data);
                    }
                  }
                }
              }
            });
            __classPrivateFieldGet(this, _Notification_pubnub, "f").subscribe({
              channels: [`user_${userId}`],
              withPresence: false
            });
          });
          _Notification_initUniqueSessionChannel.set(this, (params) => __awaiter(this, void 0, void 0, function* () {
            const decodedToken = yield AuthAgent2.getDecodedAccessToken();
            const {
              authHost: myAuthHost,
              clientId: myClientId
            } = params;
            const {
              userId: myUserId,
              sessionId: mySessionId,
              impersonatorId: myImpersonatorId
            } = decodedToken;
            if (!decodedToken) {
              return;
            }
            const channel2 = `auth-session-${myUserId}`;
            __classPrivateFieldGet(this, _Notification_pubnub, "f").addListener({
              message: (data2) => __awaiter(this, void 0, void 0, function* () {
                const decodedToken2 = yield AuthAgent2.getDecodedAccessToken();
                if (!decodedToken2) {
                  AuthAgent2.logout(true);
                }
                const {
                  sessionId: mySessionId2,
                  impersonatorId: myImpersonatorId2,
                  userId: myUserId2
                } = decodedToken2;
                const myAgentId = localStorage.getItem("leap-auth-agent-id");
                if (myAgentId && data2 && data2.message) {
                  data2.message.sessionId;
                  const authHost = data2.message.authHost, clientId = data2.message.clientId, logout2 = data2.message.logout, agentId2 = data2.message.agentId, impersonatorId = myImpersonatorId2 ? myImpersonatorId2 : data2.message.impersonatorId;
                  if (authHost === myAuthHost) {
                    if (clientId === myClientId && agentId2 !== myAgentId || // same application, different browser => logout (unique session feature)
                    clientId !== myClientId && agentId2 === myAgentId && logout2) {
                      if (impersonatorId !== void 0 && impersonatorId !== "") {
                        console.log("user " + impersonatorId + " impersonating user " + myUserId2);
                      } else {
                        if (!!__classPrivateFieldGet(this, _Notification_uniqueSessionTriggerHook, "f") && lodash.isFunction(__classPrivateFieldGet(this, _Notification_uniqueSessionTriggerHook, "f"))) {
                          __classPrivateFieldGet(this, _Notification_uniqueSessionTriggerHook, "f").call(this);
                        } else {
                          AuthAgent2.logout(true);
                        }
                      }
                    }
                  }
                }
              })
            });
            __classPrivateFieldGet(this, _Notification_pubnub, "f").subscribe({
              channels: [channel2],
              withPresence: true
            });
            let agentId = localStorage.getItem("leap-auth-agent-id");
            if (!agentId) {
              agentId = uuid.v4();
              localStorage.setItem("leap-auth-agent-id", agentId);
            }
            __classPrivateFieldGet(this, _Notification_pubnub, "f").publish({
              message: {
                authHost: myAuthHost,
                clientId: myClientId,
                sessionId: mySessionId,
                agentId,
                impersonatorId: myImpersonatorId
              },
              channel: channel2
            }, (status) => {
              if (status.error) {
                console.log("pubnub error");
              }
            });
          }));
          __classPrivateFieldSet(this, _Notification_pubnubKeys, {
            publishKey: "pub-13f5288e-cd88-4ef9-9e68-0c11cd03ddb8",
            subscribeKey: "sub-a456f002-0095-11e2-9638-9581afc33ebf",
            uuid: uuid.v4()
          }, "f");
          __classPrivateFieldSet(this, _Notification_pubnub, new Pubnub__default["default"](__classPrivateFieldGet(this, _Notification_pubnubKeys, "f")), "f");
        }
      }
      _Notification_pubnubKeys = /* @__PURE__ */ new WeakMap(), _Notification_pubnub = /* @__PURE__ */ new WeakMap(), _Notification_eventListeners = /* @__PURE__ */ new WeakMap(), _Notification_uniqueSessionTriggerHook = /* @__PURE__ */ new WeakMap(), _Notification_initFirmChannel = /* @__PURE__ */ new WeakMap(), _Notification_initUserChannel = /* @__PURE__ */ new WeakMap(), _Notification_initUniqueSessionChannel = /* @__PURE__ */ new WeakMap();
      var uncurryThis$7 = functionUncurryThis;
      var toObject$3 = toObject$7;
      var floor$2 = Math.floor;
      var charAt = uncurryThis$7("".charAt);
      var replace = uncurryThis$7("".replace);
      var stringSlice$2 = uncurryThis$7("".slice);
      var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
      var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;
      var getSubstitution$1 = function(matched, str, position, captures, namedCaptures, replacement2) {
        var tailPos = position + matched.length;
        var m = captures.length;
        var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
        if (namedCaptures !== void 0) {
          namedCaptures = toObject$3(namedCaptures);
          symbols = SUBSTITUTION_SYMBOLS;
        }
        return replace(replacement2, symbols, function(match2, ch) {
          var capture;
          switch (charAt(ch, 0)) {
            case "$":
              return "$";
            case "&":
              return matched;
            case "`":
              return stringSlice$2(str, 0, position);
            case "'":
              return stringSlice$2(str, tailPos);
            case "<":
              capture = namedCaptures[stringSlice$2(ch, 1, -1)];
              break;
            default:
              var n = +ch;
              if (n === 0)
                return match2;
              if (n > m) {
                var f2 = floor$2(n / 10);
                if (f2 === 0)
                  return match2;
                if (f2 <= m)
                  return captures[f2 - 1] === void 0 ? charAt(ch, 1) : captures[f2 - 1] + charAt(ch, 1);
                return match2;
              }
              capture = captures[n - 1];
          }
          return capture === void 0 ? "" : capture;
        });
      };
      var apply$1 = functionApply;
      var call$3 = functionCall;
      var uncurryThis$6 = functionUncurryThis;
      var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
      var fails$6 = fails$q;
      var anObject$1 = anObject$h;
      var isCallable$2 = isCallable$p;
      var toIntegerOrInfinity$3 = toIntegerOrInfinity$7;
      var toLength$6 = toLength$9;
      var toString$2 = toString$7;
      var requireObjectCoercible$2 = requireObjectCoercible$8;
      var advanceStringIndex = advanceStringIndex$2;
      var getMethod = getMethod$6;
      var getSubstitution = getSubstitution$1;
      var regExpExec = regexpExecAbstract;
      var wellKnownSymbol$3 = wellKnownSymbol$m;
      var REPLACE = wellKnownSymbol$3("replace");
      var max = Math.max;
      var min$2 = Math.min;
      var concat = uncurryThis$6([].concat);
      var push$1 = uncurryThis$6([].push);
      var stringIndexOf = uncurryThis$6("".indexOf);
      var stringSlice$1 = uncurryThis$6("".slice);
      var maybeToString = function(it) {
        return it === void 0 ? it : String(it);
      };
      var REPLACE_KEEPS_$0 = function() {
        return "a".replace(/./, "$0") === "$0";
      }();
      var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function() {
        if (/./[REPLACE]) {
          return /./[REPLACE]("a", "$0") === "";
        }
        return false;
      }();
      var REPLACE_SUPPORTS_NAMED_GROUPS = !fails$6(function() {
        var re = /./;
        re.exec = function() {
          var result = [];
          result.groups = { a: "7" };
          return result;
        };
        return "".replace(re, "$<a>") !== "7";
      });
      fixRegExpWellKnownSymbolLogic("replace", function(_, nativeReplace2, maybeCallNative) {
        var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? "$" : "$0";
        return [
          // `String.prototype.replace` method
          // https://tc39.es/ecma262/#sec-string.prototype.replace
          function replace2(searchValue, replaceValue) {
            var O = requireObjectCoercible$2(this);
            var replacer2 = searchValue == void 0 ? void 0 : getMethod(searchValue, REPLACE);
            return replacer2 ? call$3(replacer2, searchValue, O, replaceValue) : call$3(nativeReplace2, toString$2(O), searchValue, replaceValue);
          },
          // `RegExp.prototype[@@replace]` method
          // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
          function(string, replaceValue) {
            var rx = anObject$1(this);
            var S = toString$2(string);
            if (typeof replaceValue == "string" && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, "$<") === -1) {
              var res = maybeCallNative(nativeReplace2, rx, S, replaceValue);
              if (res.done)
                return res.value;
            }
            var functionalReplace = isCallable$2(replaceValue);
            if (!functionalReplace)
              replaceValue = toString$2(replaceValue);
            var global2 = rx.global;
            if (global2) {
              var fullUnicode = rx.unicode;
              rx.lastIndex = 0;
            }
            var results = [];
            while (true) {
              var result = regExpExec(rx, S);
              if (result === null)
                break;
              push$1(results, result);
              if (!global2)
                break;
              var matchStr = toString$2(result[0]);
              if (matchStr === "")
                rx.lastIndex = advanceStringIndex(S, toLength$6(rx.lastIndex), fullUnicode);
            }
            var accumulatedResult = "";
            var nextSourcePosition = 0;
            for (var i = 0; i < results.length; i++) {
              result = results[i];
              var matched = toString$2(result[0]);
              var position = max(min$2(toIntegerOrInfinity$3(result.index), S.length), 0);
              var captures = [];
              for (var j2 = 1; j2 < result.length; j2++)
                push$1(captures, maybeToString(result[j2]));
              var namedCaptures = result.groups;
              if (functionalReplace) {
                var replacerArgs = concat([matched], captures, position, S);
                if (namedCaptures !== void 0)
                  push$1(replacerArgs, namedCaptures);
                var replacement2 = toString$2(apply$1(replaceValue, void 0, replacerArgs));
              } else {
                replacement2 = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
              }
              if (position >= nextSourcePosition) {
                accumulatedResult += stringSlice$1(S, nextSourcePosition, position) + replacement2;
                nextSourcePosition = position + matched.length;
              }
            }
            return accumulatedResult + stringSlice$1(S, nextSourcePosition);
          }
        ];
      }, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);
      var arrayBufferNative = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined";
      var global$d = global$V;
      var toIntegerOrInfinity$2 = toIntegerOrInfinity$7;
      var toLength$5 = toLength$9;
      var RangeError$5 = global$d.RangeError;
      var toIndex$2 = function(it) {
        if (it === void 0)
          return 0;
        var number = toIntegerOrInfinity$2(it);
        var length = toLength$5(number);
        if (number !== length)
          throw RangeError$5("Wrong length or index");
        return length;
      };
      var global$c = global$V;
      var Array$3 = global$c.Array;
      var abs = Math.abs;
      var pow = Math.pow;
      var floor$1 = Math.floor;
      var log = Math.log;
      var LN2 = Math.LN2;
      var pack = function(number, mantissaLength, bytes) {
        var buffer = Array$3(bytes);
        var exponentLength = bytes * 8 - mantissaLength - 1;
        var eMax = (1 << exponentLength) - 1;
        var eBias = eMax >> 1;
        var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
        var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
        var index = 0;
        var exponent, mantissa, c;
        number = abs(number);
        if (number != number || number === Infinity) {
          mantissa = number != number ? 1 : 0;
          exponent = eMax;
        } else {
          exponent = floor$1(log(number) / LN2);
          c = pow(2, -exponent);
          if (number * c < 1) {
            exponent--;
            c *= 2;
          }
          if (exponent + eBias >= 1) {
            number += rt / c;
          } else {
            number += rt * pow(2, 1 - eBias);
          }
          if (number * c >= 2) {
            exponent++;
            c /= 2;
          }
          if (exponent + eBias >= eMax) {
            mantissa = 0;
            exponent = eMax;
          } else if (exponent + eBias >= 1) {
            mantissa = (number * c - 1) * pow(2, mantissaLength);
            exponent = exponent + eBias;
          } else {
            mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
            exponent = 0;
          }
        }
        while (mantissaLength >= 8) {
          buffer[index++] = mantissa & 255;
          mantissa /= 256;
          mantissaLength -= 8;
        }
        exponent = exponent << mantissaLength | mantissa;
        exponentLength += mantissaLength;
        while (exponentLength > 0) {
          buffer[index++] = exponent & 255;
          exponent /= 256;
          exponentLength -= 8;
        }
        buffer[--index] |= sign * 128;
        return buffer;
      };
      var unpack = function(buffer, mantissaLength) {
        var bytes = buffer.length;
        var exponentLength = bytes * 8 - mantissaLength - 1;
        var eMax = (1 << exponentLength) - 1;
        var eBias = eMax >> 1;
        var nBits = exponentLength - 7;
        var index = bytes - 1;
        var sign = buffer[index--];
        var exponent = sign & 127;
        var mantissa;
        sign >>= 7;
        while (nBits > 0) {
          exponent = exponent * 256 + buffer[index--];
          nBits -= 8;
        }
        mantissa = exponent & (1 << -nBits) - 1;
        exponent >>= -nBits;
        nBits += mantissaLength;
        while (nBits > 0) {
          mantissa = mantissa * 256 + buffer[index--];
          nBits -= 8;
        }
        if (exponent === 0) {
          exponent = 1 - eBias;
        } else if (exponent === eMax) {
          return mantissa ? NaN : sign ? -Infinity : Infinity;
        } else {
          mantissa = mantissa + pow(2, mantissaLength);
          exponent = exponent - eBias;
        }
        return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
      };
      var ieee754 = {
        pack,
        unpack
      };
      var toObject$2 = toObject$7;
      var toAbsoluteIndex$1 = toAbsoluteIndex$4;
      var lengthOfArrayLike$3 = lengthOfArrayLike$7;
      var arrayFill$1 = function fill2(value) {
        var O = toObject$2(this);
        var length = lengthOfArrayLike$3(O);
        var argumentsLength = arguments.length;
        var index = toAbsoluteIndex$1(argumentsLength > 1 ? arguments[1] : void 0, length);
        var end = argumentsLength > 2 ? arguments[2] : void 0;
        var endPos = end === void 0 ? length : toAbsoluteIndex$1(end, length);
        while (endPos > index)
          O[index++] = value;
        return O;
      };
      var global$b = global$V;
      var uncurryThis$5 = functionUncurryThis;
      var DESCRIPTORS$2 = descriptors;
      var NATIVE_ARRAY_BUFFER$1 = arrayBufferNative;
      var FunctionName = functionName;
      var createNonEnumerableProperty$2 = createNonEnumerableProperty$9;
      var defineBuiltIns = defineBuiltIns$2;
      var fails$5 = fails$q;
      var anInstance$1 = anInstance$4;
      var toIntegerOrInfinity$1 = toIntegerOrInfinity$7;
      var toLength$4 = toLength$9;
      var toIndex$1 = toIndex$2;
      var IEEE754 = ieee754;
      var getPrototypeOf$1 = objectGetPrototypeOf;
      var setPrototypeOf$3 = objectSetPrototypeOf;
      var getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
      var defineProperty$1 = objectDefineProperty.f;
      var arrayFill = arrayFill$1;
      var arraySlice$1 = arraySliceSimple;
      var setToStringTag = setToStringTag$5;
      var InternalStateModule$1 = internalState;
      var PROPER_FUNCTION_NAME = FunctionName.PROPER;
      var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
      var getInternalState$1 = InternalStateModule$1.get;
      var setInternalState$1 = InternalStateModule$1.set;
      var ARRAY_BUFFER = "ArrayBuffer";
      var DATA_VIEW = "DataView";
      var PROTOTYPE = "prototype";
      var WRONG_LENGTH$1 = "Wrong length";
      var WRONG_INDEX = "Wrong index";
      var NativeArrayBuffer = global$b[ARRAY_BUFFER];
      var $ArrayBuffer = NativeArrayBuffer;
      var ArrayBufferPrototype$1 = $ArrayBuffer && $ArrayBuffer[PROTOTYPE];
      var $DataView = global$b[DATA_VIEW];
      var DataViewPrototype$1 = $DataView && $DataView[PROTOTYPE];
      var ObjectPrototype$1 = Object.prototype;
      var Array$2 = global$b.Array;
      var RangeError$4 = global$b.RangeError;
      var fill = uncurryThis$5(arrayFill);
      var reverse = uncurryThis$5([].reverse);
      var packIEEE754 = IEEE754.pack;
      var unpackIEEE754 = IEEE754.unpack;
      var packInt8 = function(number) {
        return [number & 255];
      };
      var packInt16 = function(number) {
        return [number & 255, number >> 8 & 255];
      };
      var packInt32 = function(number) {
        return [number & 255, number >> 8 & 255, number >> 16 & 255, number >> 24 & 255];
      };
      var unpackInt32 = function(buffer) {
        return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
      };
      var packFloat32 = function(number) {
        return packIEEE754(number, 23, 4);
      };
      var packFloat64 = function(number) {
        return packIEEE754(number, 52, 8);
      };
      var addGetter$1 = function(Constructor2, key2) {
        defineProperty$1(Constructor2[PROTOTYPE], key2, { get: function() {
          return getInternalState$1(this)[key2];
        } });
      };
      var get = function(view, count, index, isLittleEndian) {
        var intIndex = toIndex$1(index);
        var store2 = getInternalState$1(view);
        if (intIndex + count > store2.byteLength)
          throw RangeError$4(WRONG_INDEX);
        var bytes = getInternalState$1(store2.buffer).bytes;
        var start = intIndex + store2.byteOffset;
        var pack2 = arraySlice$1(bytes, start, start + count);
        return isLittleEndian ? pack2 : reverse(pack2);
      };
      var set = function(view, count, index, conversion, value, isLittleEndian) {
        var intIndex = toIndex$1(index);
        var store2 = getInternalState$1(view);
        if (intIndex + count > store2.byteLength)
          throw RangeError$4(WRONG_INDEX);
        var bytes = getInternalState$1(store2.buffer).bytes;
        var start = intIndex + store2.byteOffset;
        var pack2 = conversion(+value);
        for (var i = 0; i < count; i++)
          bytes[start + i] = pack2[isLittleEndian ? i : count - i - 1];
      };
      if (!NATIVE_ARRAY_BUFFER$1) {
        $ArrayBuffer = function ArrayBuffer2(length) {
          anInstance$1(this, ArrayBufferPrototype$1);
          var byteLength = toIndex$1(length);
          setInternalState$1(this, {
            bytes: fill(Array$2(byteLength), 0),
            byteLength
          });
          if (!DESCRIPTORS$2)
            this.byteLength = byteLength;
        };
        ArrayBufferPrototype$1 = $ArrayBuffer[PROTOTYPE];
        $DataView = function DataView2(buffer, byteOffset, byteLength) {
          anInstance$1(this, DataViewPrototype$1);
          anInstance$1(buffer, ArrayBufferPrototype$1);
          var bufferLength = getInternalState$1(buffer).byteLength;
          var offset = toIntegerOrInfinity$1(byteOffset);
          if (offset < 0 || offset > bufferLength)
            throw RangeError$4("Wrong offset");
          byteLength = byteLength === void 0 ? bufferLength - offset : toLength$4(byteLength);
          if (offset + byteLength > bufferLength)
            throw RangeError$4(WRONG_LENGTH$1);
          setInternalState$1(this, {
            buffer,
            byteLength,
            byteOffset: offset
          });
          if (!DESCRIPTORS$2) {
            this.buffer = buffer;
            this.byteLength = byteLength;
            this.byteOffset = offset;
          }
        };
        DataViewPrototype$1 = $DataView[PROTOTYPE];
        if (DESCRIPTORS$2) {
          addGetter$1($ArrayBuffer, "byteLength");
          addGetter$1($DataView, "buffer");
          addGetter$1($DataView, "byteLength");
          addGetter$1($DataView, "byteOffset");
        }
        defineBuiltIns(DataViewPrototype$1, {
          getInt8: function getInt8(byteOffset) {
            return get(this, 1, byteOffset)[0] << 24 >> 24;
          },
          getUint8: function getUint82(byteOffset) {
            return get(this, 1, byteOffset)[0];
          },
          getInt16: function getInt16(byteOffset) {
            var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : void 0);
            return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
          },
          getUint16: function getUint16(byteOffset) {
            var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : void 0);
            return bytes[1] << 8 | bytes[0];
          },
          getInt32: function getInt32(byteOffset) {
            return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : void 0));
          },
          getUint32: function getUint32(byteOffset) {
            return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
          },
          getFloat32: function getFloat32(byteOffset) {
            return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : void 0), 23);
          },
          getFloat64: function getFloat64(byteOffset) {
            return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : void 0), 52);
          },
          setInt8: function setInt8(byteOffset, value) {
            set(this, 1, byteOffset, packInt8, value);
          },
          setUint8: function setUint82(byteOffset, value) {
            set(this, 1, byteOffset, packInt8, value);
          },
          setInt16: function setInt16(byteOffset, value) {
            set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : void 0);
          },
          setUint16: function setUint16(byteOffset, value) {
            set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : void 0);
          },
          setInt32: function setInt32(byteOffset, value) {
            set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : void 0);
          },
          setUint32: function setUint32(byteOffset, value) {
            set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : void 0);
          },
          setFloat32: function setFloat32(byteOffset, value) {
            set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : void 0);
          },
          setFloat64: function setFloat64(byteOffset, value) {
            set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : void 0);
          }
        });
      } else {
        var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;
        if (!fails$5(function() {
          NativeArrayBuffer(1);
        }) || !fails$5(function() {
          new NativeArrayBuffer(-1);
        }) || fails$5(function() {
          new NativeArrayBuffer();
          new NativeArrayBuffer(1.5);
          new NativeArrayBuffer(NaN);
          return INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
        })) {
          $ArrayBuffer = function ArrayBuffer2(length) {
            anInstance$1(this, ArrayBufferPrototype$1);
            return new NativeArrayBuffer(toIndex$1(length));
          };
          $ArrayBuffer[PROTOTYPE] = ArrayBufferPrototype$1;
          for (var keys = getOwnPropertyNames$1(NativeArrayBuffer), j = 0, key; keys.length > j; ) {
            if (!((key = keys[j++]) in $ArrayBuffer)) {
              createNonEnumerableProperty$2($ArrayBuffer, key, NativeArrayBuffer[key]);
            }
          }
          ArrayBufferPrototype$1.constructor = $ArrayBuffer;
        } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
          createNonEnumerableProperty$2(NativeArrayBuffer, "name", ARRAY_BUFFER);
        }
        if (setPrototypeOf$3 && getPrototypeOf$1(DataViewPrototype$1) !== ObjectPrototype$1) {
          setPrototypeOf$3(DataViewPrototype$1, ObjectPrototype$1);
        }
        var testView = new $DataView(new $ArrayBuffer(2));
        var $setInt8 = uncurryThis$5(DataViewPrototype$1.setInt8);
        testView.setInt8(0, 2147483648);
        testView.setInt8(1, 2147483649);
        if (testView.getInt8(0) || !testView.getInt8(1))
          defineBuiltIns(DataViewPrototype$1, {
            setInt8: function setInt8(byteOffset, value) {
              $setInt8(this, byteOffset, value << 24 >> 24);
            },
            setUint8: function setUint82(byteOffset, value) {
              $setInt8(this, byteOffset, value << 24 >> 24);
            }
          }, { unsafe: true });
      }
      setToStringTag($ArrayBuffer, ARRAY_BUFFER);
      setToStringTag($DataView, DATA_VIEW);
      var arrayBuffer = {
        ArrayBuffer: $ArrayBuffer,
        DataView: $DataView
      };
      var $$3 = _export;
      var uncurryThis$4 = functionUncurryThis;
      var fails$4 = fails$q;
      var ArrayBufferModule$1 = arrayBuffer;
      var anObject = anObject$h;
      var toAbsoluteIndex = toAbsoluteIndex$4;
      var toLength$3 = toLength$9;
      var speciesConstructor = speciesConstructor$3;
      var ArrayBuffer$3 = ArrayBufferModule$1.ArrayBuffer;
      var DataView$2 = ArrayBufferModule$1.DataView;
      var DataViewPrototype = DataView$2.prototype;
      var un$ArrayBufferSlice = uncurryThis$4(ArrayBuffer$3.prototype.slice);
      var getUint8 = uncurryThis$4(DataViewPrototype.getUint8);
      var setUint8 = uncurryThis$4(DataViewPrototype.setUint8);
      var INCORRECT_SLICE = fails$4(function() {
        return !new ArrayBuffer$3(2).slice(1, void 0).byteLength;
      });
      $$3({ target: "ArrayBuffer", proto: true, unsafe: true, forced: INCORRECT_SLICE }, {
        slice: function slice2(start, end) {
          if (un$ArrayBufferSlice && end === void 0) {
            return un$ArrayBufferSlice(anObject(this), start);
          }
          var length = anObject(this).byteLength;
          var first = toAbsoluteIndex(start, length);
          var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
          var result = new (speciesConstructor(this, ArrayBuffer$3))(toLength$3(fin - first));
          var viewSource = new DataView$2(this);
          var viewTarget = new DataView$2(result);
          var index = 0;
          while (first < fin) {
            setUint8(viewTarget, index++, getUint8(viewSource, first++));
          }
          return result;
        }
      });
      var typedArrayConstructor = { exports: {} };
      var NATIVE_ARRAY_BUFFER = arrayBufferNative;
      var DESCRIPTORS$1 = descriptors;
      var global$a = global$V;
      var isCallable$1 = isCallable$p;
      var isObject$4 = isObject$e;
      var hasOwn$1 = hasOwnProperty_1;
      var classof$2 = classof$a;
      var tryToString = tryToString$5;
      var createNonEnumerableProperty$1 = createNonEnumerableProperty$9;
      var defineBuiltIn = defineBuiltIn$9;
      var defineProperty = objectDefineProperty.f;
      var isPrototypeOf$1 = objectIsPrototypeOf;
      var getPrototypeOf = objectGetPrototypeOf;
      var setPrototypeOf$2 = objectSetPrototypeOf;
      var wellKnownSymbol$2 = wellKnownSymbol$m;
      var uid = uid$3;
      var Int8Array$3 = global$a.Int8Array;
      var Int8ArrayPrototype$1 = Int8Array$3 && Int8Array$3.prototype;
      var Uint8ClampedArray$1 = global$a.Uint8ClampedArray;
      var Uint8ClampedArrayPrototype = Uint8ClampedArray$1 && Uint8ClampedArray$1.prototype;
      var TypedArray$1 = Int8Array$3 && getPrototypeOf(Int8Array$3);
      var TypedArrayPrototype$1 = Int8ArrayPrototype$1 && getPrototypeOf(Int8ArrayPrototype$1);
      var ObjectPrototype = Object.prototype;
      var TypeError$2 = global$a.TypeError;
      var TO_STRING_TAG = wellKnownSymbol$2("toStringTag");
      var TYPED_ARRAY_TAG$1 = uid("TYPED_ARRAY_TAG");
      var TYPED_ARRAY_CONSTRUCTOR$1 = uid("TYPED_ARRAY_CONSTRUCTOR");
      var NATIVE_ARRAY_BUFFER_VIEWS$2 = NATIVE_ARRAY_BUFFER && !!setPrototypeOf$2 && classof$2(global$a.opera) !== "Opera";
      var TYPED_ARRAY_TAG_REQUIRED = false;
      var NAME, Constructor, Prototype;
      var TypedArrayConstructorsList = {
        Int8Array: 1,
        Uint8Array: 1,
        Uint8ClampedArray: 1,
        Int16Array: 2,
        Uint16Array: 2,
        Int32Array: 4,
        Uint32Array: 4,
        Float32Array: 4,
        Float64Array: 8
      };
      var BigIntArrayConstructorsList = {
        BigInt64Array: 8,
        BigUint64Array: 8
      };
      var isView = function isView2(it) {
        if (!isObject$4(it))
          return false;
        var klass = classof$2(it);
        return klass === "DataView" || hasOwn$1(TypedArrayConstructorsList, klass) || hasOwn$1(BigIntArrayConstructorsList, klass);
      };
      var isTypedArray$1 = function(it) {
        if (!isObject$4(it))
          return false;
        var klass = classof$2(it);
        return hasOwn$1(TypedArrayConstructorsList, klass) || hasOwn$1(BigIntArrayConstructorsList, klass);
      };
      var aTypedArray$3 = function(it) {
        if (isTypedArray$1(it))
          return it;
        throw TypeError$2("Target is not a typed array");
      };
      var aTypedArrayConstructor$2 = function(C) {
        if (isCallable$1(C) && (!setPrototypeOf$2 || isPrototypeOf$1(TypedArray$1, C)))
          return C;
        throw TypeError$2(tryToString(C) + " is not a typed array constructor");
      };
      var exportTypedArrayMethod$3 = function(KEY, property, forced, options) {
        if (!DESCRIPTORS$1)
          return;
        if (forced)
          for (var ARRAY in TypedArrayConstructorsList) {
            var TypedArrayConstructor = global$a[ARRAY];
            if (TypedArrayConstructor && hasOwn$1(TypedArrayConstructor.prototype, KEY))
              try {
                delete TypedArrayConstructor.prototype[KEY];
              } catch (error) {
                try {
                  TypedArrayConstructor.prototype[KEY] = property;
                } catch (error2) {
                }
              }
          }
        if (!TypedArrayPrototype$1[KEY] || forced) {
          defineBuiltIn(TypedArrayPrototype$1, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS$2 && Int8ArrayPrototype$1[KEY] || property, options);
        }
      };
      var exportTypedArrayStaticMethod = function(KEY, property, forced) {
        var ARRAY, TypedArrayConstructor;
        if (!DESCRIPTORS$1)
          return;
        if (setPrototypeOf$2) {
          if (forced)
            for (ARRAY in TypedArrayConstructorsList) {
              TypedArrayConstructor = global$a[ARRAY];
              if (TypedArrayConstructor && hasOwn$1(TypedArrayConstructor, KEY))
                try {
                  delete TypedArrayConstructor[KEY];
                } catch (error) {
                }
            }
          if (!TypedArray$1[KEY] || forced) {
            try {
              return defineBuiltIn(TypedArray$1, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS$2 && TypedArray$1[KEY] || property);
            } catch (error) {
            }
          } else
            return;
        }
        for (ARRAY in TypedArrayConstructorsList) {
          TypedArrayConstructor = global$a[ARRAY];
          if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
            defineBuiltIn(TypedArrayConstructor, KEY, property);
          }
        }
      };
      for (NAME in TypedArrayConstructorsList) {
        Constructor = global$a[NAME];
        Prototype = Constructor && Constructor.prototype;
        if (Prototype)
          createNonEnumerableProperty$1(Prototype, TYPED_ARRAY_CONSTRUCTOR$1, Constructor);
        else
          NATIVE_ARRAY_BUFFER_VIEWS$2 = false;
      }
      for (NAME in BigIntArrayConstructorsList) {
        Constructor = global$a[NAME];
        Prototype = Constructor && Constructor.prototype;
        if (Prototype)
          createNonEnumerableProperty$1(Prototype, TYPED_ARRAY_CONSTRUCTOR$1, Constructor);
      }
      if (!NATIVE_ARRAY_BUFFER_VIEWS$2 || !isCallable$1(TypedArray$1) || TypedArray$1 === Function.prototype) {
        TypedArray$1 = function TypedArray2() {
          throw TypeError$2("Incorrect invocation");
        };
        if (NATIVE_ARRAY_BUFFER_VIEWS$2)
          for (NAME in TypedArrayConstructorsList) {
            if (global$a[NAME])
              setPrototypeOf$2(global$a[NAME], TypedArray$1);
          }
      }
      if (!NATIVE_ARRAY_BUFFER_VIEWS$2 || !TypedArrayPrototype$1 || TypedArrayPrototype$1 === ObjectPrototype) {
        TypedArrayPrototype$1 = TypedArray$1.prototype;
        if (NATIVE_ARRAY_BUFFER_VIEWS$2)
          for (NAME in TypedArrayConstructorsList) {
            if (global$a[NAME])
              setPrototypeOf$2(global$a[NAME].prototype, TypedArrayPrototype$1);
          }
      }
      if (NATIVE_ARRAY_BUFFER_VIEWS$2 && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype$1) {
        setPrototypeOf$2(Uint8ClampedArrayPrototype, TypedArrayPrototype$1);
      }
      if (DESCRIPTORS$1 && !hasOwn$1(TypedArrayPrototype$1, TO_STRING_TAG)) {
        TYPED_ARRAY_TAG_REQUIRED = true;
        defineProperty(TypedArrayPrototype$1, TO_STRING_TAG, { get: function() {
          return isObject$4(this) ? this[TYPED_ARRAY_TAG$1] : void 0;
        } });
        for (NAME in TypedArrayConstructorsList)
          if (global$a[NAME]) {
            createNonEnumerableProperty$1(global$a[NAME], TYPED_ARRAY_TAG$1, NAME);
          }
      }
      var arrayBufferViewCore = {
        NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS$2,
        TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR$1,
        TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG$1,
        aTypedArray: aTypedArray$3,
        aTypedArrayConstructor: aTypedArrayConstructor$2,
        exportTypedArrayMethod: exportTypedArrayMethod$3,
        exportTypedArrayStaticMethod,
        isView,
        isTypedArray: isTypedArray$1,
        TypedArray: TypedArray$1,
        TypedArrayPrototype: TypedArrayPrototype$1
      };
      var global$9 = global$V;
      var fails$3 = fails$q;
      var checkCorrectnessOfIteration = checkCorrectnessOfIteration$2;
      var NATIVE_ARRAY_BUFFER_VIEWS$1 = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
      var ArrayBuffer$2 = global$9.ArrayBuffer;
      var Int8Array$2 = global$9.Int8Array;
      var typedArrayConstructorsRequireWrappers = !NATIVE_ARRAY_BUFFER_VIEWS$1 || !fails$3(function() {
        Int8Array$2(1);
      }) || !fails$3(function() {
        new Int8Array$2(-1);
      }) || !checkCorrectnessOfIteration(function(iterable) {
        new Int8Array$2();
        new Int8Array$2(null);
        new Int8Array$2(1.5);
        new Int8Array$2(iterable);
      }, true) || fails$3(function() {
        return new Int8Array$2(new ArrayBuffer$2(2), 1, void 0).length !== 1;
      });
      var isObject$3 = isObject$e;
      var floor = Math.floor;
      var isIntegralNumber$1 = Number.isInteger || function isInteger(it) {
        return !isObject$3(it) && isFinite(it) && floor(it) === it;
      };
      var global$8 = global$V;
      var toIntegerOrInfinity = toIntegerOrInfinity$7;
      var RangeError$3 = global$8.RangeError;
      var toPositiveInteger$1 = function(it) {
        var result = toIntegerOrInfinity(it);
        if (result < 0)
          throw RangeError$3("The argument can't be less than 0");
        return result;
      };
      var global$7 = global$V;
      var toPositiveInteger = toPositiveInteger$1;
      var RangeError$2 = global$7.RangeError;
      var toOffset$2 = function(it, BYTES) {
        var offset = toPositiveInteger(it);
        if (offset % BYTES)
          throw RangeError$2("Wrong offset");
        return offset;
      };
      var bind$1 = functionBindContext;
      var call$2 = functionCall;
      var aConstructor = aConstructor$2;
      var toObject$1 = toObject$7;
      var lengthOfArrayLike$2 = lengthOfArrayLike$7;
      var getIterator = getIterator$3;
      var getIteratorMethod = getIteratorMethod$4;
      var isArrayIteratorMethod = isArrayIteratorMethod$2;
      var aTypedArrayConstructor$1 = arrayBufferViewCore.aTypedArrayConstructor;
      var typedArrayFrom$1 = function from(source) {
        var C = aConstructor(this);
        var O = toObject$1(source);
        var argumentsLength = arguments.length;
        var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
        var mapping = mapfn !== void 0;
        var iteratorMethod = getIteratorMethod(O);
        var i, length, result, step, iterator, next;
        if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
          iterator = getIterator(O, iteratorMethod);
          next = iterator.next;
          O = [];
          while (!(step = call$2(next, iterator)).done) {
            O.push(step.value);
          }
        }
        if (mapping && argumentsLength > 2) {
          mapfn = bind$1(mapfn, arguments[2]);
        }
        length = lengthOfArrayLike$2(O);
        result = new (aTypedArrayConstructor$1(C))(length);
        for (i = 0; length > i; i++) {
          result[i] = mapping ? mapfn(O[i], i) : O[i];
        }
        return result;
      };
      var classof$1 = classofRaw$1;
      var isArray$1 = Array.isArray || function isArray2(argument) {
        return classof$1(argument) == "Array";
      };
      var global$6 = global$V;
      var isArray = isArray$1;
      var isConstructor = isConstructor$2;
      var isObject$2 = isObject$e;
      var wellKnownSymbol$1 = wellKnownSymbol$m;
      var SPECIES = wellKnownSymbol$1("species");
      var Array$1 = global$6.Array;
      var arraySpeciesConstructor$1 = function(originalArray) {
        var C;
        if (isArray(originalArray)) {
          C = originalArray.constructor;
          if (isConstructor(C) && (C === Array$1 || isArray(C.prototype)))
            C = void 0;
          else if (isObject$2(C)) {
            C = C[SPECIES];
            if (C === null)
              C = void 0;
          }
        }
        return C === void 0 ? Array$1 : C;
      };
      var arraySpeciesConstructor = arraySpeciesConstructor$1;
      var arraySpeciesCreate$1 = function(originalArray, length) {
        return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
      };
      var bind = functionBindContext;
      var uncurryThis$3 = functionUncurryThis;
      var IndexedObject = indexedObject;
      var toObject = toObject$7;
      var lengthOfArrayLike$1 = lengthOfArrayLike$7;
      var arraySpeciesCreate = arraySpeciesCreate$1;
      var push = uncurryThis$3([].push);
      var createMethod = function(TYPE) {
        var IS_MAP = TYPE == 1;
        var IS_FILTER = TYPE == 2;
        var IS_SOME = TYPE == 3;
        var IS_EVERY = TYPE == 4;
        var IS_FIND_INDEX = TYPE == 6;
        var IS_FILTER_REJECT = TYPE == 7;
        var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
        return function($this, callbackfn, that, specificCreate) {
          var O = toObject($this);
          var self2 = IndexedObject(O);
          var boundFunction = bind(callbackfn, that);
          var length = lengthOfArrayLike$1(self2);
          var index = 0;
          var create2 = specificCreate || arraySpeciesCreate;
          var target = IS_MAP ? create2($this, length) : IS_FILTER || IS_FILTER_REJECT ? create2($this, 0) : void 0;
          var value, result;
          for (; length > index; index++)
            if (NO_HOLES || index in self2) {
              value = self2[index];
              result = boundFunction(value, index, O);
              if (TYPE) {
                if (IS_MAP)
                  target[index] = result;
                else if (result)
                  switch (TYPE) {
                    case 3:
                      return true;
                    case 5:
                      return value;
                    case 6:
                      return index;
                    case 2:
                      push(target, value);
                  }
                else
                  switch (TYPE) {
                    case 4:
                      return false;
                    case 7:
                      push(target, value);
                  }
              }
            }
          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
        };
      };
      var arrayIteration = {
        // `Array.prototype.forEach` method
        // https://tc39.es/ecma262/#sec-array.prototype.foreach
        forEach: createMethod(0),
        // `Array.prototype.map` method
        // https://tc39.es/ecma262/#sec-array.prototype.map
        map: createMethod(1),
        // `Array.prototype.filter` method
        // https://tc39.es/ecma262/#sec-array.prototype.filter
        filter: createMethod(2),
        // `Array.prototype.some` method
        // https://tc39.es/ecma262/#sec-array.prototype.some
        some: createMethod(3),
        // `Array.prototype.every` method
        // https://tc39.es/ecma262/#sec-array.prototype.every
        every: createMethod(4),
        // `Array.prototype.find` method
        // https://tc39.es/ecma262/#sec-array.prototype.find
        find: createMethod(5),
        // `Array.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-array.prototype.findIndex
        findIndex: createMethod(6),
        // `Array.prototype.filterReject` method
        // https://github.com/tc39/proposal-array-filtering
        filterReject: createMethod(7)
      };
      var isCallable = isCallable$p;
      var isObject$1 = isObject$e;
      var setPrototypeOf$1 = objectSetPrototypeOf;
      var inheritIfRequired$1 = function($this, dummy, Wrapper) {
        var NewTarget, NewTargetPrototype;
        if (
          // it can work only with native `setPrototypeOf`
          setPrototypeOf$1 && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
          isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject$1(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype
        )
          setPrototypeOf$1($this, NewTargetPrototype);
        return $this;
      };
      var $$2 = _export;
      var global$5 = global$V;
      var call$1 = functionCall;
      var DESCRIPTORS = descriptors;
      var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = typedArrayConstructorsRequireWrappers;
      var ArrayBufferViewCore$3 = arrayBufferViewCore;
      var ArrayBufferModule = arrayBuffer;
      var anInstance = anInstance$4;
      var createPropertyDescriptor = createPropertyDescriptor$6;
      var createNonEnumerableProperty = createNonEnumerableProperty$9;
      var isIntegralNumber = isIntegralNumber$1;
      var toLength$2 = toLength$9;
      var toIndex = toIndex$2;
      var toOffset$1 = toOffset$2;
      var toPropertyKey = toPropertyKey$4;
      var hasOwn = hasOwnProperty_1;
      var classof = classof$a;
      var isObject = isObject$e;
      var isSymbol = isSymbol$3;
      var create = objectCreate;
      var isPrototypeOf = objectIsPrototypeOf;
      var setPrototypeOf = objectSetPrototypeOf;
      var getOwnPropertyNames = objectGetOwnPropertyNames.f;
      var typedArrayFrom = typedArrayFrom$1;
      var forEach = arrayIteration.forEach;
      var setSpecies = setSpecies$2;
      var definePropertyModule = objectDefineProperty;
      var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
      var InternalStateModule = internalState;
      var inheritIfRequired = inheritIfRequired$1;
      var getInternalState = InternalStateModule.get;
      var setInternalState = InternalStateModule.set;
      var nativeDefineProperty = definePropertyModule.f;
      var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
      var round = Math.round;
      var RangeError$1 = global$5.RangeError;
      var ArrayBuffer$1 = ArrayBufferModule.ArrayBuffer;
      var ArrayBufferPrototype = ArrayBuffer$1.prototype;
      var DataView$1 = ArrayBufferModule.DataView;
      var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore$3.NATIVE_ARRAY_BUFFER_VIEWS;
      var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore$3.TYPED_ARRAY_CONSTRUCTOR;
      var TYPED_ARRAY_TAG = ArrayBufferViewCore$3.TYPED_ARRAY_TAG;
      var TypedArray = ArrayBufferViewCore$3.TypedArray;
      var TypedArrayPrototype = ArrayBufferViewCore$3.TypedArrayPrototype;
      var aTypedArrayConstructor = ArrayBufferViewCore$3.aTypedArrayConstructor;
      var isTypedArray = ArrayBufferViewCore$3.isTypedArray;
      var BYTES_PER_ELEMENT = "BYTES_PER_ELEMENT";
      var WRONG_LENGTH = "Wrong length";
      var fromList = function(C, list) {
        aTypedArrayConstructor(C);
        var index = 0;
        var length = list.length;
        var result = new C(length);
        while (length > index)
          result[index] = list[index++];
        return result;
      };
      var addGetter = function(it, key2) {
        nativeDefineProperty(it, key2, { get: function() {
          return getInternalState(this)[key2];
        } });
      };
      var isArrayBuffer = function(it) {
        var klass;
        return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof(it)) == "ArrayBuffer" || klass == "SharedArrayBuffer";
      };
      var isTypedArrayIndex = function(target, key2) {
        return isTypedArray(target) && !isSymbol(key2) && key2 in target && isIntegralNumber(+key2) && key2 >= 0;
      };
      var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor2(target, key2) {
        key2 = toPropertyKey(key2);
        return isTypedArrayIndex(target, key2) ? createPropertyDescriptor(2, target[key2]) : nativeGetOwnPropertyDescriptor(target, key2);
      };
      var wrappedDefineProperty = function defineProperty2(target, key2, descriptor) {
        key2 = toPropertyKey(key2);
        if (isTypedArrayIndex(target, key2) && isObject(descriptor) && hasOwn(descriptor, "value") && !hasOwn(descriptor, "get") && !hasOwn(descriptor, "set") && !descriptor.configurable && (!hasOwn(descriptor, "writable") || descriptor.writable) && (!hasOwn(descriptor, "enumerable") || descriptor.enumerable)) {
          target[key2] = descriptor.value;
          return target;
        }
        return nativeDefineProperty(target, key2, descriptor);
      };
      if (DESCRIPTORS) {
        if (!NATIVE_ARRAY_BUFFER_VIEWS) {
          getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
          definePropertyModule.f = wrappedDefineProperty;
          addGetter(TypedArrayPrototype, "buffer");
          addGetter(TypedArrayPrototype, "byteOffset");
          addGetter(TypedArrayPrototype, "byteLength");
          addGetter(TypedArrayPrototype, "length");
        }
        $$2({ target: "Object", stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
          getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
          defineProperty: wrappedDefineProperty
        });
        typedArrayConstructor.exports = function(TYPE, wrapper, CLAMPED) {
          var BYTES = TYPE.match(/\d+$/)[0] / 8;
          var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? "Clamped" : "") + "Array";
          var GETTER = "get" + TYPE;
          var SETTER = "set" + TYPE;
          var NativeTypedArrayConstructor = global$5[CONSTRUCTOR_NAME];
          var TypedArrayConstructor = NativeTypedArrayConstructor;
          var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
          var exported = {};
          var getter = function(that, index) {
            var data2 = getInternalState(that);
            return data2.view[GETTER](index * BYTES + data2.byteOffset, true);
          };
          var setter = function(that, index, value) {
            var data2 = getInternalState(that);
            if (CLAMPED)
              value = (value = round(value)) < 0 ? 0 : value > 255 ? 255 : value & 255;
            data2.view[SETTER](index * BYTES + data2.byteOffset, value, true);
          };
          var addElement = function(that, index) {
            nativeDefineProperty(that, index, {
              get: function() {
                return getter(this, index);
              },
              set: function(value) {
                return setter(this, index, value);
              },
              enumerable: true
            });
          };
          if (!NATIVE_ARRAY_BUFFER_VIEWS) {
            TypedArrayConstructor = wrapper(function(that, data2, offset, $length) {
              anInstance(that, TypedArrayConstructorPrototype);
              var index = 0;
              var byteOffset = 0;
              var buffer, byteLength, length;
              if (!isObject(data2)) {
                length = toIndex(data2);
                byteLength = length * BYTES;
                buffer = new ArrayBuffer$1(byteLength);
              } else if (isArrayBuffer(data2)) {
                buffer = data2;
                byteOffset = toOffset$1(offset, BYTES);
                var $len = data2.byteLength;
                if ($length === void 0) {
                  if ($len % BYTES)
                    throw RangeError$1(WRONG_LENGTH);
                  byteLength = $len - byteOffset;
                  if (byteLength < 0)
                    throw RangeError$1(WRONG_LENGTH);
                } else {
                  byteLength = toLength$2($length) * BYTES;
                  if (byteLength + byteOffset > $len)
                    throw RangeError$1(WRONG_LENGTH);
                }
                length = byteLength / BYTES;
              } else if (isTypedArray(data2)) {
                return fromList(TypedArrayConstructor, data2);
              } else {
                return call$1(typedArrayFrom, TypedArrayConstructor, data2);
              }
              setInternalState(that, {
                buffer,
                byteOffset,
                byteLength,
                length,
                view: new DataView$1(buffer)
              });
              while (index < length)
                addElement(that, index++);
            });
            if (setPrototypeOf)
              setPrototypeOf(TypedArrayConstructor, TypedArray);
            TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
          } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
            TypedArrayConstructor = wrapper(function(dummy, data2, typedArrayOffset, $length) {
              anInstance(dummy, TypedArrayConstructorPrototype);
              return inheritIfRequired(function() {
                if (!isObject(data2))
                  return new NativeTypedArrayConstructor(toIndex(data2));
                if (isArrayBuffer(data2))
                  return $length !== void 0 ? new NativeTypedArrayConstructor(data2, toOffset$1(typedArrayOffset, BYTES), $length) : typedArrayOffset !== void 0 ? new NativeTypedArrayConstructor(data2, toOffset$1(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data2);
                if (isTypedArray(data2))
                  return fromList(TypedArrayConstructor, data2);
                return call$1(typedArrayFrom, TypedArrayConstructor, data2);
              }(), dummy, TypedArrayConstructor);
            });
            if (setPrototypeOf)
              setPrototypeOf(TypedArrayConstructor, TypedArray);
            forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function(key2) {
              if (!(key2 in TypedArrayConstructor)) {
                createNonEnumerableProperty(TypedArrayConstructor, key2, NativeTypedArrayConstructor[key2]);
              }
            });
            TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
          }
          if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
            createNonEnumerableProperty(TypedArrayConstructorPrototype, "constructor", TypedArrayConstructor);
          }
          createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);
          if (TYPED_ARRAY_TAG) {
            createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
          }
          var FORCED2 = TypedArrayConstructor != NativeTypedArrayConstructor;
          exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;
          $$2({ global: true, constructor: true, forced: FORCED2, sham: !NATIVE_ARRAY_BUFFER_VIEWS }, exported);
          if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
            createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
          }
          if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
            createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
          }
          setSpecies(CONSTRUCTOR_NAME);
        };
      } else
        typedArrayConstructor.exports = function() {
        };
      var createTypedArrayConstructor = typedArrayConstructor.exports;
      createTypedArrayConstructor("Uint8", function(init2) {
        return function Uint8Array2(data2, byteOffset, length) {
          return init2(this, data2, byteOffset, length);
        };
      });
      var global$4 = global$V;
      var call = functionCall;
      var ArrayBufferViewCore$2 = arrayBufferViewCore;
      var lengthOfArrayLike = lengthOfArrayLike$7;
      var toOffset = toOffset$2;
      var toIndexedObject = toObject$7;
      var fails$2 = fails$q;
      var RangeError2 = global$4.RangeError;
      var Int8Array$1 = global$4.Int8Array;
      var Int8ArrayPrototype = Int8Array$1 && Int8Array$1.prototype;
      var $set = Int8ArrayPrototype && Int8ArrayPrototype.set;
      var aTypedArray$2 = ArrayBufferViewCore$2.aTypedArray;
      var exportTypedArrayMethod$2 = ArrayBufferViewCore$2.exportTypedArrayMethod;
      var WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails$2(function() {
        var array = new Uint8ClampedArray(2);
        call($set, array, { length: 1, 0: 3 }, 1);
        return array[1] !== 3;
      });
      var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore$2.NATIVE_ARRAY_BUFFER_VIEWS && fails$2(function() {
        var array = new Int8Array$1(2);
        array.set(1);
        array.set("2", 1);
        return array[0] !== 0 || array[1] !== 2;
      });
      exportTypedArrayMethod$2("set", function set2(arrayLike) {
        aTypedArray$2(this);
        var offset = toOffset(arguments.length > 1 ? arguments[1] : void 0, 1);
        var src = toIndexedObject(arrayLike);
        if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS)
          return call($set, this, src, offset);
        var length = this.length;
        var len = lengthOfArrayLike(src);
        var index = 0;
        if (len + offset > length)
          throw RangeError2("Wrong length");
        while (index < len)
          this[offset + index] = src[index++];
      }, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);
      var userAgent$1 = engineUserAgent;
      var firefox = userAgent$1.match(/firefox\/(\d+)/i);
      var engineFfVersion = !!firefox && +firefox[1];
      var UA = engineUserAgent;
      var engineIsIeOrEdge = /MSIE|Trident/.test(UA);
      var userAgent = engineUserAgent;
      var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
      var engineWebkitVersion = !!webkit && +webkit[1];
      var global$3 = global$V;
      var uncurryThis$2 = functionUncurryThis;
      var fails$1 = fails$q;
      var aCallable = aCallable$8;
      var internalSort = arraySort$1;
      var ArrayBufferViewCore$1 = arrayBufferViewCore;
      var FF = engineFfVersion;
      var IE_OR_EDGE = engineIsIeOrEdge;
      var V8 = engineV8Version;
      var WEBKIT = engineWebkitVersion;
      var aTypedArray$1 = ArrayBufferViewCore$1.aTypedArray;
      var exportTypedArrayMethod$1 = ArrayBufferViewCore$1.exportTypedArrayMethod;
      var Uint16Array = global$3.Uint16Array;
      var un$Sort = Uint16Array && uncurryThis$2(Uint16Array.prototype.sort);
      var ACCEPT_INCORRECT_ARGUMENTS = !!un$Sort && !(fails$1(function() {
        un$Sort(new Uint16Array(2), null);
      }) && fails$1(function() {
        un$Sort(new Uint16Array(2), {});
      }));
      var STABLE_SORT = !!un$Sort && !fails$1(function() {
        if (V8)
          return V8 < 74;
        if (FF)
          return FF < 67;
        if (IE_OR_EDGE)
          return true;
        if (WEBKIT)
          return WEBKIT < 602;
        var array = new Uint16Array(516);
        var expected = Array(516);
        var index, mod;
        for (index = 0; index < 516; index++) {
          mod = index % 4;
          array[index] = 515 - index;
          expected[index] = index - 2 * mod + 3;
        }
        un$Sort(array, function(a, b) {
          return (a / 4 | 0) - (b / 4 | 0);
        });
        for (index = 0; index < 516; index++) {
          if (array[index] !== expected[index])
            return true;
        }
      });
      var getSortCompare = function(comparefn) {
        return function(x, y) {
          if (comparefn !== void 0)
            return +comparefn(x, y) || 0;
          if (y !== y)
            return -1;
          if (x !== x)
            return 1;
          if (x === 0 && y === 0)
            return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
          return x > y;
        };
      };
      exportTypedArrayMethod$1("sort", function sort(comparefn) {
        if (comparefn !== void 0)
          aCallable(comparefn);
        if (STABLE_SORT)
          return un$Sort(this, comparefn);
        return internalSort(aTypedArray$1(this), getSortCompare(comparefn));
      }, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);
      var global$2 = global$V;
      var apply = functionApply;
      var ArrayBufferViewCore = arrayBufferViewCore;
      var fails = fails$q;
      var arraySlice = arraySlice$4;
      var Int8Array = global$2.Int8Array;
      var aTypedArray = ArrayBufferViewCore.aTypedArray;
      var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
      var $toLocaleString = [].toLocaleString;
      var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function() {
        $toLocaleString.call(new Int8Array(1));
      });
      var FORCED = fails(function() {
        return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
      }) || !fails(function() {
        Int8Array.prototype.toLocaleString.call([1, 2]);
      });
      exportTypedArrayMethod("toLocaleString", function toLocaleString() {
        return apply(
          $toLocaleString,
          TO_LOCALE_STRING_BUG ? arraySlice(aTypedArray(this)) : aTypedArray(this),
          arraySlice(arguments)
        );
      }, FORCED);
      const deleteQueryParameter = (windowLocation, name, value) => {
        const nameValue = name + "=" + value;
        let toReplace = nameValue;
        if (windowLocation.indexOf("?" + nameValue) >= 0) {
          if (windowLocation.indexOf("?" + nameValue + "&") >= 0) {
            toReplace += "&";
          } else {
            toReplace = "?" + toReplace;
          }
        } else if (windowLocation.indexOf("&" + nameValue) >= 0) {
          toReplace = "&" + toReplace;
        }
        return windowLocation.replace(toReplace, "");
      };
      const getQueryParameter = (name) => {
        const paramsForSearch = parseParams(window.location.search.substring(1));
        if (paramsForSearch[name]) {
          return paramsForSearch[name];
        }
        return void 0;
      };
      const createCodeChallenge = (verifier) => __awaiter(void 0, void 0, void 0, function* () {
        if (getCryptoSubtle()) {
          const code_challengeBuffer = yield sha256(verifier);
          const code_challenge = bufferToBase64UrlEncoded(code_challengeBuffer);
          return {
            code_challenge,
            code_challenge_method: "S256"
          };
        } else {
          return {
            code_challenge: verifier,
            code_challenge_method: void 0
          };
        }
      });
      const getCrypto = () => {
        return window.crypto || window.msCrypto;
      };
      const createRandomString = (size) => {
        const charset = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
        let random = "";
        const randomValues = Array.from(getCrypto().getRandomValues(new Uint8Array(size)));
        randomValues.forEach((v) => random += charset[v % charset.length]);
        return random;
      };
      const sha256 = (s) => __awaiter(void 0, void 0, void 0, function* () {
        const digestOp = getCryptoSubtle().digest({
          name: "SHA-256"
        }, new TextEncoder().encode(s));
        if (window.msCrypto) {
          return new Promise((res, rej) => {
            digestOp.oncomplete = (e) => {
              res(e.target.result);
            };
            digestOp.onerror = (e) => {
              rej(e.error);
            };
            digestOp.onabort = () => {
              rej("The digest operation was aborted");
            };
          });
        }
        return yield digestOp;
      });
      const getCryptoSubtle = () => {
        const crypto2 = getCrypto();
        return crypto2.subtle || crypto2.webkitSubtle;
      };
      const bufferToBase64UrlEncoded = (input) => {
        const ie11SafeInput = new Uint8Array(input);
        return urlEncodeB64(window.btoa(String.fromCharCode(...Array.from(ie11SafeInput))));
      };
      const urlEncodeB64 = (input) => {
        const b64Chars = {
          "+": "-",
          "/": "_",
          "=": ""
        };
        return input.replace(/[+/=]/g, (m) => b64Chars[m]);
      };
      const parseParams = (url) => {
        const result = {};
        const params = url.split("&");
        for (let i = 0; i < params.length; i++) {
          const param = params[i].split("=", 2);
          if (param.length !== 2)
            continue;
          result[param[0]] = decodeURIComponent(param[1].replace(/\+/g, " "));
        }
        return result;
      };
      var global$1 = global$V;
      var isRegExp = isRegexp;
      var TypeError$1 = global$1.TypeError;
      var notARegexp = function(it) {
        if (isRegExp(it)) {
          throw TypeError$1("The method doesn't accept regular expressions");
        }
        return it;
      };
      var wellKnownSymbol = wellKnownSymbol$m;
      var MATCH = wellKnownSymbol("match");
      var correctIsRegexpLogic = function(METHOD_NAME) {
        var regexp = /./;
        try {
          "/./"[METHOD_NAME](regexp);
        } catch (error1) {
          try {
            regexp[MATCH] = false;
            return "/./"[METHOD_NAME](regexp);
          } catch (error2) {
          }
        }
        return false;
      };
      var $$1 = _export;
      var uncurryThis$1 = functionUncurryThis;
      var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
      var toLength$1 = toLength$9;
      var toString$1 = toString$7;
      var notARegExp$1 = notARegexp;
      var requireObjectCoercible$1 = requireObjectCoercible$8;
      var correctIsRegExpLogic$1 = correctIsRegexpLogic;
      var un$EndsWith = uncurryThis$1("".endsWith);
      var slice = uncurryThis$1("".slice);
      var min$1 = Math.min;
      var CORRECT_IS_REGEXP_LOGIC$1 = correctIsRegExpLogic$1("endsWith");
      var MDN_POLYFILL_BUG$1 = !CORRECT_IS_REGEXP_LOGIC$1 && !!function() {
        var descriptor = getOwnPropertyDescriptor$1(String.prototype, "endsWith");
        return descriptor && !descriptor.writable;
      }();
      $$1({ target: "String", proto: true, forced: !MDN_POLYFILL_BUG$1 && !CORRECT_IS_REGEXP_LOGIC$1 }, {
        endsWith: function endsWith(searchString) {
          var that = toString$1(requireObjectCoercible$1(this));
          notARegExp$1(searchString);
          var endPosition = arguments.length > 1 ? arguments[1] : void 0;
          var len = that.length;
          var end = endPosition === void 0 ? len : min$1(toLength$1(endPosition), len);
          var search = toString$1(searchString);
          return un$EndsWith ? un$EndsWith(that, search, end) : slice(that, end - search.length, end) === search;
        }
      });
      var $ = _export;
      var uncurryThis = functionUncurryThis;
      var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
      var toLength = toLength$9;
      var toString = toString$7;
      var notARegExp = notARegexp;
      var requireObjectCoercible = requireObjectCoercible$8;
      var correctIsRegExpLogic = correctIsRegexpLogic;
      var un$StartsWith = uncurryThis("".startsWith);
      var stringSlice = uncurryThis("".slice);
      var min = Math.min;
      var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic("startsWith");
      var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function() {
        var descriptor = getOwnPropertyDescriptor(String.prototype, "startsWith");
        return descriptor && !descriptor.writable;
      }();
      $({ target: "String", proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
        startsWith: function startsWith(searchString) {
          var that = toString(requireObjectCoercible(this));
          notARegExp(searchString);
          var index = toLength(min(arguments.length > 1 ? arguments[1] : void 0, that.length));
          var search = toString(searchString);
          return un$StartsWith ? un$StartsWith(that, search, index) : stringSlice(that, index, index + search.length) === search;
        }
      });
      const getRedirectUri = (origin, decodedToken, redirectionConfig) => {
        let result;
        let redirection;
        let redirectUrl;
        const topLevelDomains = redirectionConfig.topLevelDomains;
        const redirections = redirectionConfig.environments;
        const suffix = topLevelDomains.find((suffix2) => origin.endsWith(suffix2));
        const environmentVariables = redirectionConfig.environmentVariables;
        if (suffix) {
          for (let i = 0; i < redirections.length; i++) {
            redirection = redirections[i];
            const tokenCriteriaMatched = containsKeys(decodedToken, redirection.criteria);
            if (tokenCriteriaMatched && !!containsApplication(redirection.applications, origin)) {
              if (redirection.topLevelDomain !== suffix) {
                redirectUrl = origin.replace(suffix, redirection.topLevelDomain);
              }
              const envVariables = environmentVariables[redirection.criteria.environment];
              if (envVariables) {
                const prefixMappings = envVariables["prefixMappings"];
                const keys2 = Object.keys(prefixMappings);
                const needToUpdatePrefixKey = containsApplication(keys2, origin);
                if (needToUpdatePrefixKey) {
                  const prefixValue = prefixMappings[needToUpdatePrefixKey];
                  redirectUrl = redirectUrl ? redirectUrl.replace(needToUpdatePrefixKey, prefixValue) : origin.replace(needToUpdatePrefixKey, prefixValue);
                }
              }
              break;
            }
          }
          if (!!redirection && !!redirectUrl) {
            result = `${redirection.authHost}/oauth/passthrough?jti=${decodedToken.jti}&redirect=${encodeURIComponent(redirectUrl)}`;
          }
        }
        return result;
      };
      const containsKeys = (obj1, obj2) => {
        let result = true;
        Object.keys(obj2).forEach((key2) => {
          if (obj1[key2] !== obj2[key2]) {
            result = false;
          }
        });
        return result;
      };
      const containsApplication = (list, app) => {
        return list.find((appName) => app.startsWith(`http://${appName}`) || app.startsWith(`https://${appName}`));
      };
      var _Authentication_accessToken, _Authentication_config, _Authentication_leapAuthService, _Authentication_notification, _Authentication_refreshInfo, _Authentication_exchangeAuthCodeForAccessToken, _Authentication_verifyAndPerformRedirections, _Authentication_startRefreshAccessTokenProcess, _Authentication_destroyRefreshAccessTokenProcess, _Authentication_decodeAccessToken;
      const SECONDS_BEFORE_EXPIRE = 30;
      const MAX_SETTIME_OUT = 2147483647;
      const DEFAULT_AUTHORIZE_TIMEOUT_IN_SECONDS = 60;
      const CLEANUP_IFRAME_TIMEOUT_IN_SECONDS = 2;
      class Authentication {
        constructor(options) {
          _Authentication_accessToken.set(this, void 0);
          _Authentication_config.set(this, void 0);
          _Authentication_leapAuthService.set(this, void 0);
          _Authentication_notification.set(this, void 0);
          _Authentication_refreshInfo.set(this, void 0);
          this.registerEventListenerForUserChannel = (params) => {
            const {
              topic,
              messageType,
              callback
            } = params;
            __classPrivateFieldGet(this, _Authentication_notification, "f").registerEventListenerForUserChannel({
              topic,
              messageType,
              callback
            });
          };
          this.initNotification = () => __awaiter(this, void 0, void 0, function* () {
            const decodedToken = yield this.getDecodedRefreshedAccessToken();
            if (decodedToken) {
              yield __classPrivateFieldGet(this, _Authentication_notification, "f").init({
                authHost: __classPrivateFieldGet(this, _Authentication_config, "f").authHost,
                clientId: __classPrivateFieldGet(this, _Authentication_config, "f").clientId,
                firmId: decodedToken.firmId,
                userId: decodedToken.userId,
                uniqueSession: !!__classPrivateFieldGet(this, _Authentication_config, "f").uniqueSession,
                hooks: __classPrivateFieldGet(this, _Authentication_config, "f").hooks
              });
            }
          });
          this.destroyNotification = () => {
            __classPrivateFieldGet(this, _Authentication_notification, "f").destroy();
          };
          this.login = (noPrompt) => __awaiter(this, void 0, void 0, function* () {
            const done = yield this.checkAuthCode();
            if (done && !!__classPrivateFieldGet(this, _Authentication_accessToken, "f")) {
              return __classPrivateFieldGet(this, _Authentication_accessToken, "f");
            } else {
              const code_verifier = createRandomString(64);
              const state = createRandomString(6);
              window.sessionStorage.setItem(state, code_verifier);
              const {
                code_challenge,
                code_challenge_method
              } = yield createCodeChallenge(code_verifier);
              const scope = __classPrivateFieldGet(this, _Authentication_config, "f").scopes.join(",");
              const prompt = noPrompt ? "none" : "";
              const url = `${__classPrivateFieldGet(this, _Authentication_config, "f").authHost}/oauth/authorize?response_type=code&scope=${scope}&client_id=${__classPrivateFieldGet(this, _Authentication_config, "f").clientId}&redirect_uri=${encodeURIComponent(window.location.href)}&code_challenge=${encodeURIComponent(code_challenge)}&code_challenge_method=${code_challenge_method}&state=${state}&prompt=${prompt}`;
              window.location.assign(url);
              return;
            }
          });
          this.logout = (force = false, redirectUrl) => {
            __classPrivateFieldSet(this, _Authentication_accessToken, void 0, "f");
            const redirectUri = encodeURIComponent(redirectUrl || window.location.href);
            window.location.href = `${__classPrivateFieldGet(this, _Authentication_config, "f").authHost}/oauth/logout?force=${force}&redirect_uri=${redirectUri}`;
            __classPrivateFieldGet(this, _Authentication_destroyRefreshAccessTokenProcess, "f").call(this);
          };
          this.getAccessToken = () => {
            if (__classPrivateFieldGet(this, _Authentication_accessToken, "f") === void 0 || !__classPrivateFieldGet(this, _Authentication_accessToken, "f")) {
              return "";
            } else {
              return __classPrivateFieldGet(this, _Authentication_accessToken, "f");
            }
          };
          this.getRefreshedAccessToken = () => __awaiter(this, void 0, void 0, function* () {
            if (__classPrivateFieldGet(this, _Authentication_accessToken, "f") === void 0 || !__classPrivateFieldGet(this, _Authentication_accessToken, "f")) {
              return "";
            } else {
              if (__classPrivateFieldGet(this, _Authentication_refreshInfo, "f") && __classPrivateFieldGet(this, _Authentication_refreshInfo, "f").accessTokenExpireIn) {
                const decoded = __classPrivateFieldGet(this, _Authentication_decodeAccessToken, "f").call(this, __classPrivateFieldGet(this, _Authentication_accessToken, "f"));
                if (!!decoded && (decoded.exp - SECONDS_BEFORE_EXPIRE) * 1e3 < Date.now()) {
                  const data2 = yield __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").renewAccessToken({
                    refreshToken: __classPrivateFieldGet(this, _Authentication_refreshInfo, "f").refreshToken,
                    verifier: __classPrivateFieldGet(this, _Authentication_refreshInfo, "f").verifier
                  });
                  if (data2) {
                    if (data2.refresh_token && data2.expires_in) {
                      __classPrivateFieldSet(this, _Authentication_refreshInfo, Object.assign(Object.assign({}, __classPrivateFieldGet(this, _Authentication_refreshInfo, "f")), {
                        refreshToken: data2.refresh_token,
                        accessTokenExpireIn: data2.expires_in
                      }), "f");
                    }
                    __classPrivateFieldSet(this, _Authentication_accessToken, data2.access_token, "f");
                    yield this.triggerHooks(HookName.afterRefreshToken);
                    return __classPrivateFieldGet(this, _Authentication_accessToken, "f");
                  }
                }
              }
              return __classPrivateFieldGet(this, _Authentication_accessToken, "f");
            }
          });
          this.getDecodedAccessToken = () => {
            if (!__classPrivateFieldGet(this, _Authentication_accessToken, "f")) {
              return void 0;
            }
            return __classPrivateFieldGet(this, _Authentication_decodeAccessToken, "f").call(this, __classPrivateFieldGet(this, _Authentication_accessToken, "f"));
          };
          this.getDecodedRefreshedAccessToken = () => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              return void 0;
            }
            return __classPrivateFieldGet(this, _Authentication_decodeAccessToken, "f").call(this, token);
          });
          this.getHooks = () => {
            if (__classPrivateFieldGet(this, _Authentication_config, "f")) {
              return __classPrivateFieldGet(this, _Authentication_config, "f").hooks;
            } else {
              return void 0;
            }
          };
          this.setHook = (params) => {
            const {
              name,
              callback
            } = params;
            if (!Object.values(HookName).find((h) => h === name)) {
              throw Error("Unsupported hook: " + name);
            }
            if (!lodash.isFunction(callback)) {
              throw Error("hook must be a function: " + name);
            }
            __classPrivateFieldSet(this, _Authentication_config, Object.assign(Object.assign({}, __classPrivateFieldGet(this, _Authentication_config, "f")), {
              hooks: Object.assign(Object.assign({}, __classPrivateFieldGet(this, _Authentication_config, "f").hooks), {
                [name]: callback
              })
            }), "f");
            if (name === HookName.uniqueSessionTrigger) {
              __classPrivateFieldGet(this, _Authentication_notification, "f").setUniqueSessionTriggerHook(callback);
            }
            return;
          };
          this.autoLogin = () => {
            return __classPrivateFieldGet(this, _Authentication_config, "f") ? __classPrivateFieldGet(this, _Authentication_config, "f").autoLogin || false : false;
          };
          this.autoLogout = () => {
            return __classPrivateFieldGet(this, _Authentication_config, "f") ? __classPrivateFieldGet(this, _Authentication_config, "f").autoLogin || false : false;
          };
          this.idleTimeoutInMinutes = () => {
            return __classPrivateFieldGet(this, _Authentication_config, "f") ? __classPrivateFieldGet(this, _Authentication_config, "f").idleTimeoutInMinutes || 30 : 30;
          };
          this.checkTokenInUrl = () => {
            const accessTokenQuery = getQueryParameter("access_token") || getQueryParameter("auth") || getQueryParameter("authToken") || getQueryParameter("token") || getQueryParameter("jwt");
            if (accessTokenQuery) {
              const {
                aud,
                firmId,
                userId
              } = __classPrivateFieldGet(this, _Authentication_decodeAccessToken, "f").call(this, accessTokenQuery);
              if (!!firmId && !!userId && aud === "8MBJWOFS4RRRSZQC") {
                const queryParameterValue = accessTokenQuery;
                let myselfWithoutToken = deleteQueryParameter(window.location.href, "access_token", queryParameterValue);
                myselfWithoutToken = deleteQueryParameter(myselfWithoutToken, "token", queryParameterValue);
                myselfWithoutToken = deleteQueryParameter(myselfWithoutToken, "auth", queryParameterValue);
                myselfWithoutToken = deleteQueryParameter(myselfWithoutToken, "authToken", queryParameterValue);
                myselfWithoutToken = deleteQueryParameter(myselfWithoutToken, "jwt", queryParameterValue);
                const myselfEncoded = encodeURIComponent(myselfWithoutToken);
                window.location.href = __classPrivateFieldGet(this, _Authentication_config, "f").authHost + "/oauth/passthrough?token=" + queryParameterValue + "&redirect=" + myselfEncoded;
                return true;
              }
              return false;
            }
            return false;
          };
          this.verifySession = () => __awaiter(this, void 0, void 0, function* () {
            const code_verifier = createRandomString(64);
            const state = createRandomString(6);
            window.sessionStorage.setItem(state, code_verifier);
            const {
              code_challenge,
              code_challenge_method
            } = yield createCodeChallenge(code_verifier);
            const scope = __classPrivateFieldGet(this, _Authentication_config, "f").scopes.join(",");
            const redirectUri = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;
            const url = `${__classPrivateFieldGet(this, _Authentication_config, "f").authHost}/oauth/authorize?response_type=code&response_mode=web_message&scope=${scope}&client_id=${__classPrivateFieldGet(this, _Authentication_config, "f").clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&code_challenge=${encodeURIComponent(code_challenge)}&code_challenge_method=${code_challenge_method}&state=${state}&prompt=none`;
            const resp = yield this.runIframe(url, state);
            if (resp && resp.state) {
              const verifier = window.sessionStorage.getItem(resp.state);
              window.sessionStorage.removeItem(resp.state);
              if (resp.code && verifier) {
                return __classPrivateFieldGet(this, _Authentication_exchangeAuthCodeForAccessToken, "f").call(this, {
                  code: resp.code,
                  verifier,
                  redirectUri
                });
              }
              return false;
            } else {
              return false;
            }
          });
          this.checkAuthCode = () => __awaiter(this, void 0, void 0, function* () {
            const search = window.location.search;
            const queryParams = new URLSearchParams(search);
            const code = queryParams.get("code");
            const state = queryParams.get("state");
            if (!!code && !!state) {
              const verifier = window.sessionStorage.getItem(state);
              window.sessionStorage.removeItem(state);
              let newUrl = window.location.href;
              newUrl = deleteQueryParameter(newUrl, "code", code);
              newUrl = deleteQueryParameter(newUrl, "state", state);
              window.history.pushState(null, "", newUrl);
              return __classPrivateFieldGet(this, _Authentication_exchangeAuthCodeForAccessToken, "f").call(this, {
                code,
                verifier,
                redirectUri: newUrl
              });
            } else {
              return false;
            }
          });
          this.getUserInfo = () => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").userInfo(token);
          });
          this.linkUser = (params) => __awaiter(this, void 0, void 0, function* () {
            const decodeToken2 = yield this.getDecodedRefreshedAccessToken();
            if (!decodeToken2) {
              return;
            }
            const redirectUrl = params.redirectUrl || window.location.href;
            __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").linkUser({
              redirectUrl,
              jti: decodeToken2.jti,
              newWindow: params.newWindow,
              callback: params.callback
            });
          });
          this.unlinkUser = (params) => __awaiter(this, void 0, void 0, function* () {
            const decodeToken2 = yield this.getDecodedRefreshedAccessToken();
            if (!decodeToken2) {
              return;
            }
            const redirectUrl = params.redirectUrl || window.location.href;
            __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").unlinkUser({
              redirectUrl,
              jti: decodeToken2.jti,
              newWindow: params.newWindow,
              callback: params.callback
            });
          });
          this.getCloudProviderToken = (jti) => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").getCloudProviderToken(token, jti);
          });
          this.cloudProviderUserInfo = () => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").cloudProviderUserInfo(token);
          });
          this.cloudProviderReauthenticate = (params) => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            let {
              nonce,
              redirectUrl
            } = params;
            const {
              newWindow,
              callback
            } = params;
            redirectUrl = redirectUrl || window.location.href;
            if (!nonce) {
              const reauthticateLink = yield __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").cloudProviderReauthenticateLink(token);
              nonce = reauthticateLink.nonce;
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").cloudProviderReauthenticate({
              redirectUrl,
              nonce,
              newWindow,
              callback
            });
          });
          this.cloudProviderUpdate = (cloudProviderId) => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            const decodedToken = __classPrivateFieldGet(this, _Authentication_decodeAccessToken, "f").call(this, token);
            const {
              firmId
            } = decodedToken;
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").cloudProviderUpdate({
              firmId,
              cloudProviderId,
              token
            });
          });
          this.statusAdminConsent = () => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").statusAdminConsent(token);
          });
          this.getAdminConsent = (params) => {
            const redirectUrl = params.redirectUrl || window.location.href;
            __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").getAdminConsent(Object.assign(Object.assign({}, params), {
              redirectUrl
            }));
          };
          this.revokeAdminConsent = () => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").revokeAdminConsent(token);
          });
          this.getLinkMap = (allUsers = false) => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").getLinkMap(token, allUsers);
          });
          this.setLinkMap = (linkMap) => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            const verifyFormat = () => {
              if (Array.isArray(linkMap)) {
                for (const link of linkMap) {
                  if (!(link.internalUser && link.externalUser && link.externalUser.id))
                    return false;
                }
                return true;
              }
              return false;
            };
            if (!verifyFormat())
              throw Error("linkmap in wrong format");
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").setLinkMap(token, linkMap);
          });
          this.authoriseSupport = (params) => __awaiter(this, void 0, void 0, function* () {
            const token = yield this.getRefreshedAccessToken();
            if (!token) {
              throw Error("Not authenticated yet");
            }
            return __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").authoriseSupport(token, params);
          });
          this.changePassword = (params) => {
            const redirectUrl = params.redirectUrl || window.location.href;
            __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").changePassword(Object.assign(Object.assign({}, params), {
              redirectUrl
            }));
          };
          this.passthrough = (params) => __awaiter(this, void 0, void 0, function* () {
            const decodedToken = yield this.getDecodedRefreshedAccessToken();
            if (decodedToken && decodedToken.jti) {
              const {
                url,
                newWindow,
                authHost
              } = params;
              const encodedRedirectUrl = encodeURIComponent(url);
              const passthroughUrl = `${authHost || __classPrivateFieldGet(this, _Authentication_config, "f").authHost}/oauth/passthrough?jti=${decodedToken.jti}&redirect=${encodedRedirectUrl}&output=embed`;
              if (newWindow) {
                window.open(passthroughUrl, "_blank");
              } else {
                window.location.assign(passthroughUrl);
              }
            }
            return;
          });
          this.triggerHooks = (hookName) => __awaiter(this, void 0, void 0, function* () {
            const hooks = this.getHooks();
            const token = yield this.getRefreshedAccessToken();
            const hookFn = hooks && !!hooks[hookName] && lodash.isFunction(hooks[hookName]) ? hooks[hookName](token) : false;
            return Promise.resolve(hookFn);
          });
          this.afterAuthenticated = () => {
            return this.triggerHooks(HookName.afterLogin).then(() => __awaiter(this, void 0, void 0, function* () {
              yield this.initNotification();
              return __classPrivateFieldGet(this, _Authentication_accessToken, "f");
            }));
          };
          this.runIframe = (authorizeUrl, state, timeoutInSeconds = DEFAULT_AUTHORIZE_TIMEOUT_IN_SECONDS) => {
            return new Promise((res, rej) => {
              const iframe = window.document.createElement("iframe");
              iframe.setAttribute("width", "0");
              iframe.setAttribute("height", "0");
              iframe.setAttribute("id", "agent-iframe");
              iframe.style.display = "none";
              const removeIframe = () => {
                if (window.document.body.contains(iframe)) {
                  window.document.body.removeChild(iframe);
                  window.removeEventListener("message", iframeEventHandler, false);
                }
              };
              const timeoutSetTimeoutId = setTimeout(() => {
                rej("agent-iframe timeout");
                removeIframe();
                window.sessionStorage.removeItem(state);
              }, timeoutInSeconds * 1e3);
              const iframeEventHandler = (e) => {
                const {
                  data: data2,
                  origin,
                  source
                } = e;
                if (origin !== __classPrivateFieldGet(this, _Authentication_config, "f").authHost)
                  return;
                if (!data2 || data2.type !== "authorization_response")
                  return;
                if (source) {
                  source.close();
                }
                res(data2.response);
                clearTimeout(timeoutSetTimeoutId);
                window.removeEventListener("message", iframeEventHandler, false);
                setTimeout(removeIframe, CLEANUP_IFRAME_TIMEOUT_IN_SECONDS * 1e3);
              };
              window.addEventListener("message", iframeEventHandler, false);
              window.document.body.appendChild(iframe);
              iframe.setAttribute("src", authorizeUrl);
            });
          };
          _Authentication_exchangeAuthCodeForAccessToken.set(this, (params) => __awaiter(this, void 0, void 0, function* () {
            const {
              verifier,
              code,
              redirectUri
            } = params;
            if (verifier) {
              const data2 = yield __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").exchangeAuthCodeForAccessToken({
                code,
                verifier,
                redirectUri
              });
              const redirectTriggered = yield __classPrivateFieldGet(this, _Authentication_verifyAndPerformRedirections, "f").call(this, data2.access_token);
              if (redirectTriggered) {
                return true;
              }
              if (data2.refresh_token && data2.expires_in) {
                __classPrivateFieldSet(this, _Authentication_refreshInfo, {
                  refreshToken: data2.refresh_token,
                  accessTokenExpireIn: data2.expires_in,
                  verifier,
                  timer: void 0
                }, "f");
                if (__classPrivateFieldGet(this, _Authentication_config, "f").autoRefreshToken) {
                  __classPrivateFieldGet(this, _Authentication_startRefreshAccessTokenProcess, "f").call(this);
                }
              }
              __classPrivateFieldSet(this, _Authentication_accessToken, data2.access_token, "f");
              return true;
            } else {
              return false;
            }
          }));
          _Authentication_verifyAndPerformRedirections.set(this, (accessToken) => __awaiter(this, void 0, void 0, function* () {
            const redirectionConfig = yield __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").getRedirections();
            const origin = window.location.origin;
            const decodedToken = __classPrivateFieldGet(this, _Authentication_decodeAccessToken, "f").call(this, accessToken);
            const redirectUri = getRedirectUri(origin, decodedToken, redirectionConfig);
            if (redirectUri) {
              this.logout(false, redirectUri);
              return true;
            }
            return false;
          }));
          _Authentication_startRefreshAccessTokenProcess.set(this, () => {
            if (!__classPrivateFieldGet(this, _Authentication_refreshInfo, "f")) {
              return;
            }
            if (__classPrivateFieldGet(this, _Authentication_refreshInfo, "f").timer) {
              clearTimeout(__classPrivateFieldGet(this, _Authentication_refreshInfo, "f").timer);
              __classPrivateFieldSet(this, _Authentication_refreshInfo, Object.assign(Object.assign({}, __classPrivateFieldGet(this, _Authentication_refreshInfo, "f")), {
                timer: void 0
              }), "f");
            }
            const waitBeforeExecuting = (__classPrivateFieldGet(this, _Authentication_refreshInfo, "f").accessTokenExpireIn - SECONDS_BEFORE_EXPIRE) * 1e3;
            if (waitBeforeExecuting > MAX_SETTIME_OUT) {
              return;
            }
            const timer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {
              if (!__classPrivateFieldGet(this, _Authentication_refreshInfo, "f")) {
                return;
              }
              const data2 = yield __classPrivateFieldGet(this, _Authentication_leapAuthService, "f").renewAccessToken({
                refreshToken: __classPrivateFieldGet(this, _Authentication_refreshInfo, "f").refreshToken,
                verifier: __classPrivateFieldGet(this, _Authentication_refreshInfo, "f").verifier
              });
              if (data2) {
                if (data2.refresh_token && data2.expires_in) {
                  __classPrivateFieldSet(this, _Authentication_refreshInfo, Object.assign(Object.assign({}, __classPrivateFieldGet(this, _Authentication_refreshInfo, "f")), {
                    refreshToken: data2.refresh_token,
                    accessTokenExpireIn: data2.expires_in
                  }), "f");
                  __classPrivateFieldGet(this, _Authentication_startRefreshAccessTokenProcess, "f").call(this);
                }
                __classPrivateFieldSet(this, _Authentication_accessToken, data2.access_token, "f");
                yield this.triggerHooks(HookName.afterRefreshToken);
              }
            }), waitBeforeExecuting);
            __classPrivateFieldSet(this, _Authentication_refreshInfo, Object.assign(Object.assign({}, __classPrivateFieldGet(this, _Authentication_refreshInfo, "f")), {
              timer
            }), "f");
          });
          _Authentication_destroyRefreshAccessTokenProcess.set(this, () => {
            if (!__classPrivateFieldGet(this, _Authentication_refreshInfo, "f")) {
              return;
            }
            if (__classPrivateFieldGet(this, _Authentication_refreshInfo, "f").timer) {
              clearTimeout(__classPrivateFieldGet(this, _Authentication_refreshInfo, "f").timer);
            }
            __classPrivateFieldSet(this, _Authentication_refreshInfo, void 0, "f");
          });
          _Authentication_decodeAccessToken.set(this, (accessToken) => {
            if (!accessToken) {
              return void 0;
            }
            const payload = accessToken.split(".")[1];
            if (payload) {
              try {
                const result = window.atob(payload);
                return JSON.parse(result);
              } catch (e) {
                throw Error("Fail to decode access token.");
              }
            }
            return void 0;
          });
          __classPrivateFieldSet(this, _Authentication_accessToken, void 0, "f");
          __classPrivateFieldSet(this, _Authentication_config, init$1(options), "f");
          __classPrivateFieldSet(this, _Authentication_leapAuthService, new LeapAuthService(__classPrivateFieldGet(this, _Authentication_config, "f").authHost, __classPrivateFieldGet(this, _Authentication_config, "f").clientId), "f");
          __classPrivateFieldSet(this, _Authentication_notification, new Notification(), "f");
        }
      }
      _Authentication_accessToken = /* @__PURE__ */ new WeakMap(), _Authentication_config = /* @__PURE__ */ new WeakMap(), _Authentication_leapAuthService = /* @__PURE__ */ new WeakMap(), _Authentication_notification = /* @__PURE__ */ new WeakMap(), _Authentication_refreshInfo = /* @__PURE__ */ new WeakMap(), _Authentication_exchangeAuthCodeForAccessToken = /* @__PURE__ */ new WeakMap(), _Authentication_verifyAndPerformRedirections = /* @__PURE__ */ new WeakMap(), _Authentication_startRefreshAccessTokenProcess = /* @__PURE__ */ new WeakMap(), _Authentication_destroyRefreshAccessTokenProcess = /* @__PURE__ */ new WeakMap(), _Authentication_decodeAccessToken = /* @__PURE__ */ new WeakMap();
      var _IdleTimer_timeoutInMinutes, _IdleTimer_timer, _IdleTimer_onTimeout, _IdleTimer_cleanUpTracker, _IdleTimer_clearTimeout, _IdleTimer_resetTimer;
      class IdleTimer {
        constructor(params) {
          _IdleTimer_timeoutInMinutes.set(this, void 0);
          _IdleTimer_timer.set(this, void 0);
          _IdleTimer_onTimeout.set(this, void 0);
          this.tracker = () => {
            window.addEventListener("onload", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener("mousemove", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener("onmousedown", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener("onscroll", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener("onkeypress", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
          };
          _IdleTimer_cleanUpTracker.set(this, () => {
            window.removeEventListener("onload", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener("mousemove", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener("onmousedown", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener("onscroll", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener("onkeypress", __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
          });
          _IdleTimer_clearTimeout.set(this, () => {
            if (__classPrivateFieldGet(this, _IdleTimer_timer, "f")) {
              clearTimeout(__classPrivateFieldGet(this, _IdleTimer_timer, "f"));
            }
          });
          _IdleTimer_resetTimer.set(this, () => {
            __classPrivateFieldGet(this, _IdleTimer_clearTimeout, "f").call(this);
            __classPrivateFieldSet(this, _IdleTimer_timer, setTimeout(() => {
              __classPrivateFieldGet(this, _IdleTimer_clearTimeout, "f").call(this);
              __classPrivateFieldGet(this, _IdleTimer_cleanUpTracker, "f").call(this);
              __classPrivateFieldGet(this, _IdleTimer_onTimeout, "f").call(this);
            }, __classPrivateFieldGet(this, _IdleTimer_timeoutInMinutes, "f") * 60 * 1e3), "f");
          });
          const {
            timeoutInMinutes,
            onTimeout
          } = params;
          __classPrivateFieldSet(this, _IdleTimer_timeoutInMinutes, timeoutInMinutes, "f");
          __classPrivateFieldSet(this, _IdleTimer_onTimeout, onTimeout, "f");
        }
      }
      _IdleTimer_timeoutInMinutes = /* @__PURE__ */ new WeakMap(), _IdleTimer_timer = /* @__PURE__ */ new WeakMap(), _IdleTimer_onTimeout = /* @__PURE__ */ new WeakMap(), _IdleTimer_cleanUpTracker = /* @__PURE__ */ new WeakMap(), _IdleTimer_clearTimeout = /* @__PURE__ */ new WeakMap(), _IdleTimer_resetTimer = /* @__PURE__ */ new WeakMap();
      let auth;
      const init = (options) => __awaiter(void 0, void 0, void 0, function* () {
        auth = new Authentication(options);
        if (!auth) {
          return false;
        }
        if (auth.autoLogout()) {
          const timeoutInMinutes = auth.idleTimeoutInMinutes();
          const idleTimer = new IdleTimer({
            timeoutInMinutes,
            onTimeout: logout
          });
          idleTimer.tracker();
        }
        const passthrough2 = auth.checkTokenInUrl();
        if (passthrough2) {
          return false;
        }
        const done = yield auth.checkAuthCode();
        if (done) {
          return auth.afterAuthenticated();
        }
        const hasAuthSession = yield verifySession();
        if (hasAuthSession) {
          return auth.afterAuthenticated();
        }
        const autoLogin = auth.autoLogin();
        if (autoLogin) {
          yield login();
        }
        return true;
      });
      const verifySession = () => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        return yield auth.verifySession();
      });
      const getAccessToken = () => {
        return !auth ? "" : auth.getAccessToken();
      };
      const getRefreshedAccessToken = () => __awaiter(void 0, void 0, void 0, function* () {
        return !auth ? "" : yield auth.getRefreshedAccessToken();
      });
      const login = () => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.login().then((token) => {
          return token && auth ? auth.afterAuthenticated() : void 0;
        });
      });
      const logout = (force = false, redirectUrl) => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.triggerHooks(HookName.beforeLogout).then(() => {
          if (auth) {
            auth.destroyNotification();
            auth.logout(force, redirectUrl);
          }
          return;
        }).catch(function(err) {
          console.error("Error while logging out : ", err);
          throw Error(err);
        });
      });
      const registerHook = (hookName, callback) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        if (auth) {
          auth.setHook({
            name: hookName,
            callback
          });
        }
        return;
      };
      const getDecodedAccessToken = () => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.getDecodedAccessToken();
      };
      const getDecodedRefreshedAccessToken = () => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        return yield auth.getDecodedRefreshedAccessToken();
      });
      const userInfo = () => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.getUserInfo();
      };
      const linkUser = (redirectUrl, newWindow, callback) => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        yield auth.linkUser({
          redirectUrl,
          newWindow,
          callback
        });
      });
      const unlinkUser = (redirectUrl, newWindow, callback) => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        yield auth.unlinkUser({
          redirectUrl,
          newWindow,
          callback
        });
      });
      const getCloudProviderToken = (jti) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.getCloudProviderToken(jti);
      };
      const cloudProviderUserInfo = () => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.cloudProviderUserInfo();
      };
      const cloudProviderReauthenticate = (nonce, redirectUrl, newWindow, callback) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.cloudProviderReauthenticate({
          redirectUrl,
          nonce,
          newWindow,
          callback
        });
      };
      const cloudProviderUpdate = (cloudProviderId) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        if (!cloudProviderId) {
          throw Error("cloudProviderId is required");
        }
        return auth.cloudProviderUpdate(cloudProviderId);
      };
      const statusAdminConsent = () => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.statusAdminConsent();
      };
      const getAdminConsent = (domain, redirectUrl, newWindow, callback) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        auth.getAdminConsent({
          domain,
          redirectUrl,
          newWindow,
          callback
        });
      };
      const revokeAdminConsent = () => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.revokeAdminConsent();
      };
      const getLinkMap = (allUsers) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.getLinkMap(allUsers);
      };
      const setLinkMap = (linkMap) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.setLinkMap(linkMap);
      };
      const authoriseSupport = (code, duration) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        return auth.authoriseSupport({
          code,
          duration
        });
      };
      const changePassword = (redirectUrl, newWindow, callback) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        auth.changePassword({
          redirectUrl,
          newWindow,
          callback
        });
      };
      const registerEventListener = (topic, messageType, callback) => {
        if (!auth) {
          throw Error("Not init yet");
        }
        auth.registerEventListenerForUserChannel({
          topic,
          messageType,
          callback
        });
      };
      const passthrough = (url, newWindow = false, authHost) => __awaiter(void 0, void 0, void 0, function* () {
        if (!auth) {
          throw Error("Not init yet");
        }
        yield auth.passthrough({
          url,
          newWindow,
          authHost
        });
      });
      const AuthAgent2 = {
        init,
        registerHook,
        login,
        logout,
        getAccessToken,
        getRefreshedAccessToken,
        getDecodedAccessToken,
        getDecodedRefreshedAccessToken,
        userInfo,
        linkUser,
        unlinkUser,
        getCloudProviderToken,
        cloudProviderUserInfo,
        cloudProviderReauthenticate,
        cloudProviderUpdate,
        statusAdminConsent,
        getAdminConsent,
        revokeAdminConsent,
        getLinkMap,
        setLinkMap,
        authoriseSupport,
        changePassword,
        registerEventListener,
        passthrough
      };
      exports2.AuthAgent = AuthAgent2;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// node_modules/@leapdev/leap-host/dist/leaphost.esm.js
init_esm_browser();
var import_src = __toESM(require_index_umd());

// node_modules/js-base64/base64.mjs
var version2 = "3.7.5";
var VERSION = version2;
var _hasatob = typeof atob === "function";
var _hasbtoa = typeof btoa === "function";
var _hasBuffer = typeof Buffer === "function";
var _TD = typeof TextDecoder === "function" ? new TextDecoder() : void 0;
var _TE = typeof TextEncoder === "function" ? new TextEncoder() : void 0;
var b64ch = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
var b64chs = Array.prototype.slice.call(b64ch);
var b64tab = ((a) => {
  let tab = {};
  a.forEach((c, i) => tab[c] = i);
  return tab;
})(b64chs);
var b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
var _fromCC = String.fromCharCode.bind(String);
var _U8Afrom = typeof Uint8Array.from === "function" ? Uint8Array.from.bind(Uint8Array) : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));
var _mkUriSafe = (src) => src.replace(/=/g, "").replace(/[+\/]/g, (m0) => m0 == "+" ? "-" : "_");
var _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\+\/]/g, "");
var btoaPolyfill = (bin) => {
  let u32, c0, c1, c2, asc = "";
  const pad = bin.length % 3;
  for (let i = 0; i < bin.length; ) {
    if ((c0 = bin.charCodeAt(i++)) > 255 || (c1 = bin.charCodeAt(i++)) > 255 || (c2 = bin.charCodeAt(i++)) > 255)
      throw new TypeError("invalid character found");
    u32 = c0 << 16 | c1 << 8 | c2;
    asc += b64chs[u32 >> 18 & 63] + b64chs[u32 >> 12 & 63] + b64chs[u32 >> 6 & 63] + b64chs[u32 & 63];
  }
  return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
};
var _btoa = _hasbtoa ? (bin) => btoa(bin) : _hasBuffer ? (bin) => Buffer.from(bin, "binary").toString("base64") : btoaPolyfill;
var _fromUint8Array = _hasBuffer ? (u8a) => Buffer.from(u8a).toString("base64") : (u8a) => {
  const maxargs = 4096;
  let strs = [];
  for (let i = 0, l = u8a.length; i < l; i += maxargs) {
    strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));
  }
  return _btoa(strs.join(""));
};
var fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);
var cb_utob = (c) => {
  if (c.length < 2) {
    var cc = c.charCodeAt(0);
    return cc < 128 ? c : cc < 2048 ? _fromCC(192 | cc >>> 6) + _fromCC(128 | cc & 63) : _fromCC(224 | cc >>> 12 & 15) + _fromCC(128 | cc >>> 6 & 63) + _fromCC(128 | cc & 63);
  } else {
    var cc = 65536 + (c.charCodeAt(0) - 55296) * 1024 + (c.charCodeAt(1) - 56320);
    return _fromCC(240 | cc >>> 18 & 7) + _fromCC(128 | cc >>> 12 & 63) + _fromCC(128 | cc >>> 6 & 63) + _fromCC(128 | cc & 63);
  }
};
var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
var utob = (u) => u.replace(re_utob, cb_utob);
var _encode = _hasBuffer ? (s) => Buffer.from(s, "utf8").toString("base64") : _TE ? (s) => _fromUint8Array(_TE.encode(s)) : (s) => _btoa(utob(s));
var encode = (src, urlsafe = false) => urlsafe ? _mkUriSafe(_encode(src)) : _encode(src);
var encodeURI = (src) => encode(src, true);
var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
var cb_btou = (cccc) => {
  switch (cccc.length) {
    case 4:
      var cp = (7 & cccc.charCodeAt(0)) << 18 | (63 & cccc.charCodeAt(1)) << 12 | (63 & cccc.charCodeAt(2)) << 6 | 63 & cccc.charCodeAt(3), offset = cp - 65536;
      return _fromCC((offset >>> 10) + 55296) + _fromCC((offset & 1023) + 56320);
    case 3:
      return _fromCC((15 & cccc.charCodeAt(0)) << 12 | (63 & cccc.charCodeAt(1)) << 6 | 63 & cccc.charCodeAt(2));
    default:
      return _fromCC((31 & cccc.charCodeAt(0)) << 6 | 63 & cccc.charCodeAt(1));
  }
};
var btou = (b) => b.replace(re_btou, cb_btou);
var atobPolyfill = (asc) => {
  asc = asc.replace(/\s+/g, "");
  if (!b64re.test(asc))
    throw new TypeError("malformed base64.");
  asc += "==".slice(2 - (asc.length & 3));
  let u24, bin = "", r1, r2;
  for (let i = 0; i < asc.length; ) {
    u24 = b64tab[asc.charAt(i++)] << 18 | b64tab[asc.charAt(i++)] << 12 | (r1 = b64tab[asc.charAt(i++)]) << 6 | (r2 = b64tab[asc.charAt(i++)]);
    bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
  }
  return bin;
};
var _atob = _hasatob ? (asc) => atob(_tidyB64(asc)) : _hasBuffer ? (asc) => Buffer.from(asc, "base64").toString("binary") : atobPolyfill;
var _toUint8Array = _hasBuffer ? (a) => _U8Afrom(Buffer.from(a, "base64")) : (a) => _U8Afrom(_atob(a).split("").map((c) => c.charCodeAt(0)));
var toUint8Array = (a) => _toUint8Array(_unURI(a));
var _decode = _hasBuffer ? (a) => Buffer.from(a, "base64").toString("utf8") : _TD ? (a) => _TD.decode(_toUint8Array(a)) : (a) => btou(_atob(a));
var _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == "-" ? "+" : "/"));
var decode = (src) => _decode(_unURI(src));
var isValid = (src) => {
  if (typeof src !== "string")
    return false;
  const s = src.replace(/\s+/g, "").replace(/={0,2}$/, "");
  return !/[^\s0-9a-zA-Z\+/]/.test(s) || !/[^\s0-9a-zA-Z\-_]/.test(s);
};
var _noEnum = (v) => {
  return {
    value: v,
    enumerable: false,
    writable: true,
    configurable: true
  };
};
var extendString = function() {
  const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));
  _add("fromBase64", function() {
    return decode(this);
  });
  _add("toBase64", function(urlsafe) {
    return encode(this, urlsafe);
  });
  _add("toBase64URI", function() {
    return encode(this, true);
  });
  _add("toBase64URL", function() {
    return encode(this, true);
  });
  _add("toUint8Array", function() {
    return toUint8Array(this);
  });
};
var extendUint8Array = function() {
  const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));
  _add("toBase64", function(urlsafe) {
    return fromUint8Array(this, urlsafe);
  });
  _add("toBase64URI", function() {
    return fromUint8Array(this, true);
  });
  _add("toBase64URL", function() {
    return fromUint8Array(this, true);
  });
};
var extendBuiltins = () => {
  extendString();
  extendUint8Array();
};
var gBase64 = {
  version: version2,
  VERSION,
  atob: _atob,
  atobPolyfill,
  btoa: _btoa,
  btoaPolyfill,
  fromBase64: decode,
  toBase64: encode,
  encode,
  encodeURI,
  encodeURL: encodeURI,
  utob,
  btou,
  decode,
  isValid,
  fromUint8Array,
  toUint8Array,
  extendString,
  extendUint8Array,
  extendBuiltins
};

// node_modules/@leapdev/leap-host/dist/leaphost.esm.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var LeapContext = function LeapContext2(context, hostInfo) {
  this.context = context;
  this.hostInfo = hostInfo;
};
var HostInfo = function HostInfo2(appSessionId, hostType, hostVersion, env, region) {
  this.appSessionId = appSessionId;
  this.hostType = hostType;
  this.hostVersion = hostVersion;
  this.env = env;
  this.region = region;
};
var config = {
  auth: {
    host: {
      dev: {
        au: "https://auth.dev.leap.services"
      },
      test: {
        au: "https://login.test.leap365.com.au",
        uk: "https://login.test.leap365.co.uk",
        us: "https://login.test.leap365.com",
        ca: "https://login.test.leap365.ca"
      },
      live: {
        au: "https://login.leap365.com.au",
        uk: "https://login.leap365.co.uk",
        us: "https://login.leap365.com",
        ca: "https://login.leap365.ca"
      }
    }
  }
};
function getQueryStringValue(key, searchInHash) {
  if (searchInHash === void 0) {
    searchInHash = false;
  }
  var result = void 0;
  var locationSection = searchInHash ? window.location.hash : window.location.search;
  if (locationSection && locationSection.length > 1) {
    var keyValues = locationSection.substring(1).split("&");
    var i = 0;
    while (result === void 0 && i < keyValues.length) {
      var split = keyValues[i].split("=");
      if (split.length === 2 && split[0] === key)
        result = split[1];
      i++;
    }
  }
  return result;
}
function decodeToken(token) {
  if (!token)
    return void 0;
  try {
    var payload = token.split(".")[1];
    return JSON.parse(atob(payload));
  } catch (e) {
    return void 0;
  }
}
var BaseApi = function() {
  function BaseApi2(requestContext) {
    this.registeredCommands = {};
    var hostInfo = new HostInfo(requestContext.appSessionId, requestContext.host, null, requestContext.env, requestContext.region);
    this._leapContext = new LeapContext(void 0, hostInfo);
    this._isTrustedApp = !!requestContext.trustedApp;
  }
  var _proto = BaseApi2.prototype;
  _proto.init = function init(leapAuthClientId) {
    var _this = this;
    var errMsg = getQueryStringValue("error");
    if (errMsg === "access_denied")
      this.system.close();
    return new Promise(function(resolve, reject) {
      _this.registerHostMessageHandler(_this.leapContext.hostInfo.appSessionId, function(_ref) {
        var leapContext = _ref.data;
        _this.deregisterHostMessageHandler(_this.leapContext.hostInfo.appSessionId);
        var leapContextObj = {
          context: leapContext.context,
          hostInfo: _this.leapContext.hostInfo
        };
        if (!leapContext.context || Object.keys(leapContext.context).length === 0 && !!leapContext.matterContext) {
          leapContextObj.context = leapContext.matterContext;
        }
        var clientId = leapAuthClientId;
        if (!!leapContext.hostInfo) {
          _this._isTrustedApp = leapContext.isTrustedApp;
          leapContextObj.hostInfo = new HostInfo(_this.leapContext.hostInfo.appSessionId, leapContext.hostInfo.hostType, leapContext.hostInfo.hostVersion, leapContext.hostInfo.env, leapContext.hostInfo.region);
          if (!_this.isTrustedApp) {
            if (!!leapContext.clientId) {
              clientId = leapContext.clientId;
            } else {
              return reject("Failed to load the clientId from the schema");
            }
          } else {
            _this._leapContext = new LeapContext(leapContextObj.context, leapContextObj.hostInfo);
            _this.hostRelatedSetup();
            return resolve();
          }
        } else {
          if (_this.isTrustedApp) {
            _this._userToken = leapContext.authtoken;
            _this._leapContext = new LeapContext(leapContextObj.context, leapContextObj.hostInfo);
            _this.hostRelatedSetup();
            return resolve();
          }
        }
        _this._leapContext = new LeapContext(leapContextObj.context, leapContextObj.hostInfo);
        _this.hostRelatedSetup();
        var authEnv = leapContextObj.hostInfo.env.includes("live") ? "live" : leapContextObj.hostInfo.env;
        var authHost = config.auth.host[authEnv][leapContextObj.hostInfo.region];
        import_src.AuthAgent.init({
          authHost,
          clientId,
          autoLogin: true,
          autoLogout: false,
          uniqueSession: false,
          scopes: ["*"],
          autoRefreshToken: false
        }).then(function(accessToken) {
          return resolve();
        });
      });
      _this.retrieveContext();
    });
  };
  _proto.getRefreshedAccessToken = function getRefreshedAccessToken() {
    try {
      var _this3 = this;
      if (_this3.isTrustedApp) {
        if (!!_this3.leapContext.hostInfo.hostVersion) {
          var _this3$system$send;
          return Promise.resolve((_this3$system$send = _this3.system.send({
            command: "internal.getAccessToken"
          }, true)) !== null && _this3$system$send !== void 0 ? _this3$system$send : _this3._userToken);
        } else {
          return Promise.resolve(_this3._userToken);
        }
      }
      return Promise.resolve(import_src.AuthAgent.getRefreshedAccessToken());
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.getDecodedRefreshedAccessToken = function getDecodedRefreshedAccessToken() {
    try {
      var _this5 = this;
      return Promise.resolve(_this5.getRefreshedAccessToken()).then(decodeToken);
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.getUserInfo = function getUserInfo() {
    try {
      return Promise.resolve(import_src.AuthAgent.userInfo());
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.registerHostMessageHandler = function registerHostMessageHandler(command, callback) {
    var alreadyRegistered = !!this.registeredCommands[command];
    if (!alreadyRegistered) {
      this.registeredCommands[command] = callback;
    } else {
      throw new Error("Command already registered");
    }
  };
  _proto.deregisterHostMessageHandler = function deregisterHostMessageHandler(command) {
    delete this.registeredCommands[command];
  };
  _proto.twoWayCall = function twoWayCall(request, requestFn, responseFn) {
    var _this6 = this;
    var requestId = v4_default();
    return new Promise(function(resolve, reject) {
      _this6.registerHostMessageHandler(requestId, function(hostResponse) {
        _this6.deregisterHostMessageHandler(requestId);
        if (hostResponse.isSuccess) {
          resolve(responseFn(hostResponse.data));
        } else {
          reject(new Error(hostResponse.error));
        }
      });
      requestFn(requestId, request);
    });
  };
  _proto.handleCommand = function handleCommand(command, payload) {
    var registeredCommand = this.registeredCommands[command];
    if (!!registeredCommand && !!payload) {
      var params = JSON.parse(payload);
      registeredCommand(params);
    } else if (!!registeredCommand) {
      registeredCommand();
    } else {
      throw new Error("Host command not registered");
    }
  };
  _createClass(BaseApi2, [{
    key: "leapContext",
    get: function get() {
      return this._leapContext;
    }
  }, {
    key: "isTrustedApp",
    get: function get() {
      return this._isTrustedApp;
    }
  }]);
  return BaseApi2;
}();
var Accounting = function() {
  function Accounting2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Accounting2.prototype;
  _proto.createTimeEntry = function createTimeEntry(request) {
    this.fourd.call4Dv2("accounting.createTimeEntry", request);
  };
  _proto.createFeeEntry = function createFeeEntry(request) {
    this.fourd.call4Dv2("accounting.createFeeEntry", request);
  };
  _proto.createCostRecovery = function createCostRecovery(request) {
    this.fourd.call4Dv2("accounting.createCostRecovery", request);
  };
  _proto.createInvoice = function createInvoice(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("accounting.createInvoice", request2, requestId);
    }, function(response) {
      return true;
    });
  };
  _proto.createOfficeReceipt = function createOfficeReceipt(request) {
    this.fourd.call4Dv2("accounting.createOfficeReceipt", request);
  };
  _proto.createOfficePayment = function createOfficePayment(request) {
    this.fourd.call4Dv2("accounting.createOfficePayment", request);
  };
  _proto.createOfficeJournal = function createOfficeJournal(request) {
    this.fourd.call4Dv2("accounting.createOfficeJournal", request);
  };
  _proto.createTrustReceipt = function createTrustReceipt(request) {
    this.fourd.call4Dv2("accounting.createTrustReceipt", request);
  };
  _proto.createTrustPayment = function createTrustPayment(request) {
    this.fourd.call4Dv2("accounting.createTrustPayment", request);
  };
  _proto.createTrustJournal = function createTrustJournal(request) {
    this.fourd.call4Dv2("accounting.createTrustJournal", request);
  };
  _proto.createTrustToOffice = function createTrustToOffice(request) {
    this.fourd.call4Dv2("accounting.createTrustToOffice", request);
  };
  _proto.createOfficePaymentRequest = function createOfficePaymentRequest(request) {
    this.fourd.call4Dv2("accounting.createOfficePaymentRequest", request);
  };
  _proto.createTrustPaymentRequest = function createTrustPaymentRequest(request) {
    this.fourd.call4Dv2("accounting.createTrustPaymentRequest", request);
  };
  _proto.reloadFinancialSummary = function reloadFinancialSummary(request) {
    this.fourd.call4Dv2("accounting.reloadFinancialSummary", request);
  };
  _proto.reloadTimeFeeList = function reloadTimeFeeList(request) {
    this.fourd.call4Dv2("accounting.reloadTimeFeeList", request);
  };
  _proto.reloadOfficeLedger = function reloadOfficeLedger(request) {
    this.fourd.call4Dv2("accounting.reloadOfficeLedger", request);
  };
  _proto.reloadAnticipatedPaymentList = function reloadAnticipatedPaymentList(request) {
    this.fourd.call4Dv2("accounting.reloadAnticipatedPaymentList", request);
  };
  _proto.reloadCostRecoveryList = function reloadCostRecoveryList(request) {
    this.fourd.call4Dv2("accounting.reloadCostRecoveryList", request);
  };
  _proto.reloadTrustLedger = function reloadTrustLedger(request) {
    this.fourd.call4Dv2("accounting.reloadTrustLedger", request);
  };
  _proto.reloadControlledMoneyList = function reloadControlledMoneyList(request) {
    this.fourd.call4Dv2("accounting.reloadControlledMoneyList", request);
  };
  _proto.reloadPowerMoneyList = function reloadPowerMoneyList(request) {
    this.fourd.call4Dv2("accounting.reloadPowerMoneyList", request);
  };
  _proto.reloadTransitMoneyList = function reloadTransitMoneyList(request) {
    this.fourd.call4Dv2("accounting.reloadTransitMoneyList", request);
  };
  _proto.openFee = function openFee(request) {
    if (request.isAutoTime)
      request.timed = true;
    this.fourd.call4Dv2("accounting.openFee", request);
  };
  return Accounting2;
}();
var App = function() {
  function App2(fourd) {
    this.fourd = fourd;
  }
  var _proto = App2.prototype;
  _proto.openApp = function openApp(request) {
    this.fourd.call4Dv2("app.openApp", request);
  };
  return App2;
}();
var Calc = function() {
  function Calc2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Calc2.prototype;
  _proto.evaluatePaths = function evaluatePaths(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      var calcRequest = {
        method: "POST",
        url: "/api/evaluate/paths",
        body: request2
      };
      _this.fourd.call4Dv2("calc.evaluatePaths", calcRequest, requestId);
    }, function(response) {
      if (response.status >= 400) {
        throw new Error(JSON.parse(response.body).message);
      } else {
        var responseData;
        try {
          responseData = JSON.parse(response.body);
        } catch (e) {
          responseData = response.body;
        }
        return responseData;
      }
    });
  };
  return Calc2;
}();
var Communication = function() {
  function Communication2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Communication2.prototype;
  _proto.composeEmail = function composeEmail(request) {
    this.fourd.call4Dv2("communication.composeEmail", request);
  };
  _proto.createAppointment = function createAppointment(request) {
    this.fourd.call4Dv2("communication.createAppointment", request);
  };
  _proto.createTask = function createTask(request) {
    this.fourd.call4Dv2("communication.createTask", request);
  };
  return Communication2;
}();
var Document = function() {
  function Document2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Document2.prototype;
  _proto.previewDocument = function previewDocument(request) {
    this.fourd.call4Dv2("document.previewDocument", request);
  };
  _proto.previewPrecedent = function previewPrecedent(request) {
    this.fourd.call4Dv2("document.previewPrecedent", request);
  };
  _proto.createDocumentFromContainer = function createDocumentFromContainer(request) {
    this.fourd.call4Dv2("document.createDocumentFromContainer", request);
  };
  _proto.createDocumentFromPrecedent = function createDocumentFromPrecedent(request) {
    this.fourd.call4Dv2("document.createDocumentFromPrecedent", request);
  };
  _proto.openDocument = function openDocument(request) {
    this.fourd.call4Dv2("document.openDocument", request);
  };
  _proto.reloadDocumentList = function reloadDocumentList(request) {
    this.fourd.call4Dv2("document.reloadDocumentList", request);
  };
  _proto.editPrecedent = function editPrecedent(request) {
    this.fourd.call4Dv2("document.editPrecedent", request);
  };
  _proto.selectPrecedent = function selectPrecedent(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("document.selectPrecedent", request2, requestId);
    }, function(response) {
      return response;
    });
  };
  return Document2;
}();
var Infotrack = function() {
  function Infotrack2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Infotrack2.prototype;
  _proto.orderSearch = function orderSearch(request) {
    this.fourd.call4Dv2("infotrack.orderSearch", request);
  };
  return Infotrack2;
}();
var LawConnect = function() {
  function LawConnect2(fourd) {
    this.fourd = fourd;
  }
  var _proto = LawConnect2.prototype;
  _proto.shareDocuments = function shareDocuments(request) {
    this.fourd.call4Dv2("lawconnect.shareDocuments", request);
  };
  _proto.shareFolder = function shareFolder(request) {
    this.fourd.call4Dv2("lawconnect.shareFolder", request);
  };
  _proto.shareOfficeStatement = function shareOfficeStatement(request) {
    this.fourd.call4Dv2("lawconnect.shareOfficeStatement", request);
  };
  _proto.shareTrustStatement = function shareTrustStatement(request) {
    this.fourd.call4Dv2("lawconnect.shareTrustStatement", request);
  };
  return LawConnect2;
}();
var Matter = function() {
  function Matter2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Matter2.prototype;
  _proto.openTable = function openTable(request) {
    if (request == null) {
      request.order = 1;
    }
    this.fourd.call4Dv2("matter.openTable", request);
  };
  _proto.openMatter = function openMatter(request) {
    this.fourd.call4Dv2("matter.openMatter", request);
  };
  _proto.selectMatter = function selectMatter(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("matter.selectMatter", request2, requestId);
    }, function(response) {
      var _this$fourd$leapConte, _this$fourd$leapConte2;
      if (!((_this$fourd$leapConte = _this.fourd.leapContext) !== null && _this$fourd$leapConte !== void 0 && (_this$fourd$leapConte2 = _this$fourd$leapConte.hostInfo) !== null && _this$fourd$leapConte2 !== void 0 && _this$fourd$leapConte2.hostVersion) || _this.fourd.leapContext.hostInfo.hostVersion < "2.4.280.0") {
        return response.map(function(r) {
          var matter = _extends({}, r, {
            deleted: r["delete"],
            matterTypeId: ""
          });
          delete matter["delete"];
          return matter;
        });
      }
      return response;
    });
  };
  return Matter2;
}();
var MsTeams = function() {
  function MsTeams2(fourd) {
    this.fourd = fourd;
  }
  var _proto = MsTeams2.prototype;
  _proto.shareDocument = function shareDocument(request) {
    this.fourd.call4Dv2("msteams.shareDocument", request);
  };
  _proto.shareMatter = function shareMatter(request) {
    this.fourd.call4Dv2("msteams.shareMatter", request);
  };
  _proto.requestCallback = function requestCallback(request) {
    this.fourd.call4Dv2("msteams.requestCallback", request);
  };
  return MsTeams2;
}();
var Register = function() {
  function Register2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Register2.prototype;
  _proto.reloadDocumentRegisterList = function reloadDocumentRegisterList(request) {
    this.fourd.call4Dv2("register.reloadDocumentRegisterList", request);
  };
  _proto.reloadPowerEstateList = function reloadPowerEstateList(request) {
    this.fourd.call4Dv2("register.reloadPowerEstateList", request);
  };
  return Register2;
}();
var Schema = function() {
  function Schema2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Schema2.prototype;
  _proto.customiseList = function customiseList(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("schema.customiseList", request2, requestId);
    }, function(response) {
      return response;
    });
  };
  _proto.getLists = function getLists(request) {
    var _this2 = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this2.fourd.call4Dv2("schema.getLists", request2, requestId);
    }, function(response) {
      return response;
    });
  };
  return Schema2;
}();
var System = function() {
  function System2(fourd) {
    this.fourd = fourd;
    this.isString = function(value) {
      return typeof value === "string" || value instanceof String;
    };
  }
  var _proto = System2.prototype;
  _proto.openTwitter = function openTwitter(request) {
    this.fourd.call4Dv2("system.openTwitter", request);
  };
  _proto.close = function close() {
    this.fourd.call4Dv2("system.close");
  };
  _proto.hide = function hide() {
    this.fourd.call4Dv2("system.hide");
  };
  _proto.wait = function wait(request) {
    this.fourd.call4Dv2("system.wait", request);
  };
  _proto.resume = function resume() {
    this.fourd.call4Dv2("system.resume");
  };
  _proto.cancelClose = function cancelClose() {
    this.fourd.call4Dv2("system.cancelClose");
  };
  _proto.alert = function alert(request) {
    if (!this.isString(request.message) || !request.message) {
      return;
    }
    this.fourd.call4Dv2("system.alert", request);
  };
  _proto.error = function error(request) {
    if (!this.isString(request.message) || !request.message) {
      return;
    }
    this.fourd.call4Dv2("system.error", request);
  };
  _proto.openDialog = function openDialog(request) {
    var _this = this;
    if (!this.isString(request.message) || !request.message) {
      throw new Error("Invalid value in message");
    } else if (!request.dialogType) {
      throw new Error("DialogType cannot be null");
    }
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("system.openDialog", request2, requestId);
    }, function(response) {
      return response;
    });
  };
  _proto.openUrl = function openUrl(config2) {
    config2["action"] = "OpenURL";
    this.fourd.call4Dv2("system.openUrl", config2);
  };
  _proto.getSystemInfo = function getSystemInfo() {
    var _this2 = this;
    if (this._systemInfo) {
      return Promise.resolve(this._systemInfo);
    }
    return this.fourd.twoWayCall(null, function(requestId, request) {
      _this2.fourd.call4Dv2("system.getSystemInfo", request, requestId);
    }, function(response) {
      _this2._systemInfo = response;
      return response;
    });
  };
  _proto.setWindowTitle = function setWindowTitle(request) {
    this.fourd.call4Dv2("system.setWindowTitle", request);
  };
  _proto.onBeforeClose = function onBeforeClose(handler) {
    var _this3 = this;
    handler().then(function(shouldCancelClose) {
      if (shouldCancelClose) {
        _this3.cancelClose();
      }
    });
  };
  _proto.send = function send(request, hasResponse) {
    if (hasResponse === void 0) {
      hasResponse = false;
    }
    try {
      var _this5 = this;
      if (!_this5.fourd.isTrustedApp) {
        throw new Error("Permission error");
      }
      if (request === null || request === void 0) {
        throw new Error("Bad request");
      }
      var isObject = typeof request === "object";
      if (isObject && request["command"]) {
        if (hasResponse) {
          return Promise.resolve(_this5.fourd.twoWayCall(request, function(requestId, request2) {
            _this5.fourd.call4Dv2(request2["command"], request2["request"], requestId);
          }, function(response) {
            return response;
          }));
        } else {
          _this5.fourd.call4Dv2(request["command"], request["request"]);
          return Promise.resolve();
        }
      }
      if (hasResponse) {
        return Promise.resolve(_this5.fourd.twoWayCall(request, function(requestId, request2) {
          _this5.fourd.call4Dv2("system.send", request2, requestId);
        }, function(response) {
          return response;
        }));
      } else {
        _this5.fourd.call4Dv2("system.send", request);
        return Promise.resolve();
      }
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.sendLegacy = function sendLegacy(request) {
    var _this6 = this;
    var isObject = typeof request === "object";
    if (!isObject || !request["requestId"]) {
      this.fourd.call4D(this.fourd.to4DJSONString(request));
      return Promise.resolve();
    } else {
      return new Promise(function(resolve, reject) {
        _this6.fourd.registerHostMessageHandler(request["requestId"], function(response) {
          _this6.fourd.deregisterHostMessageHandler(request["requestId"]);
          if (typeof response === "object" && !!response) {
            var hasStatus = response.hasOwnProperty("isSuccess");
            var hasError = response.hasOwnProperty("error");
            var hasData = response.hasOwnProperty("data");
            if (hasStatus && (hasError || hasData)) {
              if (response["isSuccess"]) {
                resolve(response["data"]);
              } else {
                reject(new Error(response["error"]));
              }
            }
          } else {
            resolve(response);
          }
        });
        _this6.fourd.call4D(_this6.fourd.to4DJSONString(request));
      });
    }
  };
  _proto.finishLoading = function finishLoading() {
    this.fourd.call4Dv2("system.finishLoading");
  };
  return System2;
}();
var Card = function() {
  function Card2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Card2.prototype;
  _proto.selectCard = function selectCard(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("card.selectCard", request2, requestId);
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  _proto.createCard = function createCard() {
    var _this2 = this;
    return this.fourd.twoWayCall(null, function(requestId, request) {
      _this2.fourd.call4Dv2("card.createCard", request, requestId);
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  _proto.openCard = function openCard(request) {
    this.fourd.call4Dv2("card.openCard", request);
  };
  return Card2;
}();
var Staff = function() {
  function Staff2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Staff2.prototype;
  _proto.selectStaff = function selectStaff(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("staff.selectStaff", request2, requestId);
    }, function(response) {
      var _this$fourd$leapConte, _this$fourd$leapConte2;
      if (!((_this$fourd$leapConte = _this.fourd.leapContext) !== null && _this$fourd$leapConte !== void 0 && (_this$fourd$leapConte2 = _this$fourd$leapConte.hostInfo) !== null && _this$fourd$leapConte2 !== void 0 && _this$fourd$leapConte2.hostVersion) || _this.fourd.leapContext.hostInfo.hostVersion < "2.4.280.0") {
        return response.map(function(r) {
          var staff = _extends({}, r, {
            staffId: r.staffGUID,
            userId: r.userGUID,
            branchId: r.branchGUID
          });
          delete staff.staffGUID;
          delete staff.userGUID;
          delete staff.branchGUID;
          return staff;
        });
      }
      return response;
    });
  };
  return Staff2;
}();
var Person = function() {
  function Person2(fourd) {
    this.fourd = fourd;
  }
  var _proto = Person2.prototype;
  _proto.selectPerson = function selectPerson(request) {
    var _this = this;
    return this.fourd.twoWayCall(request, function(requestId, request2) {
      _this.fourd.call4Dv2("person.selectPerson", request2, requestId);
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  _proto.openPerson = function openPerson(request) {
    this.fourd.call4Dv2("person.openPerson", request);
  };
  return Person2;
}();
var BrowserFourdApi = function(_BaseApi) {
  _inheritsLoose(BrowserFourdApi2, _BaseApi);
  function BrowserFourdApi2(requestContext) {
    var _this;
    if (requestContext === void 0) {
      requestContext = void 0;
    }
    _this = _BaseApi.call(this, requestContext) || this;
    _this.protocol = "Fourd://";
    _this._accounting = new Accounting(_assertThisInitialized(_this));
    _this._app = new App(_assertThisInitialized(_this));
    _this._calc = new Calc(_assertThisInitialized(_this));
    _this._communication = new Communication(_assertThisInitialized(_this));
    _this._document = new Document(_assertThisInitialized(_this));
    _this._infotrack = new Infotrack(_assertThisInitialized(_this));
    _this._lawconnect = new LawConnect(_assertThisInitialized(_this));
    _this._person = new Person(_assertThisInitialized(_this));
    _this._matter = new Matter(_assertThisInitialized(_this));
    _this._msteams = new MsTeams(_assertThisInitialized(_this));
    _this._register = new Register(_assertThisInitialized(_this));
    _this._schema = new Schema(_assertThisInitialized(_this));
    _this._system = new System(_assertThisInitialized(_this));
    _this._card = new Card(_assertThisInitialized(_this));
    _this._staff = new Staff(_assertThisInitialized(_this));
    _this.setupHostMessageEventHandler();
    return _this;
  }
  var _proto = BrowserFourdApi2.prototype;
  _proto.retrieveContext = function retrieveContext() {
    this.call4Dv2("RetrieveLeapAppContext", {}, this.leapContext.hostInfo.appSessionId);
  };
  _proto.to4DJSONString = function to4DJSONString(value, encode2) {
    if (encode2 === void 0) {
      return "json=" + gBase64.encode(JSON.stringify(value));
    } else {
      return JSON.stringify(value);
    }
  };
  _proto.call4D = function call4D(request) {
    if (!window["$4d"]) {
      request = this.protocol + request;
      window.location.assign(request);
    } else {
      request = this.protocol + request;
      window["$4d"].WebArea_RequestHandler(request);
    }
  };
  _proto.call4Dv2 = function call4Dv2(command, request, requestId) {
    if (request === void 0 || typeof request === "object") {
      request = _extends({}, request || {}, {
        appSessionId: this.leapContext.hostInfo.appSessionId
      });
      if (requestId) {
        request = _extends({}, request, {
          requestId
        });
      }
    }
    var obj = {
      command,
      request,
      sdkVersion: 2
    };
    this.call4D(this.to4DJSONString(obj));
  };
  _proto.hostRelatedSetup = function hostRelatedSetup() {
  };
  _proto.setupHostMessageEventHandler = function setupHostMessageEventHandler() {
    var _this2 = this;
    var global2 = window;
    global2.handleHostMessage = function(command, payload) {
      return _BaseApi.prototype.handleCommand.call(_this2, command, payload);
    };
  };
  _createClass(BrowserFourdApi2, [{
    key: "accounting",
    get: function get() {
      return this._accounting;
    }
  }, {
    key: "app",
    get: function get() {
      return this._app;
    }
  }, {
    key: "calc",
    get: function get() {
      return this._calc;
    }
  }, {
    key: "card",
    get: function get() {
      return this._card;
    }
  }, {
    key: "communication",
    get: function get() {
      return this._communication;
    }
  }, {
    key: "document",
    get: function get() {
      return this._document;
    }
  }, {
    key: "infotrack",
    get: function get() {
      return this._infotrack;
    }
  }, {
    key: "lawconnect",
    get: function get() {
      return this._lawconnect;
    }
  }, {
    key: "matter",
    get: function get() {
      return this._matter;
    }
  }, {
    key: "msteams",
    get: function get() {
      return this._msteams;
    }
  }, {
    key: "person",
    get: function get() {
      return this._person;
    }
  }, {
    key: "register",
    get: function get() {
      return this._register;
    }
  }, {
    key: "schema",
    get: function get() {
      return this._schema;
    }
  }, {
    key: "system",
    get: function get() {
      return this._system;
    }
  }, {
    key: "staff",
    get: function get() {
      return this._staff;
    }
  }]);
  return BrowserFourdApi2;
}(BaseApi);
var whitelistDomains = {
  dev_au: ["https://dev.leap365.com.au", "https://dev.leapjd.com.au/"],
  test_au: ["https://test.leap365.com.au", "https://test-epic1.leap365.com.au", "https://reporting-test.leapaws.com.au", "https://reporting-dev.leapaws.com.au", "https://leapcalc-renderer-au-test.leap.services", "https://test.leapjd.com.au", "https://test.leapjd.co.nz"],
  live_au: ["https://staging.leap365.com.au", "https://sandbox.leap365.com.au", "https://app.leap365.com.au", "https://reporting.leapaws.com.au", "https://leapcalc-renderer-au-live.leap.services"],
  liveb_au: ["https://staging.liveb.leap365.com.au", "https://liveb.leap365.com.au"],
  test_uk: ["https://test.leap365.co.uk", "https://reporting-test.leapaws.co.uk", "https://leapcalc-renderer-uk-test.leap.services", "https://test.leapjd.co.uk"],
  live_uk: ["https://app.leap365.co.uk", "https://staging.leap365.co.uk", "https://sandbox.leap365.co.uk", "https://reporting.leapaws.co.uk", "https://leapcalc-renderer-uk-live.leap.services"],
  test_us: ["https://test.leap365.com", "https://reporting-test.leapaws.com", "https://leapcalc-renderer-us-test.leap.services", "https://test.leapjd.com"],
  live_us: ["https://app.leap365.com", "https://staging.leap365.com", "https://sandbox.leap365.com", "https://reporting.leapaws.com", "https://leapcalc-renderer-us-live.leap.services"],
  test_ca: ["https://test.leap365.ca", "https://reporting.test.leapaws.ca", "https://renderer.test.ca.leap.services", "https://test.leapjd.ca"],
  live_ca: ["https://app.leap365.ca", "https://staging.leap365.ca", "https://sandbox.leap365.ca", "https://reporting.leapaws.ca", "https://renderer.ca.leap.services"]
};
var devDomains = ["http://localhost:53504", "http://localhost:8080", "http://localhost:9005"];
var leapHostTestAppDomain = "https://leaphost.test.leap365.com.au";
var jd = "http://my.leapjd";
var Accounting$1 = function() {
  function Accounting2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Accounting2.prototype;
  _proto.createTimeEntry = function createTimeEntry(request) {
    this.iframe.postMessage({
      command: "accounting.createTimeEntry",
      args: request
    });
  };
  _proto.createFeeEntry = function createFeeEntry(request) {
    this.iframe.postMessage({
      command: "accounting.createFeeEntry",
      args: request
    });
  };
  _proto.createCostRecovery = function createCostRecovery(request) {
    this.iframe.postMessage({
      command: "accounting.createCostRecovery",
      args: request
    });
  };
  _proto.createInvoice = function createInvoice(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "accounting.createInvoice",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  _proto.createOfficeReceipt = function createOfficeReceipt(request) {
    this.iframe.postMessage({
      command: "accounting.createOfficeReceipt",
      args: request
    });
  };
  _proto.createOfficePayment = function createOfficePayment(request) {
    this.iframe.postMessage({
      command: "accounting.createOfficePayment",
      args: request
    });
  };
  _proto.createOfficeJournal = function createOfficeJournal(request) {
    this.iframe.postMessage({
      command: "accounting.createOfficeJournal",
      args: request
    });
  };
  _proto.createTrustReceipt = function createTrustReceipt(request) {
    this.iframe.postMessage({
      command: "accounting.createTrustReceipt",
      args: request
    });
  };
  _proto.createTrustPayment = function createTrustPayment(request) {
    this.iframe.postMessage({
      command: "accounting.createTrustPayment",
      args: request
    });
  };
  _proto.createTrustJournal = function createTrustJournal(request) {
    this.iframe.postMessage({
      command: "accounting.createTrustJournal",
      args: request
    });
  };
  _proto.createTrustToOffice = function createTrustToOffice(request) {
    this.iframe.postMessage({
      command: "accounting.createTrustToOffice",
      args: request
    });
  };
  _proto.createOfficePaymentRequest = function createOfficePaymentRequest(request) {
    this.iframe.postMessage({
      command: "accounting.createOfficePaymentRequest",
      args: request
    });
  };
  _proto.createTrustPaymentRequest = function createTrustPaymentRequest(request) {
    this.iframe.postMessage({
      command: "accounting.createTrustPaymentRequest",
      args: request
    });
  };
  _proto.reloadFinancialSummary = function reloadFinancialSummary(request) {
    this.iframe.postMessage({
      command: "accounting.reloadFinancialSummary",
      args: request
    });
  };
  _proto.reloadTimeFeeList = function reloadTimeFeeList(request) {
    this.iframe.postMessage({
      command: "accounting.reloadTimeFeeList",
      args: request
    });
  };
  _proto.reloadOfficeLedger = function reloadOfficeLedger(request) {
    this.iframe.postMessage({
      command: "accounting.reloadOfficeLedger",
      args: request
    });
  };
  _proto.reloadAnticipatedPaymentList = function reloadAnticipatedPaymentList(request) {
    this.iframe.postMessage({
      command: "accounting.reloadAnticipatedPaymentList",
      args: request
    });
  };
  _proto.reloadCostRecoveryList = function reloadCostRecoveryList(request) {
    this.iframe.postMessage({
      command: "accounting.reloadCostRecoveryList",
      args: request
    });
  };
  _proto.reloadTrustLedger = function reloadTrustLedger(request) {
    this.iframe.postMessage({
      command: "accounting.reloadTrustLedger",
      args: request
    });
  };
  _proto.reloadControlledMoneyList = function reloadControlledMoneyList(request) {
    this.iframe.postMessage({
      command: "accounting.reloadControlledMoneyList",
      args: request
    });
  };
  _proto.reloadPowerMoneyList = function reloadPowerMoneyList(request) {
    this.iframe.postMessage({
      command: "accounting.reloadPowerMoneyList",
      args: request
    });
  };
  _proto.reloadTransitMoneyList = function reloadTransitMoneyList(request) {
    this.iframe.postMessage({
      command: "accounting.reloadTransitMoneyList",
      args: request
    });
  };
  _proto.openFee = function openFee(request) {
    if (request.isAutoTime)
      request.timed = true;
    this.iframe.postMessage({
      command: "accounting.openFee",
      args: request
    });
  };
  return Accounting2;
}();
var App$1 = function() {
  function App2(iframe) {
    this.iframe = iframe;
  }
  var _proto = App2.prototype;
  _proto.openApp = function openApp(request) {
    this.iframe.postMessage({
      command: "app.openApp",
      args: request
    });
  };
  return App2;
}();
var Calc$1 = function() {
  function Calc2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Calc2.prototype;
  _proto.evaluatePaths = function evaluatePaths(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "calc.evaluatePaths",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  return Calc2;
}();
var Communication$1 = function() {
  function Communication2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Communication2.prototype;
  _proto.composeEmail = function composeEmail(request) {
    this.iframe.postMessage({
      command: "communication.composeEmail",
      args: request
    });
  };
  _proto.createAppointment = function createAppointment(request) {
    this.iframe.postMessage({
      command: "communication.createAppointment",
      args: request
    });
  };
  _proto.createTask = function createTask(request) {
    this.iframe.postMessage({
      command: "communication.createTask",
      args: request
    });
  };
  return Communication2;
}();
var Document$1 = function() {
  function Document2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Document2.prototype;
  _proto.previewDocument = function previewDocument(request) {
    this.iframe.postMessage({
      command: "document.previewDocument",
      args: request
    });
  };
  _proto.previewPrecedent = function previewPrecedent(request) {
    this.iframe.postMessage({
      command: "document.previewPrecedent",
      args: request
    });
  };
  _proto.createDocumentFromContainer = function createDocumentFromContainer(request) {
    this.iframe.postMessage({
      command: "document.createDocumentFromContainer",
      args: request
    });
  };
  _proto.createDocumentFromPrecedent = function createDocumentFromPrecedent(request) {
    this.iframe.postMessage({
      command: "document.createDocumentFromPrecedent",
      args: request
    });
  };
  _proto.openDocument = function openDocument(request) {
    this.iframe.postMessage({
      command: "document.openDocument",
      args: request
    });
  };
  _proto.reloadDocumentList = function reloadDocumentList(request) {
    this.iframe.postMessage({
      command: "document.reloadDocumentList",
      args: request
    });
  };
  _proto.editPrecedent = function editPrecedent(request) {
    this.iframe.postMessage({
      command: "document.editPrecedent",
      args: request
    });
  };
  _proto.selectPrecedent = function selectPrecedent(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "document.selectPrecedent",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  return Document2;
}();
var Infotrack$1 = function() {
  function Infotrack2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Infotrack2.prototype;
  _proto.orderSearch = function orderSearch(request) {
    this.iframe.postMessage({
      command: "infotrack.orderSearch",
      args: request
    });
  };
  return Infotrack2;
}();
var LawConnect$1 = function() {
  function LawConnect2(iframe) {
    this.iframe = iframe;
  }
  var _proto = LawConnect2.prototype;
  _proto.shareDocuments = function shareDocuments(request) {
    this.iframe.postMessage({
      command: "lawconnect.shareDocuments",
      args: request
    });
  };
  _proto.shareFolder = function shareFolder(request) {
    this.iframe.postMessage({
      command: "lawconnect.shareFolder",
      args: request
    });
  };
  _proto.shareOfficeStatement = function shareOfficeStatement(request) {
    this.iframe.postMessage({
      command: "lawconnect.shareOfficeStatement",
      args: request
    });
  };
  _proto.shareTrustStatement = function shareTrustStatement(request) {
    this.iframe.postMessage({
      command: "lawconnect.shareTrustStatement",
      args: request
    });
  };
  return LawConnect2;
}();
var Matter$1 = function() {
  function Matter2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Matter2.prototype;
  _proto.openTable = function openTable(request) {
    this.iframe.postMessage({
      command: "matter.openTable",
      args: request
    });
  };
  _proto.openMatter = function openMatter(request) {
    this.iframe.postMessage({
      command: "matter.openMatter",
      args: request
    });
  };
  _proto.selectMatter = function selectMatter(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "matter.selectMatter",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  return Matter2;
}();
var MsTeams$1 = function() {
  function MsTeams2(iframe) {
    this.iframe = iframe;
  }
  var _proto = MsTeams2.prototype;
  _proto.shareDocument = function shareDocument(request) {
    this.iframe.postMessage({
      command: "msteams.shareDocument",
      args: request
    });
  };
  _proto.shareMatter = function shareMatter(request) {
    this.iframe.postMessage({
      command: "msteams.shareMatter",
      args: request
    });
  };
  _proto.requestCallback = function requestCallback(request) {
    this.iframe.postMessage({
      command: "msteams.requestCallback",
      args: request
    });
  };
  return MsTeams2;
}();
var Card$1 = function() {
  function Card2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Card2.prototype;
  _proto.selectCard = function selectCard(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "card.selectCard",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  _proto.createCard = function createCard() {
    var _this2 = this;
    return this.iframe.twoWayCall(null, function(requestId, request) {
      _this2.iframe.postMessage({
        command: "card.createCard",
        args: _extends({}, request, {
          requestId
        })
      });
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  _proto.openCard = function openCard(request) {
    this.iframe.postMessage({
      command: "card.openCard",
      args: request
    });
  };
  return Card2;
}();
var Staff$1 = function() {
  function Staff2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Staff2.prototype;
  _proto.selectStaff = function selectStaff(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "staff.selectStaff",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  return Staff2;
}();
var Register$1 = function() {
  function Register2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Register2.prototype;
  _proto.reloadDocumentRegisterList = function reloadDocumentRegisterList(request) {
    this.iframe.postMessage({
      command: "register.reloadDocumentRegisterList",
      args: request
    });
  };
  _proto.reloadPowerEstateList = function reloadPowerEstateList(request) {
    this.iframe.postMessage({
      command: "register.reloadPowerEstateList",
      args: request
    });
  };
  return Register2;
}();
var Schema$1 = function() {
  function Schema2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Schema2.prototype;
  _proto.customiseList = function customiseList(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "schema.customiseList",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  _proto.getLists = function getLists(request) {
    var _this2 = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this2.iframe.postMessage({
        command: "schema.getLists",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  return Schema2;
}();
var System$1 = function() {
  function System2(iframe) {
    this.iframe = iframe;
  }
  var _proto = System2.prototype;
  _proto.openTwitter = function openTwitter(request) {
    throw new Error("Not supported");
  };
  _proto.close = function close() {
    this.iframe.postMessage({
      command: "system.close"
    });
  };
  _proto.hide = function hide() {
    this.iframe.postMessage({
      command: "system.hide"
    });
  };
  _proto.wait = function wait(request) {
    this.iframe.postMessage({
      command: "system.wait",
      args: request
    });
  };
  _proto.resume = function resume() {
    this.iframe.postMessage({
      command: "system.resume"
    });
  };
  _proto.cancelClose = function cancelClose() {
    this.iframe.postMessage({
      command: "system.cancelClose"
    });
  };
  _proto.alert = function alert(request) {
    this.iframe.postMessage({
      command: "system.alert",
      args: request
    });
  };
  _proto.error = function error(request) {
    this.iframe.postMessage({
      command: "system.error",
      args: request
    });
  };
  _proto.openDialog = function openDialog(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "system.openDialog",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      return response;
    });
  };
  _proto.openUrl = function openUrl(config2) {
    this.iframe.postMessage({
      command: "system.openUrl",
      args: config2
    });
  };
  _proto.getSystemInfo = function getSystemInfo() {
    var _this2 = this;
    if (this._systemInfo) {
      return Promise.resolve(this._systemInfo);
    }
    return this.iframe.twoWayCall(null, function(requestId) {
      _this2.iframe.postMessage({
        command: "system.getSystemInfo",
        args: {
          requestId
        }
      });
    }, function(response) {
      _this2._systemInfo = response;
      return response;
    });
  };
  _proto.setWindowTitle = function setWindowTitle(request) {
    this.iframe.postMessage({
      command: "system.setWindowTitle",
      args: request
    });
  };
  _proto.onBeforeClose = function onBeforeClose(handler) {
    var _this3 = this;
    handler().then(function(shouldCancelClose) {
      if (shouldCancelClose) {
        _this3.cancelClose();
      }
    });
  };
  _proto.send = function send(request, hasResponse) {
    var _this4 = this;
    if (hasResponse === void 0) {
      hasResponse = false;
    }
    if (!this.iframe.isTrustedApp) {
      throw new Error("Permission error");
    }
    if (request === null || request === void 0) {
      throw new Error("Bad request");
    }
    var isObject = typeof request === "object";
    if (isObject && hasResponse) {
      return this.iframe.twoWayCall(request, function(requestId, request2) {
        _this4.iframe.postMessage({
          command: "system.send",
          args: _extends({}, request2, {
            requestId
          })
        });
      }, function(response) {
        return response;
      });
    } else {
      this.iframe.postMessage({
        command: "system.send",
        args: request
      });
      return Promise.resolve();
    }
  };
  _proto.finishLoading = function finishLoading() {
    this.iframe.postMessage({
      command: "system.finishLoading"
    });
  };
  return System2;
}();
var Person$1 = function() {
  function Person2(iframe) {
    this.iframe = iframe;
  }
  var _proto = Person2.prototype;
  _proto.selectPerson = function selectPerson(request) {
    var _this = this;
    return this.iframe.twoWayCall(request, function(requestId, request2) {
      _this.iframe.postMessage({
        command: "person.selectPerson",
        args: _extends({}, request2, {
          requestId
        })
      });
    }, function(response) {
      var responseData;
      try {
        responseData = JSON.parse(response);
      } catch (e) {
        responseData = response;
      }
      return responseData;
    });
  };
  _proto.openPerson = function openPerson(request) {
    this.iframe.postMessage({
      command: "person.openPerson",
      args: request
    });
  };
  return Person2;
}();
var IframeWindow = function(_BaseApi) {
  _inheritsLoose(IframeWindow2, _BaseApi);
  function IframeWindow2(requestContext, newTab) {
    var _this;
    if (newTab === void 0) {
      newTab = false;
    }
    _this = _BaseApi.call(this, requestContext) || this;
    _this._accounting = new Accounting$1(_assertThisInitialized(_this));
    _this._app = new App$1(_assertThisInitialized(_this));
    _this._calc = new Calc$1(_assertThisInitialized(_this));
    _this._card = new Card$1(_assertThisInitialized(_this));
    _this._communication = new Communication$1(_assertThisInitialized(_this));
    _this._document = new Document$1(_assertThisInitialized(_this));
    _this._infotrack = new Infotrack$1(_assertThisInitialized(_this));
    _this._lawconnect = new LawConnect$1(_assertThisInitialized(_this));
    _this._matter = new Matter$1(_assertThisInitialized(_this));
    _this._msteams = new MsTeams$1(_assertThisInitialized(_this));
    _this._person = new Person$1(_assertThisInitialized(_this));
    _this._register = new Register$1(_assertThisInitialized(_this));
    _this._schema = new Schema$1(_assertThisInitialized(_this));
    _this._staff = new Staff$1(_assertThisInitialized(_this));
    _this._system = new System$1(_assertThisInitialized(_this));
    _this.parentWindow = newTab ? window.opener : window.parent;
    _this.registerMessageEventListener();
    return _this;
  }
  var _proto = IframeWindow2.prototype;
  _proto.retrieveContext = function retrieveContext() {
    this.postMessage({
      command: "RetrieveLeapAppContext",
      args: {
        requestId: this.leapContext.hostInfo.appSessionId
      }
    });
  };
  _proto.hostRelatedSetup = function hostRelatedSetup() {
    if (this.leapContext.hostInfo.hostType === "web") {
      this._whiteListedHostDomains = [].concat(whitelistDomains[this.leapContext.hostInfo.env + "_" + this.leapContext.hostInfo.region] || [], devDomains, [leapHostTestAppDomain, jd]);
    }
  };
  _proto.postMessage = function postMessage(message) {
    var _this$leapContext, _this$leapContext$hos, _this$leapContext$hos2, _message$sdkVersion;
    message.args = _extends({}, message.args || {});
    if ((_this$leapContext = this.leapContext) !== null && _this$leapContext !== void 0 && (_this$leapContext$hos = _this$leapContext.hostInfo) !== null && _this$leapContext$hos !== void 0 && _this$leapContext$hos.appSessionId)
      message.args.appSessionId = (_this$leapContext$hos2 = this.leapContext.hostInfo) === null || _this$leapContext$hos2 === void 0 ? void 0 : _this$leapContext$hos2.appSessionId;
    message.sdkVersion = (_message$sdkVersion = message.sdkVersion) !== null && _message$sdkVersion !== void 0 ? _message$sdkVersion : 2;
    this.parentWindow.postMessage(message, "*");
  };
  _proto.registerMessageEventListener = function registerMessageEventListener() {
    window.addEventListener("message", this.receiveMessage.bind(this), false);
  };
  _proto.receiveMessage = function receiveMessage(event) {
    var _this$_whiteListedHos;
    if (((_this$_whiteListedHos = this._whiteListedHostDomains) === null || _this$_whiteListedHos === void 0 ? void 0 : _this$_whiteListedHos.length) > 0 && !this._whiteListedHostDomains.includes(event.origin)) {
      return;
    }
    if (!!event.data.command) {
      var command = event.data.command;
      if (!!event.data.payload) {
        _BaseApi.prototype.handleCommand.call(this, command, event.data.payload);
      } else {
        _BaseApi.prototype.handleCommand.call(this, command);
      }
    }
  };
  _createClass(IframeWindow2, [{
    key: "accounting",
    get: function get() {
      return this._accounting;
    }
  }, {
    key: "app",
    get: function get() {
      return this._app;
    }
  }, {
    key: "calc",
    get: function get() {
      return this._calc;
    }
  }, {
    key: "card",
    get: function get() {
      return this._card;
    }
  }, {
    key: "communication",
    get: function get() {
      return this._communication;
    }
  }, {
    key: "document",
    get: function get() {
      return this._document;
    }
  }, {
    key: "infotrack",
    get: function get() {
      return this._infotrack;
    }
  }, {
    key: "lawconnect",
    get: function get() {
      return this._lawconnect;
    }
  }, {
    key: "matter",
    get: function get() {
      return this._matter;
    }
  }, {
    key: "msteams",
    get: function get() {
      return this._msteams;
    }
  }, {
    key: "staff",
    get: function get() {
      return this._staff;
    }
  }, {
    key: "person",
    get: function get() {
      return this._person;
    }
  }, {
    key: "register",
    get: function get() {
      return this._register;
    }
  }, {
    key: "schema",
    get: function get() {
      return this._schema;
    }
  }, {
    key: "system",
    get: function get() {
      return this._system;
    }
  }]);
  return IframeWindow2;
}(BaseApi);
var LeapHostSdkFactory = function() {
  function LeapHostSdkFactory2() {
  }
  LeapHostSdkFactory2.getInstance = function getInstance() {
    var requestContext = this.getRequestContext();
    if (!requestContext)
      return null;
    var newTab = (getQueryStringValue("newTab") || "").toLowerCase() === "true";
    if (!!window["$4d"] || requestContext.host === "desktop")
      return new BrowserFourdApi(requestContext);
    else
      return new IframeWindow(requestContext, newTab);
  };
  LeapHostSdkFactory2.getRequestContext = function getRequestContext() {
    var _getQueryStringValue;
    var appSessionId = getQueryStringValue("appSessionId");
    if (!appSessionId)
      return null;
    var host = (_getQueryStringValue = getQueryStringValue("host")) !== null && _getQueryStringValue !== void 0 ? _getQueryStringValue : "desktop";
    var env = getQueryStringValue("env");
    var region = getQueryStringValue("region");
    var trustedApp = (getQueryStringValue("trustedApp") || "").toLowerCase() === "true";
    if (!!env) {
      if (env.includes("liveb"))
        env = "liveb";
      else if (env.includes("live"))
        env = "live";
      else if (env.includes("test"))
        env = "test";
      else if (env.includes("dev"))
        env = "dev";
    }
    var requestContext = {
      appSessionId,
      host,
      env,
      region,
      trustedApp
    };
    return requestContext;
  };
  return LeapHostSdkFactory2;
}();
export {
  LeapContext,
  LeapHostSdkFactory
};
/*! Bundled license information:

lodash/lodash.js:
  (**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

pubnub/dist/web/pubnub.min.js:
  (*! 4.33.1 / Consumer  *)
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <http://feross.org>
   * @license  MIT
   *)
  (*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid *)
*/
//# sourceMappingURL=@leapdev_leap-host.js.map
