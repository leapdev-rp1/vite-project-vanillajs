var _IdleTimer_timeoutInMinutes, _IdleTimer_timer, _IdleTimer_onTimeout, _IdleTimer_cleanUpTracker, _IdleTimer_clearTimeout, _IdleTimer_resetTimer;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
export class IdleTimer {
    constructor(params) {
        _IdleTimer_timeoutInMinutes.set(this, void 0);
        _IdleTimer_timer.set(this, void 0);
        _IdleTimer_onTimeout.set(this, void 0);
        this.tracker = () => {
            window.addEventListener('onload', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener('mousemove', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener('onmousedown', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener('onscroll', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.addEventListener('onkeypress', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
        };
        _IdleTimer_cleanUpTracker.set(this, () => {
            window.removeEventListener('onload', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener('mousemove', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener('onmousedown', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener('onscroll', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
            window.removeEventListener('onkeypress', __classPrivateFieldGet(this, _IdleTimer_resetTimer, "f"), true);
        });
        _IdleTimer_clearTimeout.set(this, () => {
            if (__classPrivateFieldGet(this, _IdleTimer_timer, "f")) {
                clearTimeout(__classPrivateFieldGet(this, _IdleTimer_timer, "f"));
            }
        });
        _IdleTimer_resetTimer.set(this, () => {
            __classPrivateFieldGet(this, _IdleTimer_clearTimeout, "f").call(this);
            __classPrivateFieldSet(this, _IdleTimer_timer, setTimeout(() => {
                __classPrivateFieldGet(this, _IdleTimer_clearTimeout, "f").call(this);
                __classPrivateFieldGet(this, _IdleTimer_cleanUpTracker, "f").call(this);
                __classPrivateFieldGet(this, _IdleTimer_onTimeout, "f").call(this);
            }, __classPrivateFieldGet(this, _IdleTimer_timeoutInMinutes, "f") * 60 * 1000), "f");
        });
        const { timeoutInMinutes, onTimeout: onTimeout } = params;
        __classPrivateFieldSet(this, _IdleTimer_timeoutInMinutes, timeoutInMinutes, "f");
        __classPrivateFieldSet(this, _IdleTimer_onTimeout, onTimeout, "f");
    }
}
_IdleTimer_timeoutInMinutes = new WeakMap(), _IdleTimer_timer = new WeakMap(), _IdleTimer_onTimeout = new WeakMap(), _IdleTimer_cleanUpTracker = new WeakMap(), _IdleTimer_clearTimeout = new WeakMap(), _IdleTimer_resetTimer = new WeakMap();
//# sourceMappingURL=idle-timer.js.map