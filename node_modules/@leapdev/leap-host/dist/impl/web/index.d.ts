import { BaseApi } from '../base-impl';
import { RequestContext } from '../../api';
import { accounting } from '../../api/accounting';
import { app } from '../../api/app';
import { calc } from '../../api/calc';
import { communication } from '../../api/communication';
import { document } from '../../api/document';
import { infotrack } from '../../api/infotrack';
import { lawconnect } from '../../api/lawconnect';
import { matter } from '../../api/matter';
import { msteams } from '../../api/msteams';
import { staff } from '../../api/staff';
import { card } from '../../api/card';
import { register } from '../../api/register';
import { schema } from '../../api/schema';
import { system } from '../../api/system';
import { person } from '../../api/person';
export declare class IframeWindow extends BaseApi {
    private _whiteListedHostDomains;
    private _accounting;
    private _app;
    private _calc;
    private _communication;
    private _document;
    private _infotrack;
    private _lawconnect;
    private _matter;
    private _msteams;
    private _card;
    private _staff;
    private _register;
    private _person;
    private _schema;
    private _system;
    get accounting(): accounting.Api;
    get app(): app.Api;
    get calc(): calc.Api;
    get card(): card.Api;
    get communication(): communication.Api;
    get document(): document.Api;
    get infotrack(): infotrack.Api;
    get lawconnect(): lawconnect.Api;
    get matter(): matter.Api;
    get msteams(): msteams.Api;
    get staff(): staff.Api;
    get person(): person.Api;
    get register(): register.Api;
    get schema(): schema.Api;
    get system(): system.Api;
    private parentWindow;
    constructor(requestContext: RequestContext, newTab?: boolean);
    protected retrieveContext(): void;
    protected hostRelatedSetup(): void;
    postMessage(message: {
        command: string;
        args?: any;
        sdkVersion?: number;
    }): void;
    private registerMessageEventListener;
    private receiveMessage;
}
