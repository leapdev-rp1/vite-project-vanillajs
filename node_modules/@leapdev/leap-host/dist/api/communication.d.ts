import { MatterBasedRequest } from '.';
export declare namespace communication {
    export type DocumentFormat = 'EmailOriginal' | 'EmailPDF' | 'EmailLink';
    export type Recipient = AddressRecipient | CardRecipient;
    export interface AddressRecipient {
        address: string;
    }
    export interface CardRecipient {
        cardId: string;
        useEmail2?: boolean;
        usePerson1Email?: boolean;
        usePerson2Email?: boolean;
        usePerson3Email?: boolean;
        usePerson4Email?: boolean;
    }
    export interface Attachment {
        documentId: string;
        format: DocumentFormat;
    }
    interface CommunicationRequest extends MatterBasedRequest {
        subject?: string;
        attachments: Attachment[];
        htmlBody?: string;
    }
    export interface CreateAppointmentRequest extends CommunicationRequest {
        requiredAttendees: Recipient[];
        optionalAttendees: Recipient[];
        criticalDateId?: string;
        startDate?: string;
        endDate?: string;
        location?: string;
    }
    export interface CreateEmailRequest extends CommunicationRequest {
        toRecipients: Recipient[];
        ccRecipients: Recipient[];
        bccRecipients: Recipient[];
    }
    export interface CreateTaskRequest extends CommunicationRequest {
        startDate?: string;
        dueDate?: string;
    }
    export interface Api {
        composeEmail(request: CreateEmailRequest): void;
        createAppointment(request: CreateAppointmentRequest): void;
        createTask(request: CreateTaskRequest): void;
    }
    export {};
}
