import { MatterBasedRequest } from '.';
export declare namespace document {
    interface CreateDocumentRequest extends MatterBasedRequest {
        tableId: string;
        order: number;
        instance?: number;
        resultDocumentId?: string;
    }
    interface PrecedentRequestBase extends MatterBasedRequest {
        precedentId: string;
    }
    interface DocumentRequestBase extends MatterBasedRequest {
        documentId: string;
    }
    export interface CreateDocumentFromContainerRequest extends CreateDocumentRequest {
        containerId: string;
    }
    export interface CreateDocumentFromPrecedentRequest extends CreateDocumentRequest {
        precedentId: string;
    }
    export interface PreviewDocumentRequest extends DocumentRequestBase {
    }
    export interface OpenDocumentRequest extends DocumentRequestBase {
        officeOnline?: boolean;
    }
    export interface ReloadDocumentListRequest extends MatterBasedRequest {
    }
    export interface PreviewPrecedentRequest extends PrecedentRequestBase {
    }
    export interface EditPrecedentRequest extends PrecedentRequestBase {
    }
    export interface SelectPrecedentRequest extends MatterBasedRequest {
    }
    export interface SelectPrecedentResponse {
        sql: number;
        recordId: string;
        parentId: string;
        parentMatterTypeId: string;
        name: string;
        originalName: string;
        entity: string;
        sortByType: number;
        sortOrder: number;
        application: number;
        state: string;
        hasChild: number;
        deleteCode: number;
        documentType: string;
        code: string;
        formNumber: string;
        shortcutId: string;
        notification: string;
        precedentType: string;
        baseId: string;
        profileId: string;
        profileName: string;
        realClass: string;
        class: string;
        realDeleteCode: number;
        realMatterTypeId: string;
        realParentId: string;
        realProfileId: string;
        realCode: string;
        precedentTargetType: string;
        url: string;
        clonedVersion: number;
    }
    export interface Api {
        previewDocument(request: PreviewDocumentRequest): void;
        previewPrecedent(request: PreviewPrecedentRequest): void;
        editPrecedent(request: EditPrecedentRequest): void;
        createDocumentFromContainer(request: CreateDocumentFromContainerRequest): void;
        createDocumentFromPrecedent(request: CreateDocumentFromPrecedentRequest): void;
        openDocument(request: OpenDocumentRequest): void;
        reloadDocumentList(request: ReloadDocumentListRequest): void;
        selectPrecedent(request: SelectPrecedentRequest): Promise<SelectPrecedentResponse>;
    }
    export {};
}
