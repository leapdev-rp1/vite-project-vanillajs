import { BaseRequest } from '.';
export declare namespace card {
    interface Card {
        cardId: string;
        shortName: string;
        description: string;
        deleted: boolean;
        type: string;
    }
    interface CreatedCard {
        cardId: string;
    }
    interface SelectCardRequest extends BaseRequest {
        /**
         * defaults to false, set it to true allows multiple selection.
         */
        multiSelection?: boolean;
        /**
         * pre-populates the string in the search box.
         */
        searchString?: string;
        /**
         * filter can be one of the following values: All, Other, RecentCards,
         * MatterCards, Supplier, Company, Business or any tableIds
         */
        filter?: string;
    }
    interface OpenCardRequest extends BaseRequest {
        cardId: string;
    }
    interface Api {
        /**
         * Return selected card(s).
         */
        selectCard(request?: SelectCardRequest): Promise<Card[]>;
        createCard(): Promise<CreatedCard>;
        openCard(request: OpenCardRequest): void;
    }
}
