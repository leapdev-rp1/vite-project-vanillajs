{"version":3,"file":"leaphost.umd.development.js","sources":["../src/api/index.ts","../src/impl/config.ts","../src/impl/util.ts","../src/impl/base-impl.ts","../src/impl/desktop/accounting.ts","../src/impl/desktop/app.ts","../src/impl/desktop/calc.ts","../src/impl/desktop/communication.ts","../src/impl/desktop/document.ts","../src/impl/desktop/infotrack.ts","../src/impl/desktop/lawconnect.ts","../src/impl/desktop/matter.ts","../src/impl/desktop/msteams.ts","../src/impl/desktop/register.ts","../src/impl/desktop/schema.ts","../src/impl/desktop/system.ts","../src/impl/desktop/card.ts","../src/impl/desktop/staff.ts","../src/impl/desktop/person.ts","../src/impl/desktop/index.ts","../src/impl/web/config/whitelistdomain.ts","../src/impl/web/accounting.ts","../src/impl/web/app.ts","../src/impl/web/calc.ts","../src/impl/web/communication.ts","../src/impl/web/document.ts","../src/impl/web/infotrack.ts","../src/impl/web/lawconnect.ts","../src/impl/web/matter.ts","../src/impl/web/msteams.ts","../src/impl/web/card.ts","../src/impl/web/staff.ts","../src/impl/web/register.ts","../src/impl/web/schema.ts","../src/impl/web/system.ts","../src/impl/web/person.ts","../src/impl/web/index.ts","../src/impl/index.ts"],"sourcesContent":["import { calc } from './calc';\nimport { card } from '././card';\nimport { communication } from './communication';\nimport { document } from './document';\nimport { lawconnect } from './lawconnect';\nimport { matter } from './matter';\nimport { msteams } from './msteams';\nimport { system } from './system';\nimport { app } from './app';\nimport { infotrack } from './infotrack';\nimport { accounting } from './accounting';\nimport { person } from './person';\nimport { register } from './register';\nimport { schema } from './schema';\nimport { staff } from './staff';\nimport { UserInfo } from '@leapdev/auth-agent/src/lib/types';\n\nexport interface BaseRequest {\n  appSessionId?: string;\n  close?: boolean;\n}\n\nexport interface MatterBasedRequest extends BaseRequest {\n  matterId: string;\n}\n\nexport interface HostResponse {\n  isSuccess: boolean;\n  error: string;\n  data: any;\n}\n\nexport type MatterContext = {\n  matterId: string;\n  [key: string]: any;\n};\n\nexport type CardContext = {\n  cardId: string;\n  [key: string]: any;\n};\n\nexport type PersonContext = {\n  personId: string;\n  [key: string]: any;\n};\n\nexport interface RequestContext {\n  appSessionId: string; // leap-app session id - used for validation and host resource mapping\n  host: string; // web, reporting, android, apple (4D by default)\n  env: string; // dev, test, live\n  region: string; // au, us, uk\n  trustedApp?: boolean; // true for internal trusted applications\n  newTab?: boolean; // true for opening on new tab\n}\n\nexport class LeapContext {\n  constructor(readonly context: MatterContext | CardContext | PersonContext, readonly hostInfo: HostInfo) {}\n}\n\nexport class HostInfo {\n  constructor(\n    readonly appSessionId: string,\n    readonly hostType: string,\n    readonly hostVersion: string,\n    readonly env: string,\n    readonly region: string\n  ) {}\n}\n\nexport interface Api {\n  accounting: accounting.Api;\n  app: app.Api;\n  calc: calc.Api;\n  communication: communication.Api;\n  document: document.Api;\n  infotrack: infotrack.Api;\n  lawconnect: lawconnect.Api;\n  matter: matter.Api;\n  msteams: msteams.Api;\n  person: person.Api;\n  register: register.Api;\n  schema: schema.Api;\n  system: system.Api;\n  card: card.Api;\n  staff: staff.Api;\n\n  leapContext: LeapContext;\n\n  init(leapAuthClientId?: string): Promise<void>;\n  getRefreshedAccessToken(): Promise<string>;\n  getDecodedRefreshedAccessToken(): Promise<any>;\n  getUserInfo(): Promise<UserInfo>;\n  registerHostMessageHandler(command: string, callback?: (param?: any) => void): void;\n  deregisterHostMessageHandler(command: string): void;\n}\n","let config = {\n  auth: {\n    host: {\n      dev: {\n        au: 'https://auth.dev.leap.services',\n      },\n      test: {\n        au: 'https://login.test.leap365.com.au',\n        uk: 'https://login.test.leap365.co.uk',\n        us: 'https://login.test.leap365.com',\n        ca: 'https://login.test.leap365.ca',\n      },\n      live: {\n        au: 'https://login.leap365.com.au',\n        uk: 'https://login.leap365.co.uk',\n        us: 'https://login.leap365.com',\n        ca: 'https://login.leap365.ca',\n      },\n    },\n  },\n};\n\nexport { config };\n","/**\n * Returns the value of a query string paramter of the current url if exists, undefined otherwise.\n * @param key The name of the parameter\n * @returns The value or undefined\n */\nexport function getQueryStringValue(key: string, searchInHash: boolean = false): string {\n  let result = undefined;\n  const locationSection = searchInHash ? window.location.hash : window.location.search;\n\n  if (locationSection && locationSection.length > 1) {\n    const keyValues = locationSection.substring(1).split('&');\n    let i = 0;\n    while (result === undefined && i < keyValues.length) {\n      let split = keyValues[i].split('=');\n      if (split.length === 2 && split[0] === key) result = split[1];\n      i++;\n    }\n  }\n\n  return result;\n}\n\nexport function addMinutes(date, minutes) {\n  return new Date(date.getTime() + minutes * 60000);\n}\n\n/**\n * Decodes a JWT token\n * @param token The JWT token\n * @returns The decoded token\n */\nexport function decodeToken(token: string): any {\n  if (!token) return undefined;\n  try {\n    const payload = token.split('.')[1];\n    return JSON.parse(atob(payload));\n  } catch (e) {\n    return undefined;\n  }\n}\n","import {\n  Api,\n  LeapContext,\n  HostResponse,\n  RequestContext,\n  MatterContext,\n  HostInfo,\n  CardContext,\n  PersonContext,\n} from '../api';\nimport { app } from '../api/app';\nimport { calc } from '../api/calc';\nimport { communication } from '../api/communication';\nimport { document } from '../api/document';\nimport { infotrack } from '../api/infotrack';\nimport { lawconnect } from '../api/lawconnect';\nimport { matter } from '../api/matter';\nimport { msteams } from '../api/msteams';\nimport { system } from '../api/system';\nimport { accounting } from '../api/accounting';\nimport { register } from '../api/register';\nimport { schema } from '../api/schema';\nimport { v4 as uuidv4 } from 'uuid';\nimport { config } from './config';\nimport { card } from 'api/card';\nimport { staff } from 'api/staff';\nimport { person } from 'api/person';\nimport { AuthAgent } from '@leapdev/auth-agent/src/index.umd';\nimport { decodeToken, getQueryStringValue } from './util';\nimport { UserInfo } from '@leapdev/auth-agent/src/lib/types';\n\nexport abstract class BaseApi implements Api {\n  abstract get accounting(): accounting.Api;\n  abstract get app(): app.Api;\n  abstract get calc(): calc.Api;\n  abstract get card(): card.Api;\n  abstract get communication(): communication.Api;\n  abstract get document(): document.Api;\n  abstract get infotrack(): infotrack.Api;\n  abstract get lawconnect(): lawconnect.Api;\n  abstract get staff(): staff.Api;\n  abstract get msteams(): msteams.Api;\n  abstract get person(): person.Api;\n  abstract get register(): register.Api;\n  abstract get schema(): schema.Api;\n  abstract get matter(): matter.Api;\n  abstract get system(): system.Api;\n\n  protected _leapContext: LeapContext;\n  protected _isTrustedApp: boolean;\n\n  private registeredCommands: { [command: string]: (params?: any) => void };\n  private _userToken: string; //TODO: remove when LD2.4 is the minimum version\n\n  constructor(requestContext: RequestContext) {\n    this.registeredCommands = {};\n\n    const hostInfo = new HostInfo(\n      requestContext.appSessionId,\n      requestContext.host,\n      null,\n      requestContext.env,\n      requestContext.region\n    );\n    this._leapContext = new LeapContext(undefined, hostInfo);\n    this._isTrustedApp = !!requestContext.trustedApp;\n  }\n\n  get leapContext(): LeapContext {\n    return this._leapContext;\n  }\n\n  public get isTrustedApp(): boolean {\n    return this._isTrustedApp;\n  }\n\n  public init(leapAuthClientId?: string): Promise<void> {\n    //close the window if the user doesn't accept the permissions\n    const errMsg = getQueryStringValue('error');\n    if (errMsg === 'access_denied') this.system.close();\n\n    return new Promise((resolve, reject) => {\n      this.registerHostMessageHandler(\n        this.leapContext.hostInfo.appSessionId,\n        ({ data: leapContext }: leapContextResponse) => {\n          this.deregisterHostMessageHandler(this.leapContext.hostInfo.appSessionId);\n          const leapContextObj = {\n            context: leapContext.context,\n            hostInfo: this.leapContext.hostInfo,\n          };\n\n          if (!leapContext.context || (Object.keys(leapContext.context).length === 0 && !!leapContext.matterContext)) {\n            leapContextObj.context = leapContext.matterContext;\n          }\n\n          let clientId = leapAuthClientId;\n\n          //host info, available from LD2.4\n          if (!!leapContext.hostInfo) {\n            this._isTrustedApp = leapContext.isTrustedApp;\n\n            leapContextObj.hostInfo = new HostInfo(\n              this.leapContext.hostInfo.appSessionId,\n              leapContext.hostInfo.hostType,\n              leapContext.hostInfo.hostVersion,\n              leapContext.hostInfo.env,\n              leapContext.hostInfo.region\n            );\n\n            if (!this.isTrustedApp) {\n              //use clientId from the schema for non-trusted apps\n              if (!!leapContext.clientId) {\n                clientId = leapContext.clientId;\n              } else {\n                return reject('Failed to load the clientId from the schema');\n              }\n            } else {\n              //trusted apps don't need clientId\n              this._leapContext = new LeapContext(leapContextObj.context, leapContextObj.hostInfo);\n              this.hostRelatedSetup();\n              return resolve();\n            }\n          } else {\n            if (this.isTrustedApp) {\n              //TODO: remove when 2.4 is the minimum version\n              this._userToken = leapContext.authtoken;\n              this._leapContext = new LeapContext(leapContextObj.context, leapContextObj.hostInfo);\n              this.hostRelatedSetup();\n              return resolve();\n            }\n          }\n\n          this._leapContext = new LeapContext(leapContextObj.context, leapContextObj.hostInfo);\n          this.hostRelatedSetup();\n\n          const authEnv = leapContextObj.hostInfo.env.includes('live') ? 'live' : leapContextObj.hostInfo.env;\n          const authHost = config.auth.host[authEnv][leapContextObj.hostInfo.region];\n\n          AuthAgent.init({\n            authHost: authHost,\n            clientId: clientId,\n            autoLogin: true,\n            autoLogout: false,\n            uniqueSession: false,\n            scopes: ['*'], //AUTH-218, defaults to defaultScopes for marketplace apps\n            autoRefreshToken: false,\n          }).then((accessToken: string) => {\n            return resolve();\n          });\n        }\n      );\n      this.retrieveContext();\n    });\n  }\n\n  public async getRefreshedAccessToken(): Promise<string> {\n    if (this.isTrustedApp) {\n      if (!!this.leapContext.hostInfo.hostVersion) {\n        //fall back to the default userToken if this command has not been implemented yet\n        return this.system.send({ command: 'internal.getAccessToken' }, true) ?? this._userToken;\n      } else {\n        //TODO: remove when LD2.4 is the minimum version\n        //only LD2.3 does not have the value for \"hostVersion\"\n        return this._userToken;\n      }\n    }\n    return AuthAgent.getRefreshedAccessToken();\n  }\n\n  public async getDecodedRefreshedAccessToken(): Promise<any> {\n    const accessToken = await this.getRefreshedAccessToken();\n    return decodeToken(accessToken);\n  }\n\n  public async getUserInfo(): Promise<UserInfo> {\n    return AuthAgent.userInfo();\n  }\n\n  protected abstract retrieveContext(): void;\n  protected abstract hostRelatedSetup(): void;\n\n  public registerHostMessageHandler(command: string, callback?: (param?: any) => void) {\n    const alreadyRegistered = !!this.registeredCommands[command];\n\n    if (!alreadyRegistered) {\n      this.registeredCommands[command] = callback;\n    } else {\n      throw new Error('Command already registered');\n    }\n  }\n\n  public deregisterHostMessageHandler(command: string) {\n    delete this.registeredCommands[command];\n  }\n\n  /**\n   * A helper function that makes 2-way call easier. It takes care of registering and deregistering message handler for you.\n   * @param request the actual request object from LEAP app\n   * @param requestFn a function specifying how a request object should be sent to the host system. It passes the requestId as parameter so that the request function can attach it to the request object.\n   * @param responseFn a function specifying how a raw response from the host system should be handled / transformed\n   * @return a promise of the final response\n   */\n  public twoWayCall<I, O>(\n    request: I,\n    requestFn: (requestId: string, request: I) => void,\n    responseFn: (response: any) => O\n  ): Promise<O> {\n    const requestId = uuidv4();\n    return new Promise((resolve, reject) => {\n      this.registerHostMessageHandler(requestId, (hostResponse: HostResponse) => {\n        this.deregisterHostMessageHandler(requestId);\n        if (hostResponse.isSuccess) {\n          resolve(responseFn(hostResponse.data));\n        } else {\n          reject(new Error(hostResponse.error));\n        }\n      });\n      requestFn(requestId, request);\n    });\n  }\n\n  protected handleCommand(command: string, payload?: string) {\n    const registeredCommand = this.registeredCommands[command];\n\n    if (!!registeredCommand && !!payload) {\n      const params = JSON.parse(payload);\n      registeredCommand(params);\n    } else if (!!registeredCommand) {\n      registeredCommand();\n    } else {\n      throw new Error('Host command not registered');\n    }\n  }\n}\n\ninterface leapContextResponse {\n  isSuccess: boolean;\n  data: leapContextInternal;\n}\n\ninterface leapContextInternal {\n  authtoken: string; //TODO: remove when 2.4 is the minimum version\n  isTrustedApp: boolean;\n  clientId: string;\n  apiKey: string;\n  context: any;\n  matterContext: any; //deprecated, leave here for backwards compatible\n  hostInfo: HostInfo;\n}\n","import { accounting } from '../../api/accounting';\nimport { BrowserFourdApi } from '.';\nimport { MatterBasedRequest } from '../../api/.';\n\nexport class Accounting implements accounting.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  createTimeEntry(request: accounting.CreateTimeEntryRequest): void {\n    this.fourd.call4Dv2('accounting.createTimeEntry', request);\n  }\n\n  createFeeEntry(request: accounting.CreateFeeEntryRequest): void {\n    this.fourd.call4Dv2('accounting.createFeeEntry', request);\n  }\n\n  createCostRecovery(request: accounting.CreateCostRecoveryEntryRequest): void {\n    this.fourd.call4Dv2('accounting.createCostRecovery', request);\n  }\n\n  createInvoice(request: accounting.CreateInvoiceRequest): Promise<boolean> {\n    return this.fourd.twoWayCall<accounting.CreateInvoiceRequest, boolean>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('accounting.createInvoice', request, requestId);\n      },\n      (response) => {\n        return true; // TODO: check the actual response\n      }\n    );\n  }\n\n  createOfficeReceipt(request: accounting.CreateOfficeReceiptRequest): void {\n    this.fourd.call4Dv2('accounting.createOfficeReceipt', request);\n  }\n\n  createOfficePayment(request: accounting.CreateOfficePaymentRequest): void {\n    this.fourd.call4Dv2('accounting.createOfficePayment', request);\n  }\n\n  createOfficeJournal(request: accounting.CreateOfficeJournalRequest): void {\n    this.fourd.call4Dv2('accounting.createOfficeJournal', request);\n  }\n\n  createTrustReceipt(request: accounting.CreateTrustReceiptRequest): void {\n    this.fourd.call4Dv2('accounting.createTrustReceipt', request);\n  }\n\n  createTrustPayment(request: accounting.CreateTrustPaymentRequest): void {\n    this.fourd.call4Dv2('accounting.createTrustPayment', request);\n  }\n\n  createTrustJournal(request: accounting.CreateTrustJournalRequest): void {\n    this.fourd.call4Dv2('accounting.createTrustJournal', request);\n  }\n\n  createTrustToOffice(request: accounting.CreateTrustToOfficeRequest): void {\n    this.fourd.call4Dv2('accounting.createTrustToOffice', request);\n  }\n  createOfficePaymentRequest(request: accounting.CreateNewOfficePaymentRequestRequest): void {\n    this.fourd.call4Dv2('accounting.createOfficePaymentRequest', request);\n  }\n\n  createTrustPaymentRequest(request: accounting.CreateNewTrustPaymentRequestRequest): void {\n    this.fourd.call4Dv2('accounting.createTrustPaymentRequest', request);\n  }\n\n  reloadFinancialSummary(request: accounting.ReloadFinancialSummaryRequest): void {\n    this.fourd.call4Dv2('accounting.reloadFinancialSummary', request);\n  }\n\n  reloadTimeFeeList(request: accounting.ReloadTimeFeeListRequest): void {\n    this.fourd.call4Dv2('accounting.reloadTimeFeeList', request);\n  }\n\n  reloadOfficeLedger(request: accounting.ReloadOfficeLedgerRequest): void {\n    this.fourd.call4Dv2('accounting.reloadOfficeLedger', request);\n  }\n\n  reloadAnticipatedPaymentList(request: accounting.ReloadAnticipatedPaymentListRequest): void {\n    this.fourd.call4Dv2('accounting.reloadAnticipatedPaymentList', request);\n  }\n\n  reloadCostRecoveryList(request: accounting.ReloadCostRecoveryListRequest): void {\n    this.fourd.call4Dv2('accounting.reloadCostRecoveryList', request);\n  }\n\n  reloadTrustLedger(request: accounting.ReloadTrustLedgerRequest): void {\n    this.fourd.call4Dv2('accounting.reloadTrustLedger', request);\n  }\n\n  reloadControlledMoneyList(request: accounting.ReloadControlledMoneyListRequest): void {\n    this.fourd.call4Dv2('accounting.reloadControlledMoneyList', request);\n  }\n\n  reloadPowerMoneyList(request: accounting.ReloadPowerMoneyListRequest): void {\n    this.fourd.call4Dv2('accounting.reloadPowerMoneyList', request);\n  }\n\n  reloadTransitMoneyList(request: accounting.ReloadTransitMoneyListRequest): void {\n    this.fourd.call4Dv2('accounting.reloadTransitMoneyList', request);\n  }\n\n  openFee(request: accounting.OpenFeeRequest): void {\n    if (request.isAutoTime) request.timed = true;\n\n    this.fourd.call4Dv2('accounting.openFee', request);\n  }\n}\n","import { app } from '../../api/app';\nimport { BrowserFourdApi } from '.';\n\nexport class App implements app.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  openApp(request: app.OpenAppRequest): void {\n    this.fourd.call4Dv2('app.openApp', request);\n  }\n}\n","import { calc } from '../../api/calc';\nimport { BrowserFourdApi } from './index';\n\nexport class Calc implements calc.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  evaluatePaths(request: calc.EvaluatePathsRequest): Promise<calc.PathResult[]> {\n    return this.fourd.twoWayCall<calc.EvaluatePathsRequest, calc.PathResult[]>(\n      request,\n      (requestId, request) => {\n        const calcRequest = {\n          method: 'POST',\n          url: '/api/evaluate/paths',\n          body: request,\n        };\n        this.fourd.call4Dv2('calc.evaluatePaths', calcRequest, requestId);\n      },\n      (response) => {\n        if (response.status >= 400) {\n          throw new Error(JSON.parse(response.body).message);\n        } else {\n          let responseData;\n          try {\n            responseData = JSON.parse(response.body);\n          } catch (e) {\n            // Unable to parse response.body => response.body is not a stringify object\n            responseData = response.body;\n          }\n          return responseData;\n        }\n      }\n    );\n  }\n}\n","import { communication } from '../../api/communication';\nimport { BrowserFourdApi } from '.';\n\nexport class Communication implements communication.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  composeEmail(request: communication.CreateEmailRequest): void {\n    this.fourd.call4Dv2('communication.composeEmail', request);\n  }\n\n  createAppointment(request: communication.CreateAppointmentRequest): void {\n    this.fourd.call4Dv2('communication.createAppointment', request);\n  }\n\n  createTask(request: communication.CreateTaskRequest): void {\n    this.fourd.call4Dv2('communication.createTask', request);\n  }\n}\n","import { document } from '../../api/document';\nimport { BrowserFourdApi } from '.';\n\nexport class Document implements document.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  previewDocument(request: document.PreviewDocumentRequest): void {\n    this.fourd.call4Dv2('document.previewDocument', request);\n  }\n\n  previewPrecedent(request: document.PreviewPrecedentRequest): void {\n    this.fourd.call4Dv2('document.previewPrecedent', request);\n  }\n\n  createDocumentFromContainer(request: document.CreateDocumentFromContainerRequest): void {\n    this.fourd.call4Dv2('document.createDocumentFromContainer', request);\n  }\n\n  createDocumentFromPrecedent(request: document.CreateDocumentFromPrecedentRequest): void {\n    this.fourd.call4Dv2('document.createDocumentFromPrecedent', request);\n  }\n\n  openDocument(request: document.OpenDocumentRequest): void {\n    this.fourd.call4Dv2('document.openDocument', request);\n  }\n\n  reloadDocumentList(request: document.ReloadDocumentListRequest): void {\n    this.fourd.call4Dv2('document.reloadDocumentList', request);\n  }\n\n  editPrecedent(request: document.EditPrecedentRequest): void {\n    this.fourd.call4Dv2('document.editPrecedent', request);\n  }\n\n  selectPrecedent(request: document.SelectPrecedentRequest): Promise<document.SelectPrecedentResponse> {\n    return this.fourd.twoWayCall<document.SelectPrecedentRequest, document.SelectPrecedentResponse>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('document.selectPrecedent', request, requestId);\n      },\n      (response) => response\n    );\n  }\n}\n","import { infotrack } from '../../api/infotrack';\nimport { BrowserFourdApi } from '.';\n\nexport class Infotrack implements infotrack.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  orderSearch(request: infotrack.CreateSearchRequest): void {\n    this.fourd.call4Dv2('infotrack.orderSearch', request);\n  }\n}\n","import { lawconnect } from '../../api/lawconnect';\nimport { BrowserFourdApi } from '.';\n\nexport class LawConnect implements lawconnect.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  shareDocuments(request: lawconnect.ShareDocumentsRequest): void {\n    this.fourd.call4Dv2('lawconnect.shareDocuments', request);\n  }\n\n  shareFolder(request: lawconnect.ShareFolderRequest): void {\n    this.fourd.call4Dv2('lawconnect.shareFolder', request);\n  }\n\n  shareOfficeStatement(request: lawconnect.ShareOfficeStatementRequest): void {\n    this.fourd.call4Dv2('lawconnect.shareOfficeStatement', request);\n  }\n\n  shareTrustStatement(request: lawconnect.ShareTrustStatementRequest): void {\n    this.fourd.call4Dv2('lawconnect.shareTrustStatement', request);\n  }\n}\n","import { matter } from '../../api/matter';\nimport { BrowserFourdApi } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Matter implements matter.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  openTable(request: matter.OpenTableRequest): void {\n    if (request == null) {\n      request.order = 1;\n    }\n    this.fourd.call4Dv2('matter.openTable', request);\n  }\n\n  openMatter(request: matter.OpenMatterRequest): void {\n    this.fourd.call4Dv2('matter.openMatter', request);\n  }\n\n  selectMatter(request?: matter.SelectMatterRequest): Promise<matter.Matter[]> {\n    return this.fourd.twoWayCall<matter.SelectMatterRequest, matter.Matter[]>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('matter.selectMatter', request, requestId);\n      },\n      (response) => {\n        if (\n          !this.fourd.leapContext?.hostInfo?.hostVersion ||\n          this.fourd.leapContext.hostInfo.hostVersion < '2.4.280.0'\n        ) {\n          //HSDK-122, fix the incorrect property names, can be removed when minimum version is 2.4\n          return response.map((r) => {\n            const matter = { ...r, deleted: r.delete, matterTypeId: '' };\n            delete matter.delete;\n\n            return matter;\n          });\n        }\n\n        return response;\n      }\n    );\n  }\n\n  // getLists(request: BaseRequest): Promise<matter.MatterResult[]> {\n  //   return this.fourd.twoWayCall<BaseRequest, matter.MatterResult[]>(\n  //     request,\n  //     (requestId, request) => {\n  //       this.fourd.call4Dv2('matter.getLists', request, requestId);\n  //     },\n  //     (response) => {\n  //       let responseData;\n  //       try {\n  //         responseData = JSON.parse(response.body);\n  //       } catch (e) {\n  //         // Unable to parse response => response is not a stringify object\n  //         responseData = response;\n  //       }\n  //       return responseData;\n  //     }\n  //   );\n  // }\n}\n","import { msteams } from '../../api/msteams';\nimport { BrowserFourdApi } from '.';\n\nexport class MsTeams implements msteams.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  shareDocument(request: msteams.ShareDocumentRequest): void {\n    this.fourd.call4Dv2('msteams.shareDocument', request);\n  }\n\n  shareMatter(request: msteams.ShareMatterRequest): void {\n    this.fourd.call4Dv2('msteams.shareMatter', request);\n  }\n\n  requestCallback(request: msteams.RequestCallbackRequest): void {\n    this.fourd.call4Dv2('msteams.requestCallback', request);\n  }\n}\n","import { register } from '../../api/register';\nimport { BrowserFourdApi } from '.';\n\nexport class Register implements register.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  reloadDocumentRegisterList(request: register.ReloadDocumentRegisterListRequest): void {\n    this.fourd.call4Dv2('register.reloadDocumentRegisterList', request);\n  }\n  reloadPowerEstateList(request: register.ReloadPowerEstateListRequest): void {\n    this.fourd.call4Dv2('register.reloadPowerEstateList', request);\n  }\n}\n","import { BrowserFourdApi } from '.';\nimport { schema } from '../../api/schema';\n\nexport class Schema implements schema.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  customiseList(request: schema.CustomiseListRequest): Promise<schema.CustomiseListResponse> {\n    return this.fourd.twoWayCall<schema.CustomiseListRequest, schema.CustomiseListResponse>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('schema.customiseList', request, requestId);\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  getLists(request: schema.GetListsRequest): Promise<schema.SchemaResponse<schema.SchemaList[]>> {\n    return this.fourd.twoWayCall<schema.GetListsRequest, schema.SchemaResponse<schema.SchemaList[]>>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('schema.getLists', request, requestId);\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n}\n","import { system } from '../../api/system';\nimport { BrowserFourdApi } from '.';\nimport { BaseRequest } from '../../api';\n\nexport class System implements system.Api {\n  private _systemInfo: system.SystemInfo;\n\n  constructor(private fourd: BrowserFourdApi) {}\n\n  openTwitter(request: BaseRequest): void {\n    this.fourd.call4Dv2('system.openTwitter', request);\n  }\n\n  close(): void {\n    this.fourd.call4Dv2('system.close');\n  }\n\n  hide(): void {\n    this.fourd.call4Dv2('system.hide');\n  }\n\n  wait(request?: system.MessageRequest): void {\n    this.fourd.call4Dv2('system.wait', request);\n  }\n\n  resume(): void {\n    this.fourd.call4Dv2('system.resume');\n  }\n\n  cancelClose(): void {\n    this.fourd.call4Dv2('system.cancelClose');\n  }\n\n  alert(request: system.MessageRequest): void {\n    if (!this.isString(request.message) || !request.message) {\n      return;\n    }\n    this.fourd.call4Dv2('system.alert', request);\n  }\n\n  error(request: system.MessageRequest): void {\n    if (!this.isString(request.message) || !request.message) {\n      return;\n    }\n    this.fourd.call4Dv2('system.error', request);\n  }\n\n  openDialog(request: system.DialogRequest): Promise<boolean> {\n    if (!this.isString(request.message) || !request.message) {\n      throw new Error('Invalid value in message');\n    } else if (!request.dialogType) {\n      throw new Error('DialogType cannot be null');\n    }\n\n    return this.fourd.twoWayCall<system.DialogRequest, boolean>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('system.openDialog', request, requestId);\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  openUrl(config: system.BrowserConfig): void {\n    config['action'] = 'OpenURL';\n    this.fourd.call4Dv2('system.openUrl', config);\n  }\n\n  getSystemInfo(): Promise<system.SystemInfo> {\n    if (this._systemInfo) {\n      return Promise.resolve(this._systemInfo);\n    }\n    return this.fourd.twoWayCall<system.SystemInfo, system.SystemInfo>(\n      null,\n      (requestId, request) => {\n        this.fourd.call4Dv2('system.getSystemInfo', request, requestId);\n      },\n      (response) => {\n        this._systemInfo = response;\n        return response;\n      }\n    );\n  }\n\n  setWindowTitle(request: system.SetWindowTitleRequest) {\n    this.fourd.call4Dv2('system.setWindowTitle', request);\n  }\n\n  onBeforeClose(handler: () => Promise<boolean>): void {\n    handler().then((shouldCancelClose) => {\n      if (shouldCancelClose) {\n        this.cancelClose();\n      }\n    });\n  }\n\n  async send(request: any, hasResponse: boolean = false): Promise<any> {\n    if (!this.fourd.isTrustedApp) {\n      throw new Error('Permission error');\n    }\n\n    if (request === null || request === undefined) {\n      throw new Error('Bad request');\n    }\n\n    const isObject = typeof request === 'object';\n\n    // Proxy generic command use case\n    if (isObject && request['command']) {\n      if (hasResponse) {\n        return this.fourd.twoWayCall<any, any>(\n          request,\n          (requestId, request) => {\n            this.fourd.call4Dv2(request['command'], request['request'], requestId);\n          },\n          (response) => {\n            return response;\n          }\n        );\n      } else {\n        this.fourd.call4Dv2(request['command'], request['request']);\n        return Promise.resolve();\n      }\n    }\n\n    // For strings and SDK 1.0 commands\n    if (hasResponse) {\n      return this.fourd.twoWayCall<any, any>(\n        request,\n        (requestId, request) => {\n          this.fourd.call4Dv2('system.send', request, requestId);\n        },\n        (response) => {\n          return response;\n        }\n      );\n    } else {\n      this.fourd.call4Dv2('system.send', request);\n      return Promise.resolve();\n    }\n  }\n\n  // Legacy versions - Do not wrap request object in v2 format (LSDK-81)\n  private sendLegacy(request: any): Promise<any> {\n    const isObject = typeof request === 'object';\n    if (!isObject || !request['requestId']) {\n      this.fourd.call4D(this.fourd.to4DJSONString(request));\n      return Promise.resolve();\n    } else {\n      return new Promise<any>((resolve, reject) => {\n        this.fourd.registerHostMessageHandler(request['requestId'], (response) => {\n          this.fourd.deregisterHostMessageHandler(request['requestId']);\n          // Some handlers of 2.1 and 2.2 respond in v2 format\n          if (typeof response === 'object' && !!response) {\n            const hasStatus = response.hasOwnProperty('isSuccess');\n            const hasError = response.hasOwnProperty('error');\n            const hasData = response.hasOwnProperty('data');\n            if (hasStatus && (hasError || hasData)) {\n              if (response['isSuccess']) {\n                resolve(response['data']);\n              } else {\n                reject(new Error(response['error']));\n              }\n            }\n          } else {\n            resolve(response);\n          }\n        });\n        this.fourd.call4D(this.fourd.to4DJSONString(request));\n      });\n    }\n  }\n\n  finishLoading(): void {\n    this.fourd.call4Dv2('system.finishLoading');\n  }\n\n  private isString = (value: any) => {\n    return typeof value === 'string' || value instanceof String;\n  };\n}\n","import { card } from '../../api/card';\nimport { BrowserFourdApi } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Card implements card.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  selectCard(request?: card.SelectCardRequest): Promise<card.Card[]> {\n    return this.fourd.twoWayCall<card.SelectCardRequest, card.Card[]>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('card.selectCard', request, requestId);\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n\n  createCard(): Promise<card.CreatedCard> {\n    return this.fourd.twoWayCall<any, card.CreatedCard>(\n      null,\n      (requestId, request) => {\n        this.fourd.call4Dv2('card.createCard', request, requestId);\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n\n  openCard(request: card.OpenCardRequest): void {\n    this.fourd.call4Dv2('card.openCard', request);\n  }\n\n  //   getLists(request: BaseRequest): Promise<card.Card[]> {\n  //     return this.fourd.twoWayCall<BaseRequest, card.Card[]>(\n  //       request,\n  //       (requestId, request) => {\n  //         this.fourd.call4Dv2('card.getLists', request, requestId);\n  //       },\n  //       (response) => {\n  //         let responseData;\n  //         try {\n  //           responseData = JSON.parse(response);\n  //         } catch (e) {\n  //           // Unable to parse response.body => response.body is not a stringify object\n  //           responseData = response;\n  //         }\n  //         return responseData;\n  //       }\n  //     );\n  //   }\n}\n","import { staff } from '../../api/staff';\nimport { BrowserFourdApi } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Staff implements staff.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  selectStaff(request?: staff.SelectStaffRequest): Promise<staff.Staff[]> {\n    return this.fourd.twoWayCall<staff.SelectStaffRequest, staff.Staff[]>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('staff.selectStaff', request, requestId);\n      },\n      (response) => {\n        if (\n          !this.fourd.leapContext?.hostInfo?.hostVersion ||\n          this.fourd.leapContext.hostInfo.hostVersion < '2.4.280.0'\n        ) {\n          //HSDK-122, fix the incorrect property names, can be removed when minimum version is 2.4\n          return response.map((r) => {\n            const staff = { ...r, staffId: r.staffGUID, userId: r.userGUID, branchId: r.branchGUID };\n            delete staff.staffGUID;\n            delete staff.userGUID;\n            delete staff.branchGUID;\n\n            return staff;\n          });\n        }\n        return response;\n      }\n    );\n  }\n\n  // getLists(request: BaseRequest): Promise<staff.Staff[]> {\n  //   return this.fourd.twoWayCall<BaseRequest, staff.Staff[]>(\n  //     request,\n  //     (requestId, request) => {\n  //       this.fourd.call4Dv2('staff.getLists', request, requestId);\n  //     },\n  //     (response) => {\n  //       let responseData;\n  //       try {\n  //         responseData = JSON.parse(response);\n  //       } catch (e) {\n  //         // Unable to parse response.body => response.body is not a stringify object\n  //         responseData = response;\n  //       }\n  //       return responseData;\n  //     }\n  //   );\n  // }\n}\n","import { person } from '../../api/person';\nimport { BrowserFourdApi } from '.';\n\nexport class Person implements person.Api {\n  constructor(private fourd: BrowserFourdApi) {}\n\n  selectPerson(request?: person.SelectPersonRequest): Promise<person.Person[]> {\n    return this.fourd.twoWayCall<person.SelectPersonRequest, person.Person[]>(\n      request,\n      (requestId, request) => {\n        this.fourd.call4Dv2('person.selectPerson', request, requestId);\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          // Unable to parse response.body => response.body is not a stringify object\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n\n  openPerson(request: person.OpenPersonRequest): void {\n    this.fourd.call4Dv2('person.openPerson', request);\n  }\n\n  //   getLists(request: BaseRequest): Promise<person.Person[]> {\n  //     return this.fourd.twoWayCall<BaseRequest, person.Person[]>(\n  //       request,\n  //       (requestId, request) => {\n  //         this.fourd.call4Dv2('person.getLists', request, requestId);\n  //       },\n  //       (response) => {\n  //         let responseData;\n  //         try {\n  //           responseData = JSON.parse(response);\n  //         } catch (e) {\n  //           // Unable to parse response.body => response.body is not a stringify object\n  //           responseData = response;\n  //         }\n  //         return responseData;\n  //       }\n  //     );\n  //   }\n}\n","import { BaseApi } from '../base-impl';\nimport { RequestContext } from '../../api';\nimport { app } from '../../api/app';\nimport { calc } from '../../api/calc';\nimport { communication } from '../../api/communication';\nimport { document } from '../../api/document';\nimport { infotrack } from '../../api/infotrack';\nimport { lawconnect } from '../../api/lawconnect';\nimport { matter } from '../../api/matter';\nimport { msteams } from '../../api/msteams';\nimport { register } from '../../api/register';\nimport { system } from '../../api/system';\nimport { accounting } from '../../api/accounting';\nimport { schema } from '../../api/schema';\nimport { card } from '../../api/card';\nimport { staff } from '../../api/staff';\nimport { person } from '../../api/person';\n\nimport { Accounting } from './accounting';\nimport { App } from './app';\nimport { Calc } from './calc';\nimport { Communication } from './communication';\nimport { Document } from './document';\nimport { Infotrack } from './infotrack';\nimport { LawConnect } from './lawconnect';\nimport { Matter } from './matter';\nimport { MsTeams } from './msteams';\nimport { Register } from './register';\nimport { Schema } from './schema';\nimport { System } from './system';\nimport { Card } from './card';\nimport { Staff } from './staff';\nimport { Person } from './person';\n\nimport { Base64 } from 'js-base64';\n\nexport class BrowserFourdApi extends BaseApi {\n  private _accounting: accounting.Api;\n  private _app: app.Api;\n  private _calc: calc.Api;\n  private _communication: communication.Api;\n  private _document: document.Api;\n  private _infotrack: infotrack.Api;\n  private _lawconnect: lawconnect.Api;\n  private _person: person.Api;\n  private _matter: matter.Api;\n  private _msteams: msteams.Api;\n  private _register: register.Api;\n  private _schema: schema.Api;\n  private _system: system.Api;\n  private _card: card.Api;\n  private _staff: staff.Api;\n\n  get accounting(): accounting.Api {\n    return this._accounting;\n  }\n  get app(): app.Api {\n    return this._app;\n  }\n  get calc(): calc.Api {\n    return this._calc;\n  }\n  get card(): card.Api {\n    return this._card;\n  }\n  get communication(): communication.Api {\n    return this._communication;\n  }\n  get document(): document.Api {\n    return this._document;\n  }\n  get infotrack(): infotrack.Api {\n    return this._infotrack;\n  }\n  get lawconnect(): lawconnect.Api {\n    return this._lawconnect;\n  }\n  get matter(): matter.Api {\n    return this._matter;\n  }\n  get msteams(): msteams.Api {\n    return this._msteams;\n  }\n  get person(): person.Api {\n    return this._person;\n  }\n  get register(): register.Api {\n    return this._register;\n  }\n  get schema(): schema.Api {\n    return this._schema;\n  }\n  get system(): system.Api {\n    return this._system;\n  }\n  get staff(): staff.Api {\n    return this._staff;\n  }\n  readonly protocol: string = 'Fourd://';\n\n  constructor(requestContext: RequestContext = undefined) {\n    super(requestContext);\n\n    this._accounting = new Accounting(this);\n    this._app = new App(this);\n    this._calc = new Calc(this);\n    this._communication = new Communication(this);\n    this._document = new Document(this);\n    this._infotrack = new Infotrack(this);\n    this._lawconnect = new LawConnect(this);\n    this._person = new Person(this);\n    this._matter = new Matter(this);\n    this._msteams = new MsTeams(this);\n    this._register = new Register(this);\n    this._schema = new Schema(this);\n    this._system = new System(this);\n    this._card = new Card(this);\n    this._staff = new Staff(this);\n\n    this.setupHostMessageEventHandler();\n  }\n\n  protected retrieveContext(): void {\n    this.call4Dv2('RetrieveLeapAppContext', {}, this.leapContext.hostInfo.appSessionId);\n  }\n\n  to4DJSONString(value: any, encode?: boolean): string {\n    if (encode === undefined) {\n      return 'json=' + Base64.encode(JSON.stringify(value));\n    } else {\n      return JSON.stringify(value);\n    }\n  }\n\n  call4D(request: string): void {\n    if (!window['$4d']) {\n      //this object is lost when the permission acceptance page pops up\n      //so we need to handle it in the old way\n      request = this.protocol + request;\n      window.location.assign(request);\n    } else {\n      request = this.protocol + request;\n      window['$4d'].WebArea_RequestHandler(request);\n    }\n  }\n\n  call4Dv2(command: string, request?: any, requestId?: string): void {\n    if (request === undefined || typeof request === 'object') {\n      // Always append appSessionId to the request sent to Host for validation\n      request = {\n        ...(request || {}),\n        appSessionId: this.leapContext.hostInfo.appSessionId,\n      };\n      if (requestId) {\n        request = { ...request, requestId };\n      }\n    }\n\n    const obj = {\n      command,\n      request,\n      sdkVersion: 2,\n    };\n    this.call4D(this.to4DJSONString(obj));\n  }\n\n  protected hostRelatedSetup(): void {}\n\n  private setupHostMessageEventHandler() {\n    const global = window as any;\n    global.handleHostMessage = (command: string, payload?: string) => super.handleCommand(command, payload);\n  }\n}\n","const whitelistDomains = {\n  dev_au: ['https://dev.leap365.com.au', 'https://dev.leapjd.com.au/'],\n  test_au: [\n    'https://test.leap365.com.au',\n    'https://test-epic1.leap365.com.au',\n    'https://reporting-test.leapaws.com.au',\n    'https://reporting-dev.leapaws.com.au',\n    'https://leapcalc-renderer-au-test.leap.services',\n    'https://test.leapjd.com.au',\n    'https://test.leapjd.co.nz',\n  ],\n\n  live_au: [\n    'https://staging.leap365.com.au',\n    'https://sandbox.leap365.com.au',\n    'https://app.leap365.com.au',\n    'https://reporting.leapaws.com.au',\n    'https://leapcalc-renderer-au-live.leap.services',\n  ],\n\n  liveb_au: ['https://staging.liveb.leap365.com.au', 'https://liveb.leap365.com.au'],\n\n  test_uk: [\n    'https://test.leap365.co.uk',\n    'https://reporting-test.leapaws.co.uk',\n    'https://leapcalc-renderer-uk-test.leap.services',\n    'https://test.leapjd.co.uk',\n  ],\n\n  live_uk: [\n    'https://app.leap365.co.uk',\n    'https://staging.leap365.co.uk',\n    'https://sandbox.leap365.co.uk',\n    'https://reporting.leapaws.co.uk',\n    'https://leapcalc-renderer-uk-live.leap.services',\n  ],\n\n  test_us: [\n    'https://test.leap365.com',\n    'https://reporting-test.leapaws.com',\n    'https://leapcalc-renderer-us-test.leap.services',\n    'https://test.leapjd.com',\n  ],\n\n  live_us: [\n    'https://app.leap365.com',\n    'https://staging.leap365.com',\n    'https://sandbox.leap365.com',\n    'https://reporting.leapaws.com',\n    'https://leapcalc-renderer-us-live.leap.services',\n  ],\n\n  test_ca: [\n    'https://test.leap365.ca',\n    'https://reporting.test.leapaws.ca',\n    'https://renderer.test.ca.leap.services',\n    'https://test.leapjd.ca',\n  ],\n\n  live_ca: [\n    'https://app.leap365.ca',\n    'https://staging.leap365.ca',\n    'https://sandbox.leap365.ca',\n    'https://reporting.leapaws.ca',\n    'https://renderer.ca.leap.services',\n  ],\n};\n\nconst devDomains = [\n  'http://localhost:53504', // local url for reporting\n  'http://localhost:8080', // local url for leap web\n  'http://localhost:9005', // local url for tester app\n];\n\nconst leapHostTestAppDomain = 'https://leaphost.test.leap365.com.au';\n\nconst jd = 'http://my.leapjd';\n\nexport { whitelistDomains, devDomains, leapHostTestAppDomain, jd };\n","import { accounting } from '../../api/accounting';\nimport { IframeWindow } from '.';\n\nexport class Accounting implements accounting.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  createTimeEntry(request: accounting.CreateTimeEntryRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createTimeEntry',\n      args: request,\n    });\n  }\n\n  createFeeEntry(request: accounting.CreateFeeEntryRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createFeeEntry',\n      args: request,\n    });\n  }\n\n  createCostRecovery(request: accounting.CreateCostRecoveryEntryRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createCostRecovery',\n      args: request,\n    });\n  }\n\n  createInvoice(request: accounting.CreateInvoiceRequest): Promise<boolean> {\n    return this.iframe.twoWayCall<accounting.CreateInvoiceRequest, boolean>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'accounting.createInvoice',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  createOfficeReceipt(request: accounting.CreateOfficeReceiptRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createOfficeReceipt',\n      args: request,\n    });\n  }\n\n  createOfficePayment(request: accounting.CreateOfficePaymentRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createOfficePayment',\n      args: request,\n    });\n  }\n\n  createOfficeJournal(request: accounting.CreateOfficeJournalRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createOfficeJournal',\n      args: request,\n    });\n  }\n\n  createTrustReceipt(request: accounting.CreateTrustReceiptRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createTrustReceipt',\n      args: request,\n    });\n  }\n\n  createTrustPayment(request: accounting.CreateTrustPaymentRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createTrustPayment',\n      args: request,\n    });\n  }\n\n  createTrustJournal(request: accounting.CreateTrustJournalRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createTrustJournal',\n      args: request,\n    });\n  }\n\n  createTrustToOffice(request: accounting.CreateTrustToOfficeRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createTrustToOffice',\n      args: request,\n    });\n  }\n  createOfficePaymentRequest(request: accounting.CreateNewOfficePaymentRequestRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createOfficePaymentRequest',\n      args: request,\n    });\n  }\n  createTrustPaymentRequest(request: accounting.CreateNewTrustPaymentRequestRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.createTrustPaymentRequest',\n      args: request,\n    });\n  }\n\n  reloadFinancialSummary(request: accounting.ReloadFinancialSummaryRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadFinancialSummary',\n      args: request,\n    });\n  }\n\n  reloadTimeFeeList(request: accounting.ReloadTimeFeeListRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadTimeFeeList',\n      args: request,\n    });\n  }\n\n  reloadOfficeLedger(request: accounting.ReloadOfficeLedgerRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadOfficeLedger',\n      args: request,\n    });\n  }\n\n  reloadAnticipatedPaymentList(request: accounting.ReloadAnticipatedPaymentListRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadAnticipatedPaymentList',\n      args: request,\n    });\n  }\n\n  reloadCostRecoveryList(request: accounting.ReloadCostRecoveryListRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadCostRecoveryList',\n      args: request,\n    });\n  }\n\n  reloadTrustLedger(request: accounting.ReloadTrustLedgerRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadTrustLedger',\n      args: request,\n    });\n  }\n\n  reloadControlledMoneyList(request: accounting.ReloadControlledMoneyListRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadControlledMoneyList',\n      args: request,\n    });\n  }\n\n  reloadPowerMoneyList(request: accounting.ReloadPowerMoneyListRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadPowerMoneyList',\n      args: request,\n    });\n  }\n\n  reloadTransitMoneyList(request: accounting.ReloadTransitMoneyListRequest): void {\n    this.iframe.postMessage({\n      command: 'accounting.reloadTransitMoneyList',\n      args: request,\n    });\n  }\n\n  openFee(request: accounting.OpenFeeRequest): void {\n    if (request.isAutoTime) request.timed = true;\n\n    this.iframe.postMessage({\n      command: 'accounting.openFee',\n      args: request,\n    });\n  }\n}\n","import { app } from '../../api/app';\nimport { IframeWindow } from '.';\n\nexport class App implements app.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  openApp(request: app.OpenAppRequest): void {\n    this.iframe.postMessage({\n      command: 'app.openApp',\n      args: request,\n    });\n  }\n}\n","import { calc } from '../../api/calc';\nimport { IframeWindow } from './index';\n\nexport class Calc implements calc.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  evaluatePaths(request: calc.EvaluatePathsRequest): Promise<calc.PathResult[]> {\n    return this.iframe.twoWayCall<calc.EvaluatePathsRequest, calc.PathResult[]>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'calc.evaluatePaths',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          // Unable to parse response => response is not a stringify object\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n}\n","import { communication } from '../../api/communication';\nimport { IframeWindow } from '.';\n\nexport class Communication implements communication.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  composeEmail(request: communication.CreateEmailRequest): void {\n    this.iframe.postMessage({\n      command: 'communication.composeEmail',\n      args: request,\n    });\n  }\n\n  createAppointment(request: communication.CreateAppointmentRequest): void {\n    this.iframe.postMessage({\n      command: 'communication.createAppointment',\n      args: request,\n    });\n  }\n\n  createTask(request: communication.CreateTaskRequest): void {\n    this.iframe.postMessage({\n      command: 'communication.createTask',\n      args: request,\n    });\n  }\n}\n","import { document } from '../../api/document';\nimport { IframeWindow } from '.';\n\nexport class Document implements document.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  previewDocument(request: document.PreviewDocumentRequest): void {\n    this.iframe.postMessage({\n      command: 'document.previewDocument',\n      args: request,\n    });\n  }\n\n  previewPrecedent(request: document.PreviewPrecedentRequest): void {\n    this.iframe.postMessage({\n      command: 'document.previewPrecedent',\n      args: request,\n    });\n  }\n\n  createDocumentFromContainer(request: document.CreateDocumentFromContainerRequest): void {\n    this.iframe.postMessage({\n      command: 'document.createDocumentFromContainer',\n      args: request,\n    });\n  }\n\n  createDocumentFromPrecedent(request: document.CreateDocumentFromPrecedentRequest): void {\n    this.iframe.postMessage({\n      command: 'document.createDocumentFromPrecedent',\n      args: request,\n    });\n  }\n\n  openDocument(request: document.OpenDocumentRequest): void {\n    this.iframe.postMessage({\n      command: 'document.openDocument',\n      args: request,\n    });\n  }\n\n  reloadDocumentList(request: document.ReloadDocumentListRequest): void {\n    this.iframe.postMessage({\n      command: 'document.reloadDocumentList',\n      args: request,\n    });\n  }\n\n  editPrecedent(request: document.EditPrecedentRequest): void {\n    this.iframe.postMessage({\n      command: 'document.editPrecedent',\n      args: request,\n    });\n  }\n\n  selectPrecedent(request: document.SelectPrecedentRequest): Promise<document.SelectPrecedentResponse> {\n    return this.iframe.twoWayCall<document.SelectPrecedentRequest, document.SelectPrecedentResponse>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'document.selectPrecedent',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => response\n    );\n  }\n}\n","import { infotrack } from '../../api/infotrack';\nimport { IframeWindow } from '.';\n\nexport class Infotrack implements infotrack.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  orderSearch(request: infotrack.CreateSearchRequest): void {\n    this.iframe.postMessage({\n      command: 'infotrack.orderSearch',\n      args: request,\n    });\n  }\n}\n","import { lawconnect } from '../../api/lawconnect';\nimport { IframeWindow } from '.';\n\nexport class LawConnect implements lawconnect.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  shareDocuments(request: lawconnect.ShareDocumentsRequest): void {\n    this.iframe.postMessage({\n      command: 'lawconnect.shareDocuments',\n      args: request,\n    });\n  }\n\n  shareFolder(request: lawconnect.ShareFolderRequest): void {\n    this.iframe.postMessage({\n      command: 'lawconnect.shareFolder',\n      args: request,\n    });\n  }\n\n  shareOfficeStatement(request: lawconnect.ShareOfficeStatementRequest): void {\n    this.iframe.postMessage({\n      command: 'lawconnect.shareOfficeStatement',\n      args: request,\n    });\n  }\n\n  shareTrustStatement(request: lawconnect.ShareTrustStatementRequest): void {\n    this.iframe.postMessage({\n      command: 'lawconnect.shareTrustStatement',\n      args: request,\n    });\n  }\n}\n","import { matter } from '../../api/matter';\nimport { IframeWindow } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Matter implements matter.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  openTable(request: matter.OpenTableRequest): void {\n    this.iframe.postMessage({\n      command: 'matter.openTable',\n      args: request,\n    });\n  }\n\n  openMatter(request: matter.OpenMatterRequest): void {\n    this.iframe.postMessage({\n      command: 'matter.openMatter',\n      args: request,\n    });\n  }\n\n  selectMatter(request?: matter.SelectMatterRequest): Promise<matter.Matter[]> {\n    return this.iframe.twoWayCall<BaseRequest, matter.Matter[]>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'matter.selectMatter',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  // getLists(request: BaseRequest): Promise<matter.MatterResult[]> {\n  //   return this.iframe.twoWayCall<BaseRequest, matter.MatterResult[]>(\n  //     request,\n  //     (requestId, request) => {\n  //       this.iframe.postMessage({\n  //         command: 'matter.getLists',\n  //         args: {\n  //           ...request,\n  //           requestId,\n  //         },\n  //       });\n  //     },\n  //     (response) => {\n  //       let responseData;\n  //       try {\n  //         responseData = JSON.parse(response);\n  //       } catch (e) {\n  //         // Unable to parse response => response is not a stringify object\n  //         responseData = response;\n  //       }\n  //       return responseData;\n  //     }\n  //   );\n  // }\n}\n","import { msteams } from '../../api/msteams';\nimport { IframeWindow } from '.';\n\nexport class MsTeams implements msteams.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  shareDocument(request: msteams.ShareDocumentRequest): void {\n    this.iframe.postMessage({\n      command: 'msteams.shareDocument',\n      args: request,\n    });\n  }\n\n  shareMatter(request: msteams.ShareMatterRequest): void {\n    this.iframe.postMessage({\n      command: 'msteams.shareMatter',\n      args: request,\n    });\n  }\n\n  requestCallback(request: msteams.RequestCallbackRequest): void {\n    this.iframe.postMessage({\n      command: 'msteams.requestCallback',\n      args: request,\n    });\n  }\n}\n","import { card } from '../../api/card';\nimport { IframeWindow } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Card implements card.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  selectCard(request?: card.SelectCardRequest): Promise<card.Card[]> {\n    return this.iframe.twoWayCall<card.SelectCardRequest, card.Card[]>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'card.selectCard',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          // Unable to parse response => response is not a stringify object\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n\n  createCard(): Promise<card.CreatedCard> {\n    return this.iframe.twoWayCall<any, card.CreatedCard>(\n      null,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'card.createCard',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          // Unable to parse response => response is not a stringify object\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n\n  openCard(request: card.OpenCardRequest): void {\n    this.iframe.postMessage({\n      command: 'card.openCard',\n      args: request,\n    });\n  }\n\n  //   getLists(request: BaseRequest): Promise<card.Card[]> {\n  //     return this.iframe.twoWayCall<BaseRequest, card.Card[]>(\n  //       request,\n  //       (requestId, request) => {\n  //         this.iframe.postMessage({\n  //           command: 'card.getLists',\n  //           args: {\n  //             ...request,\n  //             requestId,\n  //           },\n  //         });\n  //       },\n  //       (response) => {\n  //         let responseData;\n  //         try {\n  //           responseData = JSON.parse(response);\n  //         } catch (e) {\n  //           // Unable to parse response => response is not a stringify object\n  //           responseData = response;\n  //         }\n  //         return responseData;\n  //       }\n  //     );\n  //   }\n}\n","import { staff } from '../../api/staff';\nimport { IframeWindow } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Staff implements staff.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  selectStaff(request?: staff.SelectStaffRequest): Promise<staff.Staff[]> {\n    return this.iframe.twoWayCall<BaseRequest, staff.Staff[]>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'staff.selectStaff',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  //   getLists(request: BaseRequest): Promise<staff.Staff[]> {\n  //     return this.iframe.twoWayCall<BaseRequest, staff.Staff[]>(\n  //       request,\n  //       (requestId, request) => {\n  //         this.iframe.postMessage({\n  //           command: 'staff.getLists',\n  //           args: {\n  //             ...request,\n  //             requestId,\n  //           },\n  //         });\n  //       },\n  //       (response) => {\n  //         let responseData;\n  //         try {\n  //           responseData = JSON.parse(response);\n  //         } catch (e) {\n  //           // Unable to parse response => response is not a stringify object\n  //           responseData = response;\n  //         }\n  //         return responseData;\n  //       }\n  //     );\n  //   }\n}\n","import { register } from '../../api/register';\nimport { IframeWindow } from '.';\n\nexport class Register implements register.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  reloadDocumentRegisterList(request: register.ReloadDocumentRegisterListRequest): void {\n    this.iframe.postMessage({\n      command: 'register.reloadDocumentRegisterList',\n      args: request,\n    });\n  }\n  reloadPowerEstateList(request: register.ReloadPowerEstateListRequest): void {\n    this.iframe.postMessage({\n      command: 'register.reloadPowerEstateList',\n      args: request,\n    });\n  }\n}\n","import { IframeWindow } from '.';\nimport { schema } from '../../api/schema';\n\nexport class Schema implements schema.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  customiseList(request: schema.CustomiseListRequest): Promise<schema.CustomiseListResponse> {\n    return this.iframe.twoWayCall<schema.CustomiseListRequest, schema.CustomiseListResponse>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'schema.customiseList',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  getLists(request: schema.GetListsRequest): Promise<schema.SchemaResponse<schema.SchemaList[]>> {\n    return this.iframe.twoWayCall<schema.GetListsRequest, schema.SchemaResponse<schema.SchemaList[]>>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'schema.getLists',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n}\n","import { system } from '../../api/system';\nimport { BaseRequest } from '../../api';\nimport { IframeWindow } from '.';\n\nexport class System implements system.Api {\n  private _systemInfo: system.SystemInfo;\n\n  constructor(private iframe: IframeWindow) {}\n\n  openTwitter(request: BaseRequest): void {\n    throw new Error('Not supported');\n  }\n\n  close(): void {\n    this.iframe.postMessage({ command: 'system.close' });\n  }\n\n  hide(): void {\n    this.iframe.postMessage({ command: 'system.hide' });\n  }\n\n  wait(request?: system.MessageRequest): void {\n    this.iframe.postMessage({ command: 'system.wait', args: request });\n  }\n\n  resume(): void {\n    this.iframe.postMessage({ command: 'system.resume' });\n  }\n\n  cancelClose(): void {\n    this.iframe.postMessage({ command: 'system.cancelClose' });\n  }\n\n  alert(request: system.MessageRequest): void {\n    this.iframe.postMessage({ command: 'system.alert', args: request });\n  }\n\n  error(request: system.MessageRequest): void {\n    this.iframe.postMessage({ command: 'system.error', args: request });\n  }\n\n  openDialog(request: system.DialogRequest): Promise<boolean> {\n    return this.iframe.twoWayCall<system.DialogRequest, boolean>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'system.openDialog',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        return response;\n      }\n    );\n  }\n\n  openUrl(config: system.BrowserConfig): void {\n    this.iframe.postMessage({ command: 'system.openUrl', args: config });\n  }\n\n  getSystemInfo(): Promise<system.SystemInfo> {\n    if (this._systemInfo) {\n      return Promise.resolve(this._systemInfo);\n    }\n    return this.iframe.twoWayCall<system.SystemInfo, system.SystemInfo>(\n      null,\n      (requestId) => {\n        this.iframe.postMessage({\n          command: 'system.getSystemInfo',\n          args: { requestId },\n        });\n      },\n      (response) => {\n        this._systemInfo = response;\n        return response;\n      }\n    );\n  }\n\n  setWindowTitle(request: system.SetWindowTitleRequest): void {\n    this.iframe.postMessage({ command: 'system.setWindowTitle', args: request });\n  }\n\n  onBeforeClose(handler: () => Promise<boolean>): void {\n    handler().then((shouldCancelClose) => {\n      if (shouldCancelClose) {\n        this.cancelClose();\n      }\n    });\n  }\n\n  send(request: any, hasResponse: boolean = false): Promise<any> {\n    if (!this.iframe.isTrustedApp) {\n      throw new Error('Permission error');\n    }\n\n    if (request === null || request === undefined) {\n      throw new Error('Bad request');\n    }\n\n    const isObject = typeof request === 'object';\n\n    if (isObject && hasResponse) {\n      return this.iframe.twoWayCall<any, any>(\n        request,\n        (requestId, request) => {\n          this.iframe.postMessage({\n            command: 'system.send',\n            args: { ...request, requestId },\n          });\n        },\n        (response) => {\n          return response;\n        }\n      );\n    } else {\n      this.iframe.postMessage({ command: 'system.send', args: request });\n      return Promise.resolve();\n    }\n  }\n\n  finishLoading(): void {\n    this.iframe.postMessage({ command: 'system.finishLoading' });\n  }\n}\n","import { person } from '../../api/person';\nimport { IframeWindow } from '.';\nimport { BaseRequest } from 'api';\n\nexport class Person implements person.Api {\n  constructor(private iframe: IframeWindow) {}\n\n  selectPerson(request?: person.SelectPersonRequest): Promise<person.Person[]> {\n    return this.iframe.twoWayCall<person.SelectPersonRequest, person.Person[]>(\n      request,\n      (requestId, request) => {\n        this.iframe.postMessage({\n          command: 'person.selectPerson',\n          args: {\n            ...request,\n            requestId,\n          },\n        });\n      },\n      (response) => {\n        let responseData;\n        try {\n          responseData = JSON.parse(response);\n        } catch (e) {\n          // Unable to parse response => response is not a stringify object\n          responseData = response;\n        }\n        return responseData;\n      }\n    );\n  }\n\n  openPerson(request: person.OpenPersonRequest): void {\n    this.iframe.postMessage({\n      command: 'person.openPerson',\n      args: request,\n    });\n  }\n\n  //   getLists(request: BaseRequest): Promise<person.Person[]> {\n  //     return this.iframe.twoWayCall<BaseRequest, person.Person[]>(\n  //       request,\n  //       (requestId, request) => {\n  //         this.iframe.postMessage({\n  //           command: 'person.getLists',\n  //           args: {\n  //             ...request,\n  //             requestId,\n  //           },\n  //         });\n  //       },\n  //       (response) => {\n  //         let responseData;\n  //         try {\n  //           responseData = JSON.parse(response);\n  //         } catch (e) {\n  //           // Unable to parse response => response is not a stringify object\n  //           responseData = response;\n  //         }\n  //         return responseData;\n  //       }\n  //     );\n  //   }\n}\n","import { whitelistDomains, devDomains, leapHostTestAppDomain, jd } from './config/whitelistdomain';\nimport { BaseApi } from '../base-impl';\nimport { RequestContext } from '../../api';\nimport { accounting } from '../../api/accounting';\nimport { app } from '../../api/app';\nimport { calc } from '../../api/calc';\nimport { communication } from '../../api/communication';\nimport { document } from '../../api/document';\nimport { infotrack } from '../../api/infotrack';\nimport { lawconnect } from '../../api/lawconnect';\nimport { matter } from '../../api/matter';\nimport { msteams } from '../../api/msteams';\nimport { staff } from '../../api/staff';\nimport { card } from '../../api/card';\nimport { register } from '../../api/register';\nimport { schema } from '../../api/schema';\nimport { system } from '../../api/system';\nimport { person } from '../../api/person';\n\nimport { Accounting } from './accounting';\nimport { App } from './app';\nimport { Calc } from './calc';\nimport { Communication } from './communication';\nimport { Document } from './document';\nimport { Infotrack } from './infotrack';\nimport { LawConnect } from './lawconnect';\nimport { Matter } from './matter';\nimport { MsTeams } from './msteams';\nimport { Card } from './card';\nimport { Staff } from './staff';\nimport { Register } from './register';\nimport { Schema } from './schema';\nimport { System } from './system';\nimport { Person } from './person';\n\nexport class IframeWindow extends BaseApi {\n  private _whiteListedHostDomains: string[];\n\n  private _accounting: accounting.Api;\n  private _app: app.Api;\n  private _calc: calc.Api;\n  private _communication: communication.Api;\n  private _document: document.Api;\n  private _infotrack: infotrack.Api;\n  private _lawconnect: lawconnect.Api;\n  private _matter: matter.Api;\n  private _msteams: msteams.Api;\n  private _card: card.Api;\n  private _staff: staff.Api;\n  private _register: register.Api;\n  private _person: person.Api;\n  private _schema: schema.Api;\n  private _system: system.Api;\n\n  get accounting(): accounting.Api {\n    return this._accounting;\n  }\n  get app(): app.Api {\n    return this._app;\n  }\n  get calc(): calc.Api {\n    return this._calc;\n  }\n  get card(): card.Api {\n    return this._card;\n  }\n  get communication(): communication.Api {\n    return this._communication;\n  }\n  get document(): document.Api {\n    return this._document;\n  }\n  get infotrack(): infotrack.Api {\n    return this._infotrack;\n  }\n  get lawconnect(): lawconnect.Api {\n    return this._lawconnect;\n  }\n  get matter(): matter.Api {\n    return this._matter;\n  }\n  get msteams(): msteams.Api {\n    return this._msteams;\n  }\n  get staff(): staff.Api {\n    return this._staff;\n  }\n  get person(): person.Api {\n    return this._person;\n  }\n  get register(): register.Api {\n    return this._register;\n  }\n  get schema(): schema.Api {\n    return this._schema;\n  }\n  get system(): system.Api {\n    return this._system;\n  }\n\n  private parentWindow: Window;\n\n  constructor(requestContext: RequestContext, newTab: boolean = false) {\n    super(requestContext);\n\n    this._accounting = new Accounting(this);\n    this._app = new App(this);\n    this._calc = new Calc(this);\n    this._card = new Card(this);\n    this._communication = new Communication(this);\n    this._document = new Document(this);\n    this._infotrack = new Infotrack(this);\n    this._lawconnect = new LawConnect(this);\n    this._matter = new Matter(this);\n    this._msteams = new MsTeams(this);\n    this._person = new Person(this);\n    this._register = new Register(this);\n    this._schema = new Schema(this);\n    this._staff = new Staff(this);\n    this._system = new System(this);\n\n    this.parentWindow = newTab ? window.opener : window.parent;\n    this.registerMessageEventListener();\n  }\n\n  protected retrieveContext(): void {\n    this.postMessage({\n      command: 'RetrieveLeapAppContext',\n      args: {\n        requestId: this.leapContext.hostInfo.appSessionId,\n      },\n    });\n  }\n\n  protected hostRelatedSetup(): void {\n    if (this.leapContext.hostInfo.hostType === 'web') {\n      this._whiteListedHostDomains = [\n        ...(whitelistDomains[`${this.leapContext.hostInfo.env}_${this.leapContext.hostInfo.region}`] || []),\n        ...devDomains,\n        leapHostTestAppDomain,\n        jd,\n      ];\n    }\n  }\n\n  postMessage(message: { command: string; args?: any; sdkVersion?: number }): void {\n    // Always append appSessionId to the message args sent to Host for validation\n    message.args = {\n      ...(message.args || {}),\n    };\n\n    if (this.leapContext?.hostInfo?.appSessionId) message.args.appSessionId = this.leapContext.hostInfo?.appSessionId;\n\n    message.sdkVersion = message.sdkVersion ?? 2;\n    this.parentWindow.postMessage(message, '*');\n  }\n\n  private registerMessageEventListener() {\n    window.addEventListener('message', this.receiveMessage.bind(this), false);\n  }\n\n  private receiveMessage(event) {\n    // Origin is not white-listed, ignore message\n    // mobile doesn't have host\n    if (this._whiteListedHostDomains?.length > 0 && !this._whiteListedHostDomains.includes(event.origin)) {\n      return;\n    }\n\n    if (!!event.data.command) {\n      const command: string = event.data.command;\n      if (!!event.data.payload) {\n        super.handleCommand(command, event.data.payload);\n      } else {\n        super.handleCommand(command);\n      }\n    }\n  }\n}\n","import { Api, RequestContext } from '../api';\nimport { BrowserFourdApi } from './desktop';\nimport { IframeWindow } from './web';\nimport { getQueryStringValue } from './util';\n\nexport class LeapHostSdkFactory {\n  static getInstance(): Api {\n    //we only support desktop and IFrame at the moment\n    const requestContext = this.getRequestContext();\n    if (!requestContext) return null;\n    const newTab: boolean = (getQueryStringValue('newTab') || '').toLowerCase() === 'true';\n\n    if (!!window['$4d'] || requestContext.host === 'desktop') return new BrowserFourdApi(requestContext);\n    else return new IframeWindow(requestContext, newTab);\n  }\n\n  private static getRequestContext() {\n    const appSessionId: string = getQueryStringValue('appSessionId');\n    if (!appSessionId) return null;\n\n    const host: string = getQueryStringValue('host') ?? 'desktop';\n    let env: string = getQueryStringValue('env');\n    const region: string = getQueryStringValue('region');\n    const trustedApp: boolean = (getQueryStringValue('trustedApp') || '').toLowerCase() === 'true';\n\n    //backward compatiable with v1 messageBus like \"autest\"\n    if (!!env) {\n      if (env.includes('liveb')) env = 'liveb';\n      else if (env.includes('live')) env = 'live';\n      else if (env.includes('test')) env = 'test';\n      else if (env.includes('dev')) env = 'dev';\n    }\n\n    const requestContext: RequestContext = {\n      appSessionId,\n      host,\n      env,\n      region,\n      trustedApp,\n    };\n\n    return requestContext;\n  }\n}\n\nexport { RequestContext, MatterBasedRequest, LeapContext, HostResponse, BaseRequest, Api } from '../api';\n"],"names":["LeapContext","context","hostInfo","HostInfo","appSessionId","hostType","hostVersion","env","region","config","auth","host","dev","au","test","uk","us","ca","live","getQueryStringValue","key","searchInHash","result","undefined","locationSection","window","location","hash","search","length","keyValues","substring","split","i","decodeToken","token","payload","JSON","parse","atob","e","BaseApi","requestContext","registeredCommands","_leapContext","_isTrustedApp","trustedApp","init","leapAuthClientId","errMsg","system","close","Promise","resolve","reject","registerHostMessageHandler","leapContext","data","deregisterHostMessageHandler","leapContextObj","Object","keys","matterContext","clientId","isTrustedApp","hostRelatedSetup","_userToken","authtoken","authEnv","includes","authHost","AuthAgent","autoLogin","autoLogout","uniqueSession","scopes","autoRefreshToken","then","accessToken","retrieveContext","getRefreshedAccessToken","send","command","getDecodedRefreshedAccessToken","getUserInfo","userInfo","callback","alreadyRegistered","Error","twoWayCall","request","requestFn","responseFn","requestId","uuidv4","hostResponse","isSuccess","error","handleCommand","registeredCommand","params","Accounting","fourd","createTimeEntry","call4Dv2","createFeeEntry","createCostRecovery","createInvoice","response","createOfficeReceipt","createOfficePayment","createOfficeJournal","createTrustReceipt","createTrustPayment","createTrustJournal","createTrustToOffice","createOfficePaymentRequest","createTrustPaymentRequest","reloadFinancialSummary","reloadTimeFeeList","reloadOfficeLedger","reloadAnticipatedPaymentList","reloadCostRecoveryList","reloadTrustLedger","reloadControlledMoneyList","reloadPowerMoneyList","reloadTransitMoneyList","openFee","isAutoTime","timed","App","openApp","Calc","evaluatePaths","calcRequest","method","url","body","status","message","responseData","Communication","composeEmail","createAppointment","createTask","Document","previewDocument","previewPrecedent","createDocumentFromContainer","createDocumentFromPrecedent","openDocument","reloadDocumentList","editPrecedent","selectPrecedent","Infotrack","orderSearch","LawConnect","shareDocuments","shareFolder","shareOfficeStatement","shareTrustStatement","Matter","openTable","order","openMatter","selectMatter","map","r","matter","deleted","matterTypeId","MsTeams","shareDocument","shareMatter","requestCallback","Register","reloadDocumentRegisterList","reloadPowerEstateList","Schema","customiseList","getLists","System","value","String","openTwitter","hide","wait","resume","cancelClose","alert","isString","openDialog","dialogType","openUrl","getSystemInfo","_systemInfo","setWindowTitle","onBeforeClose","handler","shouldCancelClose","hasResponse","isObject","sendLegacy","call4D","to4DJSONString","hasStatus","hasOwnProperty","hasError","hasData","finishLoading","Card","selectCard","createCard","openCard","Staff","selectStaff","staff","staffId","staffGUID","userId","userGUID","branchId","branchGUID","Person","selectPerson","openPerson","BrowserFourdApi","_accounting","_app","_calc","_communication","_document","_infotrack","_lawconnect","_person","_matter","_msteams","_register","_schema","_system","_card","_staff","setupHostMessageEventHandler","encode","Base64","stringify","protocol","assign","WebArea_RequestHandler","obj","sdkVersion","global","handleHostMessage","whitelistDomains","dev_au","test_au","live_au","liveb_au","test_uk","live_uk","test_us","live_us","test_ca","live_ca","devDomains","leapHostTestAppDomain","jd","iframe","postMessage","args","IframeWindow","newTab","parentWindow","opener","parent","registerMessageEventListener","_whiteListedHostDomains","addEventListener","receiveMessage","bind","event","origin","LeapHostSdkFactory","getInstance","getRequestContext","toLowerCase"],"mappings":"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"}